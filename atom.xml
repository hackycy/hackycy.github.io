<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小小源Bの博客</title>
  
  <subtitle>zj&amp;ycy</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hackycy.github.io/"/>
  <updated>2019-04-30T06:38:33.056Z</updated>
  <id>http://hackycy.github.io/</id>
  
  <author>
    <name>hackycy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Apache配置文件详解</title>
    <link href="http://hackycy.github.io/2019/04/29/Apache%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/04/29/Apache配置文件详解/</id>
    <published>2019-04-29T12:39:51.000Z</published>
    <updated>2019-04-30T06:38:33.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Centos7</li></ul><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>找到apache所在的配置文件，在本文环境下即centos7以yum源安装的httpd所在的配置环境路径为<code>/etc/httpd/conf</code>。也可以使用命令找到该配置文件。</p><blockquote><p>以下以本文中的配置路径为准，其他系统下路径可能不一致。<br>在 Ubnutu/Mac 上，apache 服务叫 apache2，而不是 httpd（在 Centos 上叫 httpd），主配置文件为 /etc/apache2/apache2.conf，我们打开 /etc/apache2/apache2.conf</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo find / -name 'httpd.conf'</span></span><br></pre></td></tr></table></figure><h1 id="Apache配置文件"><a href="#Apache配置文件" class="headerlink" title="Apache配置文件"></a>Apache配置文件</h1><p>Apache提供了灵活的web服务配置，理解其参数的含义很重要。</p><p>Apache配置文件中英文对照：<a href="http://www.cnblogs.com/adamite/p/apache_configuration.html" target="_blank" rel="noopener">http://www.cnblogs.com/adamite/p/apache_configuration.html</a></p><h2 id="Apache主目录"><a href="#Apache主目录" class="headerlink" title="Apache主目录"></a>Apache主目录</h2><p><code>ServerRoot &quot;/etc/httpd&quot;</code></p><h2 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h2><p><code>Listen 80</code></p><h2 id="加载动态模块"><a href="#加载动态模块" class="headerlink" title="加载动态模块"></a>加载动态模块</h2><p><code>LoadModule php5_module modules/libphp5.so</code></p><p>或者加载动态模块的配置文件</p><p><code>Include conf.modules.d/*.conf</code></p><h2 id="Apache的进程执行者"><a href="#Apache的进程执行者" class="headerlink" title="Apache的进程执行者"></a>Apache的进程执行者</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User apache</span><br><span class="line">Group apache</span><br></pre></td></tr></table></figure><h2 id="服务器域名"><a href="#服务器域名" class="headerlink" title="服务器域名"></a>服务器域名</h2><p>该项可配置也可不配置 <code>ServerName www.example.com:80</code></p><h2 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h2><p><code>DocumentRoot &quot;/var/www/html&quot;</code></p><h2 id="设置网站根目录的访问权限"><a href="#设置网站根目录的访问权限" class="headerlink" title="设置网站根目录的访问权限"></a>设置网站根目录的访问权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    #</span><br><span class="line">    # Possible values for the Options directive are &quot;None&quot;, &quot;All&quot;,</span><br><span class="line">    # or any combination of:</span><br><span class="line">    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span><br><span class="line">    #</span><br><span class="line">    # Note that &quot;MultiViews&quot; must be named *explicitly* --- &quot;Options All&quot;</span><br><span class="line">    # doesn&apos;t give it to you.</span><br><span class="line">    #</span><br><span class="line">    # The Options directive is both complicated and important.  Please see</span><br><span class="line">    # http://httpd.apache.org/docs/2.4/mod/core.html#options</span><br><span class="line">    # for more information.</span><br><span class="line">    #</span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # AllowOverride controls what directives may be placed in .htaccess files.</span><br><span class="line">    # It can be &quot;All&quot;, &quot;None&quot;, or any combination of the keywords:</span><br><span class="line">    #   Options FileInfo AuthConfig Limit</span><br><span class="line">    #</span><br><span class="line">    AllowOverride None</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # Controls who can get stuff from this server.</span><br><span class="line">    #</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>参数详解</strong></p><ul><li><code>Allow from all</code> 参数允许所有人访问<code>/var/www/html</code>下的资源</li><li><code>Deny from all</code> 参数拒绝所有人访问<code>/var/www/html</code>下的资源</li><li><code>Options Indexes</code> 参数:访问目录时,如果不存在默认首页则展示站点列表 该行建议改成 Options None</li><li><code>Options FollowSymLinks</code> 参数:是否允许快捷方式(ln -s 软连接)</li><li><code>Options MultiViews</code> 多视图,访问<code>/index</code>等同访问<code>index.php</code>或<code>index.html</code></li></ul><h3 id="Apache服务器访问权限控制包括"><a href="#Apache服务器访问权限控制包括" class="headerlink" title="Apache服务器访问权限控制包括:"></a>Apache服务器访问权限控制包括:</h3><h4 id="Apache-服务权限"><a href="#Apache-服务权限" class="headerlink" title="Apache 服务权限"></a>Apache 服务权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deny from all (**403 forbidden** error!)</span><br><span class="line">allow from all</span><br></pre></td></tr></table></figure><h4 id="Linux-系统权限"><a href="#Linux-系统权限" class="headerlink" title="Linux 系统权限"></a>Linux 系统权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selinux</span><br><span class="line">iptables</span><br><span class="line">httpd进程执行者对根目录的权限(**403 forbidden** error!)</span><br></pre></td></tr></table></figure><h2 id="设置目录默认首页"><a href="#设置目录默认首页" class="headerlink" title="设置目录默认首页"></a>设置目录默认首页</h2><p>优先级从左往右依次降低</p><p><code>DirectoryIndex index.html index.php</code></p><h2 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h2><p><code>ErrorLog &quot;logs/error_log&quot;</code></p><h2 id="访问日志"><a href="#访问日志" class="headerlink" title="访问日志"></a>访问日志</h2><p><code>CustomLog &quot;logs/access_log&quot; common</code></p><h2 id="解析php脚本"><a href="#解析php脚本" class="headerlink" title="解析php脚本"></a>解析php脚本</h2><p><code>AddType application/x-httpd-php .php</code></p><h2 id="控制错误页面的输出"><a href="#控制错误页面的输出" class="headerlink" title="控制错误页面的输出"></a>控制错误页面的输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#ErrorDocument 500 &quot;The server made a boo boo.&quot;</span><br><span class="line">#ErrorDocument 404 /missing.html</span><br><span class="line">#ErrorDocument 404 &quot;/cgi-bin/missing_handler.pl&quot;</span><br><span class="line">#ErrorDocument 402 http://www.example.com/subscription_info.html</span><br></pre></td></tr></table></figure><h2 id="包含外部配置文件"><a href="#包含外部配置文件" class="headerlink" title="包含外部配置文件"></a>包含外部配置文件</h2><p><code>Include extra/httpd-vhosts.conf</code></p><h2 id="虚拟目录"><a href="#虚拟目录" class="headerlink" title="虚拟目录"></a>虚拟目录</h2><p><code>http://localhost/mnt</code> mnt目录并不在网站根目录下,目录资源在<code>/tmp/mnt</code>目录下 在<code>/usr/local/apache2/etc/http.conf</code>文件里增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Alias /mnt &quot;/mnt/www&quot; # 虚拟目录（目录别名）</span><br><span class="line">&lt;Directory &quot;/mnt/www&quot;&gt;</span><br><span class="line">    Options none</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Deny from all # 拒绝所有</span><br><span class="line">    Allow from all # 允许所有</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><code>http://localhost/mnt</code> 重启apache后访问的资源便是 <code>/mnt/www</code>目录下的资源</p><h1 id="Apache虚拟主机配置"><a href="#Apache虚拟主机配置" class="headerlink" title="Apache虚拟主机配置"></a>Apache虚拟主机配置</h1><p>基于域名的虚拟主机，指定服务器IP（和可能的端口）使主机接受请求。用<code>NameVirtualHost</code>进行配置。 如果服务器上所有的IP地址都会用到，可以用<code>*</code>作为<code>NameVirtualHost</code>的参数。在<code>NameVirtualHost</code>指令中指明IP地址不会使服务器自动侦听那个IP地址。</p><h2 id="找到Apache的主配置文件httpd-conf"><a href="#找到Apache的主配置文件httpd-conf" class="headerlink" title="找到Apache的主配置文件httpd.conf"></a>找到Apache的主配置文件<code>httpd.conf</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd /etc/httpd/conf</span><br><span class="line"># vim httpd.conf</span><br></pre></td></tr></table></figure><p>我们搜索关键字<code>vhosts</code>，如果没有则在文件后添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Load vhost-config files in the &quot;/etc/httpd/vhost-conf.d&quot; directory if any</span><br><span class="line">Include vhost.d/*.conf</span><br></pre></td></tr></table></figure><blockquote><p>不使用官方原版的单个配置文件有个好处是 每个虚拟主机配置独立开来 减少操作的误差</p></blockquote><p>然后我们到<code>/etc/httpd/</code>目录下创建<code>vhost.d</code>文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir vhost.d</span></span><br><span class="line"><span class="comment"># cd vhost.d</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/etc/httpd/vhost.d</span><br><span class="line"><span class="comment"># vim www_sweetlover_cn_net.conf</span></span><br></pre></td></tr></table></figure><p><strong>添加以下内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin zjyzy@www.sweetlover.net.cn</span><br><span class="line">    DocumentRoot /var/www/html/sweetlover</span><br><span class="line">    ServerName www.sweetlover.net.cn</span><br><span class="line">    RewriteEngine On</span><br><span class="line">    Options All</span><br><span class="line">    &lt;Directory &quot;/var/www/html/sweetlover&quot;&gt;</span><br><span class="line">        # Options -Indexes FollowSymLinks </span><br><span class="line">        # 为了服务器的安全 Indexes参数一般要取消</span><br><span class="line">        Options FollowSymLinks </span><br><span class="line">        AllowOverride All</span><br><span class="line">        Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">    ErrorLog logs/www_sweetlover_net_cn-error_log</span><br><span class="line">    CustomLog logs/www_sweetlover_net_cn-access_log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p><strong>再次修改主配置文件<code>httpd.conf</code>,找到<code>Listen 80</code>，添加以下代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Listen 80</span><br><span class="line">NameVirtualHost *:80</span><br></pre></td></tr></table></figure><p><strong>我们再配置一个同域名下不同端口虚拟主机，配置<code>8080</code>端口下的</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/httpd/vhost.d</span></span><br><span class="line"><span class="comment"># vim www_sweetlover_net_cn_8080.conf</span></span><br></pre></td></tr></table></figure><p>针对<code>www_sweetlover_cn_net.conf</code>改变相应的配置，即修改<code>ServerName</code>为<code>www.sweetlover.net.cn:8080</code>，<code>DocumentRoot</code>和<code>Directory</code>修改为<code>/var/www/html/sweetlover@8080</code>。</p><p><strong>修改主配置文件，添加</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Listen 8080</span><br><span class="line">NameVirtualHost *:8080</span><br></pre></td></tr></table></figure><blockquote><p>由于环境下为虚拟机环境，直接访问ip加端口号即可访问到配置的网站。在上述配置的DocumentRoot下创建index.html或者index.php即可访问网页。</p></blockquote><p><strong>如果出现该错误</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[warn] default VirtualHost overlap on port 80, the first has precedence</span><br></pre></td></tr></table></figure><blockquote><p>打开apache主配置文件在任意位置添加一行,在 40行的Listion:80后添加一行内容如下:<code>NameVirtualHost *:80</code></p></blockquote><h1 id="Apache常见错误"><a href="#Apache常见错误" class="headerlink" title="Apache常见错误"></a>Apache常见错误</h1><h2 id="ServerName配置未填写或错误"><a href="#ServerName配置未填写或错误" class="headerlink" title="ServerName配置未填写或错误"></a>ServerName配置未填写或错误</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd: Could not reliably determine the server<span class="string">'s fully qualified domain name, using luo.centos6.5 for ServerName</span></span><br></pre></td></tr></table></figure><p>在Apache主配置文件<code>httpd.conf</code>的98行左右<code>#ServerName www.example.com:80</code>前面的<code>#</code>去掉，换成自己的域名或者ip地址。<br>例如：修改为<code>ServerName localhost:80</code>或者<code>ServerName 127.0.0.1:80</code></p><h2 id="403-Forbidden错误"><a href="#403-Forbidden错误" class="headerlink" title="403 Forbidden错误"></a>403 Forbidden错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">403 - Forbidden（禁止访问）,服务器拒绝请求</span><br><span class="line">    - forbidden request (matches a deny filter) =&gt; HTTP 403</span><br><span class="line">    - The request was a legal request, but the server is refusing to respond to it.</span><br></pre></td></tr></table></figure><p><strong>原因1：apache的配置文件没有对站点目录许可</strong></p><p>apache配置文件中没有对站点目录的权限许可配置，这通常是在初始化安装apahce后，更改了默认的apache站点目录导致。</p><p>解决办法可能是：通过给主配置文件增加<code>&lt;Directory &quot;/var/www/html&quot;&gt;&lt;/Directory&gt;</code>标签实现对指定目录的权限控制<br>典型如下(对/var/www目录下的文件允许访问)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www&quot;&gt;</span><br><span class="line">    Options -Indexes FollowSymLinks # 为了服务器的安全 Indexes参数一般要取消</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny # 允许未被明确拒绝的</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>原因2：站点目录下没有首页文件，而apache 的配置又禁止了目录的浏览</strong></p><p>站点目录下没有首页文件(index.php、index.html等默认文件)，而apache的配置又禁止了目录浏览（#Indexes参数:访问目录时,如果不存在默认首页则展示站点列表，该行建议改成<code>Options None</code>，也会提示403错误。<br>解决办法：在站点目录添加默认首页文件或者将配置文件中<code>Options Index</code>增加上。</p><p><strong>原因3：deny from all 禁用了所有来访者访问</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www&quot;&gt;</span><br><span class="line">    Options -Indexes FollowSymLinks # 为了服务器的安全 Indexes参数一般要取消</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny # 允许未被明确拒绝的</span><br><span class="line">    Deny from all</span><br><span class="line">    # Deny from </span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>解决办法：</strong>参考原因2解决方法配置<code>&lt;Directory &gt;&lt;/Directory&gt;</code>参数。</p><p><strong>站点目录权限问题</strong></p><p>站点目录需要apache的用户有访问权限，否则就会报403错误(一般web站点目录权限给755，站点文件权限给644，上传程序通过另外的上传服务器提供文件上传)。</p><h1 id="Apache服务器优化"><a href="#Apache服务器优化" class="headerlink" title="Apache服务器优化"></a>Apache服务器优化</h1><h2 id="错误页面优雅显示"><a href="#错误页面优雅显示" class="headerlink" title="错误页面优雅显示"></a>错误页面优雅显示</h2><p>可以将404 500等的错误信息页面重定向到网站首页或其他页面，提升用户体验。</p><p>编辑apache主配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim httpd.conf</span></span><br></pre></td></tr></table></figure></p><p>修改如下内容<code>ErrorDocument 404 http://www.domain.com</code></p><h2 id="mod-defalte文件压缩功能"><a href="#mod-defalte文件压缩功能" class="headerlink" title="mod_defalte文件压缩功能"></a><code>mod_defalte</code>文件压缩功能</h2><p>gzip是把文件先在服务器端进行压缩然后再传输，传输完毕后浏览器会重新对压缩过得内容进行解压缩。这样可以显著减少文件传输的大小，没有特殊情况，所有的文本内容都应该被gzip压缩（html,css,js,xml,txt..）</p><p>添加如下内容到<code>httpd.conf</code>或者<code>vhost.conf</code>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ifmodule mod_deflate.c&gt;</span><br><span class="line">    DeflateCompressionLevel 9</span><br><span class="line">    SetOutputFilter DEFLATE</span><br><span class="line">    AddOutputFilterByType DEFLATE text/html text/plain text/xml</span><br><span class="line">    AddOutputFilterByType DEFLATE application/javscript</span><br><span class="line">    AddOutputFilterByType DEFLATE text/css</span><br><span class="line">&lt;/ifmodule&gt;</span><br></pre></td></tr></table></figure><h2 id="更改apache的默认用户"><a href="#更改apache的默认用户" class="headerlink" title="更改apache的默认用户"></a>更改apache的默认用户</h2><p>创建apache用户，用于子进程和线程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -M -s /sbin/nologin webadmin</span></span><br></pre></td></tr></table></figure><p>编辑apache的主配置文件,添加或者修改如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User webadmin</span><br><span class="line">Group webadmin</span><br></pre></td></tr></table></figure><h2 id="开启apache防盗链功能"><a href="#开启apache防盗链功能" class="headerlink" title="开启apache防盗链功能"></a>开启apache防盗链功能</h2><p>主配置文件中增加如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule rewrite_module&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^http://domain.com/.*$ [NC]</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^http://www.domain.com/.*$ [NC]</span><br><span class="line"></span><br><span class="line">RewriteRule .*\.(gif|jpg|swf)$ http://www.domain.com [R,NC]</span><br><span class="line"># RewriteRule .*\.(gif|jpg|swf)$ http://www.domain.com/about/no.png [R,NC]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><h2 id="禁止目录Index"><a href="#禁止目录Index" class="headerlink" title="禁止目录Index"></a>禁止目录Index</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    Options -Indexes FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="禁止用户覆盖-重载-配置文件"><a href="#禁止用户覆盖-重载-配置文件" class="headerlink" title="禁止用户覆盖(重载)配置文件"></a>禁止用户覆盖(重载)配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None  # 禁止用户覆盖(重载)配置文件, All即为开启</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="关闭CGI-Common-Gateway-Interface-通用网关接口"><a href="#关闭CGI-Common-Gateway-Interface-通用网关接口" class="headerlink" title="关闭CGI(Common Gateway Interface 通用网关接口)"></a>关闭CGI(Common Gateway Interface 通用网关接口)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule alias_module&gt;</span><br><span class="line">ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">&lt;Directory &quot;/var/www/cgi-bin&quot;&gt;</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Options None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="避免使用-htaccess文件-分布式配置文件"><a href="#避免使用-htaccess文件-分布式配置文件" class="headerlink" title="避免使用.htaccess文件(分布式配置文件)"></a>避免使用.htaccess文件(分布式配置文件)</h2><p><strong>默认选项：</strong><code>AccessFileName .htaccess</code> 改为 <code># AccessFileName .htaccess</code></p><p>先考虑性能，如果AllowOverride启用了.haccess文件，则apache需要在每个目录中查找.htaccess文件，因此无论是否真正用到启用.htaccess文件都会导致服务器性能的下降。<br>　　另外对于每一个请求，都需要读取一次.htaccess文件。<br>　　其次是安全考虑，这样会允许用户自己修改服务器的配置，这可能会导致某些意想不到的修改，所以请认真考虑是否应道给予用户这样的特权。</p><blockquote><p>PHP开启路由重写下需要使用</p></blockquote><h2 id="apache-的安全模块"><a href="#apache-的安全模块" class="headerlink" title="apache 的安全模块"></a>apache 的安全模块</h2><p><code>mod_evasive20</code>( 防DDOS攻击)<br><code>mod_limittipconn</code>(针对单站点)配置<br><code>mod_security</code>(防止SQL注入)</p><h2 id="apache日志授予root-700权限"><a href="#apache日志授予root-700权限" class="headerlink" title="apache日志授予root 700权限"></a>apache日志授予root 700权限</h2><p><strong>不需要在日志目录给apache用户读或者写权限许可，因为apache的初始进程用户为root</strong></p><h2 id="禁止PHP解析指点站点目录"><a href="#禁止PHP解析指点站点目录" class="headerlink" title="禁止PHP解析指点站点目录"></a>禁止PHP解析指点站点目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Directory &quot;/var/www/html/bbs/Uploads&quot;&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">    php_flag engine off # 注意这行</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.kancloud.cn/curder/apache/91272" target="_blank" rel="noopener">https://www.kancloud.cn/curder/apache/91272</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Centos7&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;配置文件&lt;/h1&gt;&lt;p&gt;找到apache所在的配置文件，在本文环境下即centos7以yum源安装的httpd所在的配置环境路径为&lt;code&gt;/etc/httpd/conf&lt;/code&gt;。也可以使用命令找到该配置文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下以本文中的配置路径为准，其他系统下路径可能不一致。&lt;br&gt;在 Ubnutu/Mac 上，apache 服务叫 apache2，而不是 httpd（在 Centos 上叫 httpd），主配置文件为 /etc/apache2/apache2.conf，我们打开 /etc/apache2/apache2.conf&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="服务器运维" scheme="http://hackycy.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Apache" scheme="http://hackycy.github.io/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>Centos7搭建LAMP环境</title>
    <link href="http://hackycy.github.io/2019/04/29/Centos7%E6%90%AD%E5%BB%BALAMP%E7%8E%AF%E5%A2%83/"/>
    <id>http://hackycy.github.io/2019/04/29/Centos7搭建LAMP环境/</id>
    <published>2019-04-29T08:06:59.000Z</published>
    <updated>2019-04-29T09:26:10.874Z</updated>
    
    <content type="html"><![CDATA[<p>LAMP即：(Linux + Apache + Mysql + PHP)</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Centos7</li></ul><a id="more"></a><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install –y net-tools</span></span><br></pre></td></tr></table></figure><blockquote><p>完成后就可以使用ifconfig命令了</p></blockquote><p><strong>该环境下防火墙为关闭</strong></p><p>关闭命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br></pre></td></tr></table></figure><h1 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h1><p>httpd是Apache服务器的主程序，被设计为一个独立运行的后台进程，它会建立一个处理请求的子进程或线程的池。接下来安装httpd。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y httpd</span></span><br></pre></td></tr></table></figure><p>httpd目录路径为<code>/etc/httpd</code></p><p>完成后开启httpd服务，并且让其在重启系统时自启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start httpd.service</span></span><br><span class="line"><span class="comment"># systemctl enable httpd.service</span></span><br><span class="line"><span class="comment"># systemctl disable httpd.service</span></span><br><span class="line"><span class="comment"># systemctl stop httpd.service</span></span><br></pre></td></tr></table></figure><h1 id="安装Mysql5-7"><a href="#安装Mysql5-7" class="headerlink" title="安装Mysql5.7"></a>安装Mysql5.7</h1><p>本博客下参考链接：<br><a href="https://hackycy.github.io/2018/09/07/Centos7%E5%AE%89%E8%A3%85Mysql5-7/">https://hackycy.github.io/2018/09/07/Centos7%E5%AE%89%E8%A3%85Mysql5-7/</a></p><h1 id="安装PHP5-6"><a href="#安装PHP5-6" class="headerlink" title="安装PHP5.6"></a>安装PHP5.6</h1><p>查看Centos中是否有旧版本的PHP，如果有先进行卸载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep php</span></span><br><span class="line"></span><br><span class="line">php-common-5.4.16-46.el7.x86_64</span><br><span class="line">php-cli-5.4.16-46.el7.x86_64</span><br><span class="line">php-mysql-5.4.16-46.el7.x86_64</span><br><span class="line">php-pdo-5.4.16-46.el7.x86_64</span><br><span class="line">php-5.4.16-46.el7.x86_64</span><br></pre></td></tr></table></figure><p>然后使用<code>rpm -e</code>命令进行卸载</p><blockquote><p>如果包有依赖关系，所以卸载的顺序可按照提示现行卸载</p></blockquote><p>使用yum来安装php-fpm和比较新版本的php,nginx,MySQL-server的话， 首先得给yum添加几个源，CentOS默认的源里面软件比较旧，有些软件、库还没有。</p><p>需要先添加rpm源,php5.6可用第三方源：</p><p><code>rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></p><p><strong>安装php及其扩展</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install -y php56w.x86_64 php56w-cli.x86_64 php56w-common.x86_64 php56w-gd.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-mysql.x86_64 php56w-pdo.x86_64 php56w-fpm</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y php56w.x86_64  php56w-bcmath.x86_64 php56w-common.x86_64  php56w-dba.x86_64 php56w-devel.x86_64 php56w-embedded.x86_64 php56w-enchant.x86_64 php56w-gd.x86_64 php56w-imap.x86_64 php56w-interbase.x86_64 php56w-interbase.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-pdo.x86_64  php56w-mysql.x86_64 php56w-odbc.x86_64  php56w-opcache.x86_64 php56w-pecl-apcu.x86_64 php56w-phpdbg.x86_64 php56w-process.x86_64 php56w-xml.x86_64 php56w-pecl-imagick.x86_64</span></span><br></pre></td></tr></table></figure><p>php配置文件路径为<code>/etc/php.ini</code>。</p><p>也可以使用脚本查找</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo find / -name 'php.ini'</span></span><br></pre></td></tr></table></figure><p>安装完毕后<code>php -v</code>查看版本。如果想安装5.5或者7.0版本则直接替换数字即可</p><p>例如：php7.0</p><p>yum源<code>rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-mysql.x86_64 php70w-pdo.x86_64 php70w-fpm</span></span><br></pre></td></tr></table></figure><p><strong>如果出现以下错误</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: Failed dependencies:</span><br><span class="line"></span><br><span class="line">epel-release &gt;= 7 is needed by webtatic-release-7-3.noarch</span><br></pre></td></tr></table></figure><p>则先安装<code>epel-release</code>,安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</span></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/anycodes/article/details/11708479" target="_blank" rel="noopener">https://blog.csdn.net/anycodes/article/details/11708479</a></p><p><a href="https://blog.csdn.net/liubag/article/details/53138366" target="_blank" rel="noopener">https://blog.csdn.net/liubag/article/details/53138366</a></p><p><a href="https://blog.csdn.net/PP0897/article/details/56276690" target="_blank" rel="noopener">https://blog.csdn.net/PP0897/article/details/56276690</a></p><p><a href="https://blog.exfast.me/2016/05/centos-install-7-x-lamp-environment-linux-apache-mariadb-php/" target="_blank" rel="noopener">https://blog.exfast.me/2016/05/centos-install-7-x-lamp-environment-linux-apache-mariadb-php/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LAMP即：(Linux + Apache + Mysql + PHP)&lt;/p&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Centos7&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="服务器运维" scheme="http://hackycy.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Centos7" scheme="http://hackycy.github.io/tags/Centos7/"/>
    
      <category term="LAMP" scheme="http://hackycy.github.io/tags/LAMP/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-正则表达式基础</title>
    <link href="http://hackycy.github.io/2019/04/28/JavaScript-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80/"/>
    <id>http://hackycy.github.io/2019/04/28/JavaScript-正则表达式基础/</id>
    <published>2019-04-28T09:38:34.000Z</published>
    <updated>2019-04-28T09:39:21.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式基础"><a href="#正则表达式基础" class="headerlink" title="正则表达式基础"></a>正则表达式基础</h1><a id="more"></a><h2 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h2><p><code>https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp</code></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>正则表达式是为了解决字符串操作中一些比较麻烦的场景，比如字符串提取、字符串替换、字符串验证等<ul><li>常用于：表单验证：是否是一个数字、是一个电话号码、是一个邮箱。。。</li><li>字符串替换：</li><li>字符串查找</li></ul></li></ul><h2 id="正则表达式其实也是js里面的一个对象"><a href="#正则表达式其实也是js里面的一个对象" class="headerlink" title="正则表达式其实也是js里面的一个对象"></a>正则表达式其实也是js里面的一个对象</h2><h2 id="创建一个正则表达式"><a href="#创建一个正则表达式" class="headerlink" title="创建一个正则表达式"></a>创建一个正则表达式</h2><ul><li><code>var reg2=new RegExp(&quot;a&quot;);</code></li><li><code>var reg1=/a/;</code>   <ul><li>其中//是标记，a表示要匹配的字符</li></ul></li></ul><h2 id="正则表达式匹配"><a href="#正则表达式匹配" class="headerlink" title="正则表达式匹配"></a>正则表达式匹配</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/a/</span>;        <span class="comment">//匹配字符串中的a字符</span></span><br><span class="line">reg.test(<span class="string">"abc"</span>);        </span><br><span class="line"><span class="comment">//正则表达式的test用来检测字符串是否满足正则表达式的要求；</span></span><br><span class="line"><span class="comment">//由于"abc"中存在a，所以是符合要求的，所以这段代码的返回值为：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isTrue = reg.test(<span class="string">"coke"</span>);   <span class="comment">//由于"coke"中不存在a字符，所以不符合条件   --&gt;isTrue:false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/abc/</span>;     </span><br><span class="line">reg2.test(<span class="string">"adbcd"</span>); <span class="comment">//字符串中必然存在"abc"才符合要求，所以这段代码的返回值为false</span></span><br><span class="line"></span><br><span class="line">reg2.test(<span class="string">"1abc"</span>);  <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"abc123"</span>);    <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"abcabc"</span>);    <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="正则表达式特殊字符"><a href="#正则表达式特殊字符" class="headerlink" title="正则表达式特殊字符"></a>正则表达式特殊字符</h2><h3 id="字符类别"><a href="#字符类别" class="headerlink" title="字符类别"></a>字符类别</h3><ul><li><p>. 表示除了换行符(\r \n)以外的任意字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/./</span>;</span><br><span class="line">reg.test(<span class="string">"a"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"."</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"\r"</span>); <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"1\r"</span>);    <span class="comment">//存在一个1，不是换行符，所以结果为：true</span></span><br><span class="line">reg.test(<span class="string">"\r\n"</span>);   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意点：如果以后要匹配.字符，不要直接写.</span></span><br><span class="line"><span class="comment">//为了匹配qq邮箱，写了 /qq.com/ 这是一个错误的写法：</span></span><br><span class="line"><span class="comment">//=&gt;/qq.com/不仅匹配："qq.com"也匹配"qq3com" "qq@com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//解决方案：/qq\.com/  或者 /qq[.]com/</span></span><br></pre></td></tr></table></figure></li><li><p>\d 表示数字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\d/</span>;</span><br><span class="line">reg.test(<span class="string">"123abc"</span>); <span class="comment">//由于存在一个数字，所以结果为true</span></span><br><span class="line">reg.test(<span class="string">"abcde"</span>);  <span class="comment">//由于不存在任何数字，所以结果为false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展：</span></span><br><span class="line"><span class="keyword">var</span> _reg=<span class="regexp">/\d\d/</span>;</span><br><span class="line">_reg.test(<span class="string">"1b"</span>);    <span class="comment">//不存在2个连续数字，所以结果为：false</span></span><br><span class="line">_reg.test(<span class="string">"a12c"</span>);  <span class="comment">//存在2个连续数字，结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配手机号码：出现了连续11个数字</span></span><br><span class="line"><span class="keyword">var</span> isCellphoneNumber=<span class="regexp">/\d\d\d\d\d\d\d\d\d\d\d/</span>;</span><br></pre></td></tr></table></figure></li><li><p>案例：匹配手机号码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d\d\d\d\d\d\d\d\d\d\d/</span>;</span><br><span class="line">reg.test(<span class="string">"13532159091"</span>);    <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"17380889395"</span>);    <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"a7380889395"</span>);        <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>\D 是\d的取反结果，表示不是数字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\D/</span>;</span><br><span class="line">_reg.test(<span class="string">"123"</span>);   <span class="comment">//由于全是数字，所以结果为：false</span></span><br><span class="line">_reg.test(<span class="string">"123a"</span>);  <span class="comment">//存在一个字母，所以结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/123\D5/</span>;</span><br><span class="line">_reg.test(<span class="string">"12345"</span>); <span class="comment">//false</span></span><br><span class="line">_reg.test(<span class="string">"123b5"</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>\w 匹配字母、数字、下划线 ，三者满足其一即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\w/</span>;   </span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//存在数字，结果为：true</span></span><br><span class="line">reg.test(<span class="string">"a"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"1"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"_"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"-"</span>);  <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"."</span>);  <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">"1."</span>);   <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"_\r\n"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"\r\n"</span>);   <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>\W 是\w的取反</p></li><li><p>\s 表示一个空白字符（例如：\r \n \t 空格 。。。）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\s/</span>;</span><br><span class="line">reg.test(<span class="string">"abc def"</span>);   <span class="comment">//存在一个空白，结果为：true</span></span><br><span class="line">reg.test(<span class="string">"abc\r123"</span>);   <span class="comment">//存在一个\r，结果为：true</span></span><br><span class="line">reg.test(<span class="string">"abc"</span>);    <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>\S 是\s的取反</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\S/</span>;</span><br><span class="line">reg.test(<span class="string">" \r \n "</span>);   <span class="comment">//全是空白字符，结果为false</span></span><br><span class="line">reg.test(<span class="string">"123 abc"</span>);    <span class="comment">//存在一个空白，结果为true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/\s\S/</span>;</span><br><span class="line">reg3.test(<span class="string">" a"</span>);    <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"a "</span>);    <span class="comment">//false</span></span><br><span class="line">reg3.test(<span class="string">"a b"</span>);   <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>\ 转义字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/./</span>;    <span class="comment">//匹配除了换行符以外的任意字符</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\./</span>;   <span class="comment">//匹配.字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\//</span>;   <span class="comment">//匹配一个正斜杠：/</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/[/]/</span>;  <span class="comment">//。。。。。。。。。</span></span><br></pre></td></tr></table></figure></li><li><p>案例：匹配邮箱</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//asfas.com</span></span><br><span class="line"><span class="comment">//123ad.com</span></span><br><span class="line"><span class="comment">//ABC12.com</span></span><br><span class="line"><span class="comment">//abc_1.com</span></span><br><span class="line"><span class="keyword">var</span> reg =<span class="regexp">/\w\w\w\w\w\.com/</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="字符集合"><a href="#字符集合" class="headerlink" title="字符集合"></a>字符集合</h3><ul><li><p>[]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/[1a2b3]/</span>; <span class="comment">//匹配一个字符，这个字符必须是：1/a/2/b/3其中一种，如果是就表示满足，如果不是就不满足</span></span><br><span class="line">reg.test(<span class="string">"a"</span>);      <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"3"</span>);      <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"fg5678"</span>); <span class="comment">//一个符合要求的字符都不存在，结果为：false</span></span><br><span class="line">reg.test(<span class="string">"a999999"</span>);    <span class="comment">//结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//升级版</span></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/[123][abc]/</span>;  <span class="comment">//为了匹配连续2个字符，第一个字符必须在1/2/3之内，第二个字符必须在a/b/c之内</span></span><br><span class="line">reg2.test(<span class="string">"2a"</span>);    <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"3c"</span>);    <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"1basdfasf"</span>); <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"asdfasdf1c"</span>);    <span class="comment">//存在符合条件的1c，结果为：true</span></span><br><span class="line">reg2.test(<span class="string">"39"</span>);    <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/[0-9]/</span>;   <span class="comment">//匹配数字0-9之间，任何一个数字 等价于：/\d/</span></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/[a-z]/</span>;   <span class="comment">//匹配小写字母</span></span><br><span class="line"><span class="keyword">var</span> reg4=<span class="regexp">/[A-Z]/</span>;   <span class="comment">//匹配大写字母</span></span><br><span class="line"><span class="keyword">var</span> reg5=<span class="regexp">/[a-zA-Z]/</span>;<span class="comment">//匹配所有字母</span></span><br><span class="line"><span class="keyword">var</span> reg6=<span class="regexp">/[A-Za-z]/</span>;<span class="comment">//..........</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg10=<span class="regexp">/[0-9abc]/</span>;</span><br><span class="line">reg10.test(<span class="string">"3"</span>);<span class="comment">//true</span></span><br><span class="line">reg10.test(<span class="string">"five"</span>);<span class="comment">//false</span></span><br><span class="line">reg10.test(<span class="string">"banana"</span>);<span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>[^]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/[^123]/</span>;   <span class="comment">//匹配一个字符，但是这个字符既不是1 并且 不是2 并且 不是3 </span></span><br><span class="line">reg.test(<span class="string">"a"</span>);      <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"3"</span>);      <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//没有1，2，3以外的字符，结果为：false</span></span><br><span class="line">reg.test(<span class="string">"a123"</span>);   <span class="comment">//存在一个符合条件的a，所以结果为：true</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h3><ul><li>^ 表示字符串最左边</li><li>$ 表示字符串最右边<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/^abc/</span>;     <span class="comment">//表示以abc开头</span></span><br><span class="line">reg.test(<span class="string">"123abc123"</span>);  <span class="comment">//并不是以abc开头，结果为：false</span></span><br><span class="line">reg.test(<span class="string">"abc123"</span>);     <span class="comment">//以abc开头，结果为：true</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc$/</span>;     <span class="comment">//表示以abc结尾</span></span><br><span class="line">reg.test(<span class="string">"123abc"</span>); <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"abc123"</span>); <span class="comment">//结果为：false</span></span><br><span class="line">reg.test(<span class="string">"123bc"</span>);  <span class="comment">//结果为：false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匹配一个手机号码 (11位)--&gt;(1)+(10位数字)</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\d\d\d\d\d\d\d\d\d\d/</span>;</span><br><span class="line">reg.test(<span class="string">"13166668888a"</span>);   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/^1\d\d\d\d\d\d\d\d\d\d$/</span>;</span><br><span class="line">reg2.test(<span class="string">"13166668888a"</span>);   <span class="comment">//false</span></span><br><span class="line">reg2.test(<span class="string">"13166668888"</span>);    <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/^1[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/</span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/^abc$/</span>;    <span class="comment">//表示字符串abc</span></span><br><span class="line">reg.test(<span class="string">"abc"</span>);    <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"123abc"</span>); <span class="comment">//结果为：false</span></span><br></pre></td></tr></table></figure><h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><ul><li><p><code>*</code> 出现0次或多次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\d*/</span>;</span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"234"</span>);    <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/1\d*/</span>;</span><br><span class="line">reg3.test(<span class="string">"1"</span>); <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"123"</span>);   <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"a123"</span>)   <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"a123456b"</span>);   <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p><code>+</code> 出现1次或多次(至少一次)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\d+/</span>;</span><br><span class="line">reg.test(<span class="string">"1"</span>);      <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p><code>?</code> 出现0次或一次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\d?/</span>; </span><br><span class="line">reg.test(<span class="string">"12"</span>);     <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"1"</span>);      <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p><code>{3}</code> 出现3次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\w&#123;5&#125;/</span>;</span><br><span class="line">reg.test(<span class="string">"1abc"</span>);   <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"112345"</span>); <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"1abc12"</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p><code>{3,}</code> 至少出现3次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\d&#123;2,&#125;/</span>;</span><br><span class="line">reg.test(<span class="string">"12"</span>); <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"5"</span>);  <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p><code>{3,5}</code> 出现3-5次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc&#123;3&#125;/</span>;           <span class="comment">//表示匹配abccc</span></span><br><span class="line">reg.test(<span class="string">"123abccc123"</span>);    <span class="comment">//结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/(abc)&#123;2&#125;/</span>;    <span class="comment">//匹配abcabc</span></span><br></pre></td></tr></table></figure></li><li><p><code>|</code> 或者</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc|123/</span>;  <span class="comment">//表示匹配abc或者123</span></span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">"abc456"</span>); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg5=<span class="regexp">/^abc|123$/</span>;  <span class="comment">//匹配以abc开头，或者以123结尾</span></span><br><span class="line">reg5.test(<span class="string">"abcafsadfasd"</span>);<span class="comment">//true</span></span><br><span class="line">reg5.test(<span class="string">"afsdfasdf123"</span>);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg6=<span class="regexp">/^(abc|123)$/</span>;        <span class="comment">//匹配abc/123</span></span><br></pre></td></tr></table></figure></li><li><p><code>()</code> 分组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//010-88889999</span></span><br><span class="line"><span class="comment">//0576-12312312</span></span><br><span class="line"><span class="comment">//0895-1234567</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>;  <span class="comment">//匹配电话号码</span></span><br><span class="line"><span class="keyword">var</span> arr=<span class="string">"021-33335555"</span>.match(<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>)</span><br><span class="line">arr[<span class="number">0</span>]  <span class="comment">//全部</span></span><br><span class="line">arr[<span class="number">1</span>]  <span class="comment">//第一组：区号：021</span></span><br><span class="line">arr[<span class="number">2</span>]  <span class="comment">//第二组：号码：333355555</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>;</span><br><span class="line"><span class="string">"021-33335555"</span>.replace(<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>,<span class="string">'区号是：$1'</span>)</span><br><span class="line"><span class="comment">//区号是：021</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"[object Array]"</span>;</span><br><span class="line"><span class="keyword">var</span> str2=<span class="string">"[object Object]"</span>;</span><br><span class="line"><span class="keyword">var</span> str3=<span class="string">'[object Function]'</span>;</span><br><span class="line"><span class="keyword">var</span> str4=<span class="string">'[object Date]'</span>;</span><br><span class="line"></span><br><span class="line">str.replace(<span class="string">"[object "</span>,<span class="string">""</span>).replace(<span class="string">"]"</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"></span><br><span class="line">str.replace(<span class="regexp">/\[object /</span>,<span class="string">""</span>).replace(<span class="regexp">/\]/</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"></span><br><span class="line"><span class="comment">//这样的话正则表达式只匹配一次，也就是说后面的]换不掉</span></span><br><span class="line">str.replace(<span class="regexp">/\[object |\]/</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"><span class="comment">//如何解决？进行全局匹配</span></span><br><span class="line">str.replace(<span class="regexp">/\[object |\]/g</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"></span><br><span class="line">str.replace(<span class="regexp">/[^\s]+\s/</span>,<span class="string">""</span>).replace(<span class="regexp">/\]/</span>,<span class="string">""</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;正则表达式基础&quot;&gt;&lt;a href=&quot;#正则表达式基础&quot; class=&quot;headerlink&quot; title=&quot;正则表达式基础&quot;&gt;&lt;/a&gt;正则表达式基础&lt;/h1&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://hackycy.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://hackycy.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一次仿写jQuery库的简单代码</title>
    <link href="http://hackycy.github.io/2019/04/25/%E4%B8%80%E6%AC%A1%E4%BB%BF%E5%86%99jQuery%E5%BA%93%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%A3%E7%A0%81/"/>
    <id>http://hackycy.github.io/2019/04/25/一次仿写jQuery库的简单代码/</id>
    <published>2019-04-25T14:39:54.000Z</published>
    <updated>2019-04-25T14:42:16.015Z</updated>
    
    <content type="html"><![CDATA[<p><strong>功能的实现都很简单，但是是需要学着别人的思想</strong></p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//模块化：内部的东西对外是封闭的，只暴露出$,jQuery操作。</span></span></span><br><span class="line"><span class="javascript">        (<span class="function"><span class="keyword">function</span> (<span class="params">global</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">jQuery</span>(<span class="params">selector</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// //获取页面中所有指定的元素</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// const elements = document.querySelectorAll(selector);</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(elements);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// //但是随着$()操作的增加，将会产生无数个css方法，浪费了很多的内存</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// elements.css = function()&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     console.log('query css');</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// return elements;</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> _init = jQuery.prototype.init;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(jQuery.prototype);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> jQuery.prototype.init(selector);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 为了方便少写prototype单词，简化</span></span></span><br><span class="line"><span class="undefined">            jQuery.fn = jQuery.prototype = &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">constructor</span>: jQuery,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                init: <span class="function"><span class="keyword">function</span> (<span class="params">selector</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// // 把查找到的DO吗元素放在变量中</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// const elements = document.querySelectorAll(selector);</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// // this.elements = elements;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// // 但是jQuery为了操作方便，所以将DOM元素放在了自己身上，也就是伪对象数组</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// for (let i = 0; i &lt; elements.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//     this[i] = elements[i];</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// this.length = elements.length;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//判断如果是一个string，则查找</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (jQuery.type(selector) === <span class="string">'string'</span>) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> elements = <span class="built_in">document</span>.querySelectorAll(selector);</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// this.elements = elements;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 但是jQuery为了操作方便，所以将DOM元素放在了自己身上，也就是伪对象数组</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>[i] = elements[i];</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.length = elements.length;</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123; <span class="comment">//如果是一个对象，则直接赋值</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>[<span class="number">0</span>] = selector;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.length = <span class="number">1</span>;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// css(attr, value) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     for (let i = 0; i &lt; this.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         this[i].style[attr] = value;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            jQuery.fn.init.prototype = jQuery.fn;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// jQuery插件编写之路</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 无法使用箭头函数</span></span></span><br><span class="line"><span class="javascript">            jQuery.fn.extend = jQuery.extend = <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (args.length &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> target, source = <span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                source = [...args];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// $.extend | $.fn.extend</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (args.length == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    target = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// args[0].extend</span></span></span><br><span class="line"><span class="undefined">                    target = args[0];</span></span><br><span class="line"><span class="undefined">                    source.splice(0, 1);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 判断当前是谁</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// if (this === jQuery) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     target = args[0];</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     // 删除第一个元素</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     source.splice(0, 1);</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125; else &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     target = this;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(target);</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(source);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// source.forEach((item,index) =&gt; &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     for (const key in item) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         target[key] = item[key];</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">//for循环优化</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。 有兼容性问题</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">Object</span>.assign(target, ...source);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> target;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//添加一些工具类方法：$.xxx()</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//$.ajax  $.post $.get  $.type $.each</span></span></span><br><span class="line"><span class="undefined">            jQuery.extend(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//$.each([1,3,5],function(index,value)&#123;&#125;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//$.each(&#123; age:18,height:200 &#125;,function(key,value)&#123;&#125;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//可以遍历数组和对象</span></span></span><br><span class="line"><span class="undefined">                each(target, callback) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//对象有两种，数组对象和普通数组</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//不仅仅可以遍历数组，也可以遍历伪数组</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//&#123; length:0 &#125;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//&#123; 0:100,length:1 &#125;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//&#123; 0:"a",1:"b",2:"c",length:3 &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> ((length <span class="keyword">in</span> target) &amp;&amp; target.length &gt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; target.length; i++) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                            callback.call(target[i], i, target[i]);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 普通对象</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// //获取到p1自身拥有的属性组成数组</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// Object.keys(target).forEach((value,index)=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//     console.log(value,index);</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> target) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span></span><br><span class="line"><span class="undefined">                                callback.call(target[key], key, target[key]);</span></span><br><span class="line"><span class="undefined">                            &#125;</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                type(target) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log('type');</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> type = <span class="built_in">Object</span>.prototype.toString.call(target);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> type.replace(<span class="string">"[object "</span>, <span class="string">""</span>)</span></span><br><span class="line"><span class="javascript">                        .replace(<span class="string">"]"</span>, <span class="string">""</span>)</span></span><br><span class="line"><span class="undefined">                        .toLowerCase();</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                ajax() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'ajax'</span>);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> events = [</span></span><br><span class="line"><span class="javascript">                <span class="comment">//&#123; ele:div1,type:"click",callback:function()&#123;&#125; &#125;,</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//&#123; ele:div1,type:"click",callback:function()&#123;&#125; &#125;</span></span></span><br><span class="line"><span class="undefined">            ];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            jQuery.fn.extend(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 遍历自己</span></span></span><br><span class="line"><span class="undefined">                each(callback) &#123;</span></span><br><span class="line"><span class="javascript">                    jQuery.each(<span class="keyword">this</span>, callback);</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//1、获取样式$("div").css("color")  只能获取到第一个div的颜色</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//2、设置样式</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//      $("div").css("color","red") 设置每一个div的字体颜色</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//      $("div").css(&#123; color:"red","backgroundColor","blue" &#125;)</span></span></span><br><span class="line"><span class="undefined">                css(...args) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (args.length === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 一个参数时分两种情况，如果是一个字符串，则为获取属性，但是如果为一个对象则为设置样式</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (jQuery.type(args[<span class="number">0</span>]) === <span class="string">'string'</span>) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// console.log(this); this指向$("div"),init方法放回的元素</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//不管元素有多少个，只取第一个</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> $<span class="keyword">this</span> = <span class="keyword">this</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> style = <span class="built_in">window</span>.getComputedStyle($<span class="keyword">this</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// console.log(style);</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span> style[args[<span class="number">0</span>]];</span></span><br><span class="line"><span class="javascript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// 设置样式,需要遍历选择器</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">// jQuery.each(this, function()&#123;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//     let $this = this;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//     jQuery.each(args[0], function(key, value)&#123;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//         $this.style[key] = value;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//     &#125;)</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//优化上述代码</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> _that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">                            jQuery.each(args[<span class="number">0</span>], <span class="function"><span class="keyword">function</span> (<span class="params">key, value</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                                _that.css(key, value);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">//链式调用</span></span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 参数为两个，则为一个属性，一个属性值</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 设置单个样式</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// let key = args[0];</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// let value = args[1];</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.style[args[<span class="number">0</span>]] = args[<span class="number">1</span>];</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">//链式调用</span></span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                show() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.css(<span class="string">'display'</span>, <span class="string">'block'</span>);</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                hide() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.css(<span class="string">'display'</span>, <span class="string">'none'</span>);</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                toggle() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> _that = <span class="keyword">this</span>; <span class="comment">//this -&gt; jQuery</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// this -&gt; dom </span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// if (jQuery(this).css('display') === 'block') &#123;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//     jQuery(this).css('display', 'none');</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// &#125;else &#123;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//     jQuery(this).css('display', 'block');</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//优化上述代码</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> $<span class="keyword">this</span> = jQuery(<span class="keyword">this</span>);</span></span><br><span class="line"><span class="javascript">                        $<span class="keyword">this</span>.css(<span class="string">'display'</span>) === <span class="string">'block'</span> ? $<span class="keyword">this</span>.hide() : $<span class="keyword">this</span>.show();</span></span><br><span class="line"><span class="undefined">                    &#125;)</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 添加event</span></span></span><br><span class="line"><span class="undefined">                on(type, callback) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// console.log(this);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.addEventListener(type, callback);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                        events.push(&#123;</span></span><br><span class="line"><span class="javascript">                            ele: <span class="keyword">this</span>,</span></span><br><span class="line"><span class="undefined">                            type: type,</span></span><br><span class="line"><span class="undefined">                            callback: callback</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">//链式编程</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//解绑绑定：$("div").off("click")：表示解除当前元素的所有的单击事件</span></span></span><br><span class="line"><span class="undefined">                off(type) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> _that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> es = events.filter(<span class="function"><span class="keyword">function</span> (<span class="params">e, i</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(i, e);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//查看绑定的元素是否存在events数组中，并且有没有该元素绑定的事件,并且移除</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> isCurent =  e.ele === _that &amp;&amp; e.type === type</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (isCurent) &#123;</span></span><br><span class="line"><span class="undefined">                                events.splice(i, 1);</span></span><br><span class="line"><span class="undefined">                            &#125;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span> isCurent;</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (es.length &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//可能存在多次绑定</span></span></span><br><span class="line"><span class="javascript">                        es.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(e, _that);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> &#123; callback &#125; = e;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                            _that.removeEventListener(type, callback);</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(events);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// function F(selector) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     // 把查找到的DO吗元素放在变量中</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     const elements = document.querySelectorAll(selector);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     // this.elements = elements;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     // 但是jQuery为了操作方便，所以将DOM元素放在了自己身上，也就是伪对象数组</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     for (let i = 0; i &lt; elements.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         this[i] = elements[i];</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     this.length = elements.length;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// F.prototype.css = function(attr, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(this.elements.length);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     for(let i=0; i&lt;this.elements.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         this.elements[i].style[attr] = value;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// F.prototype = &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     constructor: F,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     css(attr, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         for (let i = 0; i &lt; this.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             this[i].style[attr] = value;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 相当于赋值给顶层对象window的属性</span></span></span><br><span class="line"><span class="undefined">            global.$ = global.jQuery = jQuery;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        &#125;)(<span class="built_in">window</span>); <span class="comment">//自调用函数</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log($);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').css('color', 'red');</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('.header').css('color', 'blue');</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var p = &#123;&#125;;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.extend(p, &#123; a: 1 &#125;, &#123; b: 2 &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log(p);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.fn.extend(&#123; a: 0 &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log($.fn);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.each(&#123; a: 'a', b: 'b' &#125;, function (key, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(key, value);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.each(&#123; 0: 100, 1: 200, 2: 300, length: 3 &#125;, function (key, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(key, value);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.each([1, 2, 3], function (key, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(key, value);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log($.type(&#123; a: 1 &#125;));</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').css(&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     'color': 'red',</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     'backgroundColor': 'blue'</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').css('color', 'red');</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('.header').hide();</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').toggle();</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.footer'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'footer'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.header'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'header'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.section'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'.footer'</span>).off(<span class="string">'click'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'remove'</span>)</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('.header').off('click');</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: rebeccapurple;</span></span><br><span class="line"><span class="css">            <span class="comment">/* display: none; */</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;功能的实现都很简单，但是是需要学着别人的思想&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://hackycy.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://hackycy.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>hexo next主题首页隐藏指定文章</title>
    <link href="http://hackycy.github.io/2019/04/23/hexo-next%E4%B8%BB%E9%A2%98%E9%A6%96%E9%A1%B5%E9%9A%90%E8%97%8F%E6%8C%87%E5%AE%9A%E6%96%87%E7%AB%A0/"/>
    <id>http://hackycy.github.io/2019/04/23/hexo-next主题首页隐藏指定文章/</id>
    <published>2019-04-23T04:24:19.000Z</published>
    <updated>2019-04-23T04:48:44.447Z</updated>
    
    <content type="html"><![CDATA[<p>因为博客下混合了我技术类和生活类的文章，但是首页我只想显示技术类，所以记录下做法。</p><a id="more"></a><p><strong>具体做法</strong></p><p>找到<code>themes⁩</code> ▸ <code>⁨next</code>⁩ ▸ <code>⁨layout</code>⁩文件夹下的<code>index.swig</code>文件</p><p><img src="index1.png" alt=""></p><p>定位修改<code>post_template.render</code></p><p>修改成以下代码,其中修改的是为文章的首页显示添加判断条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.visible !== &apos;hide&apos; %&#125;</span><br><span class="line">   &#123;&#123; post_template.render(post, true) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>即修改后</p><p><img src="index2.png" alt=""></p><p><strong>在新的post中添加visible字段来控制是否首页显示</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: post title</span><br><span class="line">date: 2019-04-23 12:24:19</span><br><span class="line">tags:</span><br><span class="line"><span class="code">    - hexo</span></span><br><span class="line">categories:</span><br><span class="line"><span class="code">    - hexo</span></span><br><span class="line">visible: hide</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">.........</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为博客下混合了我技术类和生活类的文章，但是首页我只想显示技术类，所以记录下做法。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hackycy.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://hackycy.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>老司机带带我——翻车牌</title>
    <link href="http://hackycy.github.io/2019/04/23/%E8%80%81%E5%8F%B8%E6%9C%BA%E5%B8%A6%E5%B8%A6%E6%88%91%E2%80%94%E2%80%94%E7%BF%BB%E8%BD%A6%E7%89%8C/"/>
    <id>http://hackycy.github.io/2019/04/23/老司机带带我——翻车牌/</id>
    <published>2019-04-23T04:23:50.000Z</published>
    <updated>2019-04-29T06:18:09.956Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="老司机不带你" />    <label for="pass">老司机不带你</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      老司机不带你
    
    </summary>
    
      <category term="程序人生" scheme="http://hackycy.github.io/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML5移动端自适应方案——媒体查询+rem方案</title>
    <link href="http://hackycy.github.io/2019/04/22/HTML5%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2-rem%E6%96%B9%E6%A1%88/"/>
    <id>http://hackycy.github.io/2019/04/22/HTML5移动端自适应方案——媒体查询-rem方案/</id>
    <published>2019-04-22T08:48:42.000Z</published>
    <updated>2019-04-22T08:49:44.306Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>虽然H5的页面与PC的Web页面相比简单了不少，但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。</p><a id="more"></a><blockquote><p>本文中不涉及一些viewport、dpr等的概念介绍，详细了解可以再查看本博客中另一篇文章有具体讲解这些概念。</p></blockquote><p><img src="devicesmetrics.png" alt=""></p><p>数据来源<a href="https://material.io/tools/devices/" target="_blank" rel="noopener">Device Metrics</a></p><p>早期移动端开发，对于终端设备适配问题只属于Android系列，只不过很多设计师常常忽略Android适配问题，只出一套iOS平台设计稿。但随着iPhone6，iPhone6+的出现，从此终端适配问题不再是Android系列了，也从这个时候让移动端适配全面进入到“杂屏”时代。</p><p><img src="shipei.png" alt=""></p><p>上图来自于paintcodeapp.com</p><h1 id="视觉稿"><a href="#视觉稿" class="headerlink" title="视觉稿"></a>视觉稿</h1><p>在前端开发之前，视觉MM会给我们一个psd文件，称之为视觉稿。</p><p>对于移动端开发而言，为了做到页面高清的效果，视觉稿的规范往往会遵循以下两点：</p><p>首先，选取一款手机的屏幕宽高作为基准(以前是iphone4的320×480，现在更多的是iphone6的375×667)。<br>对于retina屏幕(如: dpr=2)，为了达到高清效果，视觉稿的画布大小会是基准的2倍，也就是说像素点个数是原来的4倍（对iphone6而言：原先的375×667，就会变成750×1334）。</p><h1 id="设计师和前端开发的适配协作基本思路"><a href="#设计师和前端开发的适配协作基本思路" class="headerlink" title="设计师和前端开发的适配协作基本思路"></a>设计师和前端开发的适配协作基本思路</h1><p>出自手淘：</p><ul><li>选择一种尺寸作为设计和开发基准</li><li>定义一套适配规则，自动适配剩下的两种尺寸(其实不仅这两种，你懂的)</li><li>特殊适配效果给出设计效果</li></ul><p>手淘设计师常选择iPhone6作为基准设计尺寸，交付给前端的设计尺寸是按750px * 1334px为准(高度会随着内容多少而改变)。前端开发人员通过一套适配规则自动适配到其他的尺寸。</p><h1 id="EM和REM"><a href="#EM和REM" class="headerlink" title="EM和REM"></a>EM和REM</h1><p>使用REM+媒体查询方式进行编写自适应方案时，先来了解下EM和REM是什么？</p><h2 id="EM"><a href="#EM" class="headerlink" title="EM"></a>EM</h2><p>em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。</p><p><strong>EM的特点</strong></p><ul><li>em的值并不是固定的</li><li>em会继承父级元素的字体大小</li></ul><blockquote><p>注意：任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em,10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了。<br>所以我们在写CSS的时候，需要注意两点：</p><ol><li>body选择器中声明Font-size=62.5%；</li><li>将你的原来的px数值除以10，然后换上em作为单位；</li><li>重新计算那些被放大的字体的em数值。避免字体大小的重复声明。<br>也就是避免1.2 * 1.2= 1.44的现象。比如说你在#content中声明了字体大小为1.2em，那么在声明p的字体大小时就只能是1em，而不是1.2em, 因为此em非彼em，它因继承#content的字体高而变为了1em=12px。</li></ol></blockquote><h2 id="REM"><a href="#REM" class="headerlink" title="REM"></a>REM</h2><p><code>rem</code>是<code>CSS3</code>新增的一个相对单位（root em，根em），这个单位引起了广泛关注。这个单位与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。目前，除了IE8及更早版本外，所有浏览器均已支持rem。</p><p>简单的理解，rem就是相对于根元素<code>&lt;html&gt;</code>的<code>font-size</code>来做计算。而我们的方案中使用rem单位，是能轻易的根据<code>&lt;html&gt;</code>的<code>font-size</code>计算出元素的盒模型大小。而这个特色对我们来说是特别的有益处。</p><h1 id="媒体查询-Rem实现自适应方案"><a href="#媒体查询-Rem实现自适应方案" class="headerlink" title="媒体查询 + Rem实现自适应方案"></a>媒体查询 + Rem实现自适应方案</h1><p>放上代码中所使用的设计稿和图片，自行右键保存。图片来源<a href="https://github.com/amfe/article/issues/17" target="_blank" rel="noopener">手淘H5适配方案</a></p><p><img src="designpsd.jpeg" alt=""></p><p><img src="grayscale.jpeg" alt=""></p><p><img src="haibao.jpg" alt=""></p><p>该设计图是按照iPhone6作为基准设计尺寸，iPhone6的分辨率为<code>750pt * 1334pt</code>，iPhone6的DPR为2，则CSS像素则缩小为设计稿尺寸的<code>1/2</code>。既设计稿量出某宽为20px，则css像素则转为为10px。</p><p>首先按照设计稿尺寸还原页面，为了方便理解，首先使用px还原页面，在iPhone6下显示设计。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">            -webkit-tap-highlight-color: transparent;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f5294c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* background-color: #f5294c; */</span></span></span><br><span class="line"><span class="undefined">            min-width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.header</span> <span class="selector-tag">h1</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0 5px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">            padding: 5px 0;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="undefined">            width: 88px;</span></span><br><span class="line"><span class="undefined">            height: 88px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="undefined">            padding: 5px 8px 0 8px;</span></span><br><span class="line"><span class="undefined">            vertical-align: top;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">            font-size: 13px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="undefined">            margin: 9px 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 10px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fffffd</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.intro</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffb09b</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            right: 9px;</span></span><br><span class="line"><span class="undefined">            bottom: 7px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">            font-size: 13px;</span></span><br><span class="line"><span class="undefined">            padding: 5px 18px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f42a4b</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 海报 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/haibao.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写后页面显示，当然这里是举例，有些像素为了方便计算，只是大概的测量了一下，这里使用的测量工具为<code>Mark Man</code>。</p><p><img src="px_h5.gif" alt=""></p><p>然后看看其他设备显示的效果，因为这里使用的是<code>流式布局</code>，即百分比布局，页面还没有说变形很严重，但是在iPhone5设备上或者更小的设备上显示就会显得页面元素偏大，而在一些ipad就显得更为难受了。(换成其他DPR下情况也是相同)。</p><p>这里不讲解媒体查询是什么和具体语法，详细了解可以查看<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries" target="_blank" rel="noopener">MDN</a></p><p>而该方案就是基于rem的原理，针对不同屏幕尺寸的改变来改变根节点html的<code>font-size</code>的大小。</p><p>这里总结出了一个公式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-size(rem) = 预设font-size(rem)基准值 / （设计稿宽度 / DPR） * 设备宽度</span><br></pre></td></tr></table></figure><p>该公式的原理就是先根据设计稿的尺寸和DPR求出设备的宽度，根据该设备的宽度下预设一个<code>font-size</code>的基准值，再求出该设备下的宽度与预设基准值的比值，然后其他设备下的设备宽度除以该基准值就可以求出其他设备下的html的<code>font-size</code>的值。所以上述公式是由下条公式变化得来的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-size(rem) = 设备宽度 / （（设计稿宽度 / DPR） / 预设font-size(rem)基准值）</span><br></pre></td></tr></table></figure><p>按照本文中设计稿为iPhone6的尺寸设计，我们以设计稿下iPhone6为<code>375px</code>的html的<code>font-size</code>预设基准值为<code>100px</code>（方便计算）,即<code>1rem = 100px</code>，则其他设备像素下html的<code>font-size</code>的值为</p><ul><li>iPhone5的设备像素320px:<code>100 / (750 / 2) * 320 = 85.333px</code></li><li>iPhone6的设备像素375px:<code>100px</code></li><li>iPhone6Plus的设备像素414px:<code>100 / (750 / 2) * 414 = 110.4px</code></li></ul><p>只要以设计稿下预设的基准值再根据其他屏幕来换算计算出其他设备下的html的<code>font-size</code>大小即可。</p><p>页面中再根据<code>1rem = 100px</code>将页面中px单位换算成rem即可。再添加上根据设备宽度的媒体查询设置根节点的<code>font-size</code>大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* base-rem = 100px */</span></span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">320px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">85.333px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">360px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">96px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">375px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">414px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">110.4px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">480px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">128px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">540px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">144px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">768px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">204.8px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>更改后整体页面代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="comment">/* base-rem = 100px */</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">320px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 85<span class="selector-class">.333px</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">360px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 96px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">375px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 100px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">414px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 110<span class="selector-class">.4px</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">480px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 128px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">540px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 144px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 204<span class="selector-class">.8px</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f5294c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* background-color: #f5294c; */</span></span></span><br><span class="line"><span class="undefined">            min-width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.header</span> <span class="selector-tag">h1</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0 0<span class="selector-class">.05rem</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0<span class="selector-class">.05rem</span> 0;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 0<span class="selector-class">.88rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span>: 0<span class="selector-class">.88rem</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0<span class="selector-class">.05rem</span> 0<span class="selector-class">.08rem</span> 0 0<span class="selector-class">.08rem</span>;</span></span><br><span class="line"><span class="undefined">            vertical-align: top;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 0<span class="selector-class">.13rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span>: 0<span class="selector-class">.09rem</span> 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 0<span class="selector-class">.1rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fffffd</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.intro</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffb09b</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">right</span>: 0<span class="selector-class">.09rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">bottom</span>: 0<span class="selector-class">.07rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 0<span class="selector-class">.13rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0<span class="selector-class">.05rem</span> 0<span class="selector-class">.18rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f42a4b</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 海报 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/haibao.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>适配后</p><p><img src="rem_h5_dpr2.gif" alt="gif"></p><p>图片较大，可自行运行代码在dpr为1、2、3下再更改屏幕尺寸，运行结果良好，可谓够用。</p><p>为什么可谓够用，该方案有缺点：通过设备宽度范围区间这样的媒体查询来动态改变rem基准值，其实不够精确，比如：宽度为360px 和 宽度为320px的手机，因为屏宽在同一范围区间内(&lt;375px)，所以会被同等对待(rem基准值相同)，而事实上他们的屏幕宽度并不相等，它们的布局也应该有所不同。最终，结论就是：这样的做法，没有做到足够的精确，但是够用。</p><h1 id="Less优化"><a href="#Less优化" class="headerlink" title="Less优化"></a>Less优化</h1><p>如果项目中使用Less或者Sass等CSS预处理器可以更加简化代码的编写与计算量。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要适配的设备宽度数组</span></span><br><span class="line"><span class="variable">@adapterDeviceWidthList:</span> <span class="number">320px</span>, <span class="number">360px</span>, <span class="number">375px</span>, <span class="number">414px</span>, <span class="number">480px</span>, <span class="number">540px</span>, <span class="number">640px</span>, <span class="number">750px</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@psdWidth:</span> <span class="number">750</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@psdDpr:</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@baseFontSize:</span> <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@deviceLength:</span> length(<span class="variable">@adapterDeviceWidthList</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.adapterMixin</span>(<span class="variable">@index</span>) <span class="keyword">when</span> (<span class="variable">@index</span> &lt;= <span class="variable">@deviceLength</span>) &#123;</span><br><span class="line">    <span class="keyword">@media</span> (<span class="attribute">min-width</span>: extract(<span class="variable">@adapterDeviceWidthList</span>, <span class="variable">@index</span>)) &#123;</span><br><span class="line">        <span class="selector-tag">html</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">100</span> / (<span class="variable">@psdWidth</span> / <span class="variable">@psdDpr</span>) * extract(<span class="variable">@adapterDeviceWidthList</span>, <span class="variable">@index</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.adapterMixin</span>(<span class="variable">@index</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.adapterMixin</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>生成的css为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">320px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">85.33333333px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">360px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">96px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">375px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">414px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">110.4px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">480px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">128px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">540px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">144px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">640px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">170.66666667px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">750px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用less维护起来就方便很多，只要维护<code>adapterDeviceWidthList</code>中设备的宽度即可，如果设计稿开始有变化更改变量即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;虽然H5的页面与PC的Web页面相比简单了不少，但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hackycy.github.io/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://hackycy.github.io/tags/HTML/"/>
    
      <category term="移动端适配" scheme="http://hackycy.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Less入门</title>
    <link href="http://hackycy.github.io/2019/04/15/Less%E5%85%A5%E9%97%A8/"/>
    <id>http://hackycy.github.io/2019/04/15/Less入门/</id>
    <published>2019-04-15T15:48:32.000Z</published>
    <updated>2019-04-16T06:39:57.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Less是什么"><a href="#Less是什么" class="headerlink" title="Less是什么"></a>Less是什么</h1><p>LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承， 运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。</p><p><a href="https://www.html.cn/doc/less/features/#mixin-guards-feature" target="_blank" rel="noopener">Less官方文档</a></p><a id="more"></a><h1 id="Less安装"><a href="#Less安装" class="headerlink" title="Less安装"></a>Less安装</h1><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>引入你的<code>.less</code>样式文件的时候要设置<code>rel</code>属性值为<code>“stylesheet/less”</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet/less"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"styles.less"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下载<code>less.js</code>,<a href="https://www.html.cn/doc/less/" target="_blank" rel="noopener">下载地址</a>,在<head><meta name="generator" content="Hexo 3.8.0"> 中引入:</head></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"less.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意你的less样式文件一定要在引入less.js前先引入。<br>在浏览器中使用less.js开发是很好的，但不推荐用于生产环境中。</p></blockquote><p><strong>特别注意</strong></p><ul><li>确保包涵 <code>.less</code> 样式表在 <code>less.js</code> 脚本之前</li><li>当你引入多个 <code>.less</code> 样式表时，它们都是独立编译的。所以，在每个文件中定义的变量、混合、命名空间都不会被其它的文件共享。</li></ul><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>在服务器端安装<code>LESS</code>的最简单方式就是通过<code>npm(node 的包管理器)</code>, 像这样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install less</span><br></pre></td></tr></table></figure><p>如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install less@latest</span><br></pre></td></tr></table></figure><h3 id="命令行使用"><a href="#命令行使用" class="headerlink" title="命令行使用"></a>命令行使用</h3><p>一旦安装完成，就可以在命令行中调用，例如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lessc styles.less</span><br></pre></td></tr></table></figure><p>这样的话编译后的CSS将会输出到 ‘stdout’ 中，你可以选择将这个输出重定向到文件中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lessc styles.less &gt; styles.css</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lessc -v</span><br><span class="line">$ lessc --version</span><br></pre></td></tr></table></figure><p>如果你想输出一个压缩后的CSS，只要加到<code>-x</code>选项即可。如果你想要更NB的压缩，你也可以选择使用 <a href="https://github.com/GoalSmashers/clean-css" target="_blank" rel="noopener">Clean CSS</a>压缩器，只要加上<code>--clean-css</code> 插件即可。</p><p>直接运行lessc，不带任何参数将可以看到所有的命令行参数或 查看<a href="https://www.html.cn/doc/less/usage/index.html" target="_blank" rel="noopener">用法</a>.</p><h3 id="代码中使用"><a href="#代码中使用" class="headerlink" title="代码中使用"></a>代码中使用</h3><p>你可以在Node中调用编译器，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> less = <span class="built_in">require</span>(<span class="string">'less'</span>);</span><br><span class="line"></span><br><span class="line">less.render(<span class="string">'.class &#123; width: (1 + 1) &#125;'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e, output</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(output.css);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>将会输出</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less语法"><a href="#Less语法" class="headerlink" title="Less语法"></a>Less语法</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>定义变量<code>@变量名</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@love-color:</span> red;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@love-color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>甚至可以用变量名定义为变量:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@love-color:</span> red;</span><br><span class="line"><span class="variable">@cc:</span> love-color;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@@cc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量插值</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@sel:</span> banner;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.@&#123;sel&#125;</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@property:</span> color;</span><br><span class="line"><span class="selector-class">.widget</span> &#123;</span><br><span class="line">    <span class="attribute">@&#123;property&#125;</span>: <span class="number">#0ee</span>;</span><br><span class="line">    <span class="selector-tag">background-</span><span class="variable">@&#123;property&#125;</span>: <span class="selector-id">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.widget</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0ee</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@base-url:</span> <span class="string">"http://assets.fnord.com"</span>;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">"@&#123;base-url&#125;/white-sand.png"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">"http://assets.fnord.com/white-sand.png"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>LESS 中的变量为完全的 ‘常量’ ，所以只能定义一次.</p></blockquote><h2 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bordered</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="comment">/*混合*/</span></span><br><span class="line">    <span class="selector-class">.bordered</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bordered</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>.bordered</code> class里面的属性样式都会在<code>.box</code>中体现出来。</p><p>如果想隐藏这个属性</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加括号，不让它暴露到CSS中去</span></span><br><span class="line"><span class="selector-class">.bordered</span>() &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="comment">/*混合*/</span></span><br><span class="line">    <span class="selector-class">.bordered</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output </span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="comment">/*混合*/</span></span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>任何 CSS class, id 或者 元素 属性集都可以以同样的方式引入.</p></blockquote><p><strong>带参数混合</strong></p><p>在 LESS 中，你还可以像函数一样定义一个或者多个带参数的属性集合，多个参数时使用分号或者逗号隔开。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border-radius</span> (<span class="variable">@radius</span>) &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">@radius</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="variable">@radius</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="variable">@radius</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="selector-class">.border-radius</span>(<span class="number">4px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以带默认值的参数：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border-radius</span> (<span class="variable">@radius</span>: <span class="number">5px</span>) &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">@radius</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="variable">@radius</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="variable">@radius</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="selector-class">.border-radius</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数可以命名（不用再注意参数顺序）</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@color</span>: black; <span class="variable">@margin</span>: <span class="number">10px</span>) &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="variable">@margin</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">    <span class="selector-class">.mixin</span>(<span class="variable">@margin</span>: <span class="number">20px</span>; <span class="variable">@color</span>: <span class="number">#33acfe</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 被编译为</span></span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#33acfe</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h2><p>LESS 可以让我们以嵌套的方式编写层叠样式. 让我们先看下下面这段 CSS:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#header</span> &#123; <span class="attribute">color</span>: black; &#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.navigation</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.logo</span> &#123; </span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是在less中可以这样写：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="selector-class">.navigation</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.logo</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以更简单的写法：用到父选择器<code>&amp;</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="selector-class">.navigation</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.logo</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>层层嵌套，便于维护<br>解耦：高内聚、低耦合，利于维护</p><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><p>任何数字、颜色或者变量都可以参与运算. 来看一组例子:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@base:</span> <span class="number">5%</span>;</span><br><span class="line"><span class="variable">@filler:</span> <span class="variable">@base</span> * <span class="number">2</span>;</span><br><span class="line"><span class="variable">@other:</span> <span class="variable">@base</span> + <span class="variable">@filler</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">color</span>: <span class="number">#888</span> / <span class="number">4</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="variable">@base-color</span> + <span class="number">#111</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span> / <span class="number">2</span> + <span class="variable">@filler</span>;</span><br></pre></td></tr></table></figure><p>LESS 的运算已经超出了我们的期望，它能够分辨出颜色和单位。如果像下面这样单位运算的话:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@var:</span> <span class="number">1px</span> + <span class="number">5</span>; <span class="comment">//output 6px</span></span><br></pre></td></tr></table></figure><p>括号也同样允许使用:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: (<span class="variable">@var</span> + <span class="number">5</span>) * <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>并且可以在复合属性中进行运算:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: (<span class="variable">@width</span> * <span class="number">2</span>) solid black;</span><br></pre></td></tr></table></figure><h2 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h2><p>有时候，你可能为了更好组织CSS或者单纯是为了更好的封装，将一些变量或者混合模块打包起来, 你可以像下面这样在<code>#bundle</code>中定义一些属性集之后可以重复使用:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#bundle</span> &#123;</span><br><span class="line">  <span class="selector-class">.button</span> () &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">background-color</span>: grey;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123; <span class="attribute">background-color</span>: white &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">  <span class="selector-id">#bundle</span> &gt; <span class="selector-class">.button</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="attribute">background-color</span>: grey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="条件、循环语句-Guard表达式和模式匹配"><a href="#条件、循环语句-Guard表达式和模式匹配" class="headerlink" title="条件、循环语句(Guard表达式和模式匹配)"></a>条件、循环语句(<code>Guard表达式</code>和<code>模式匹配</code>)</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) <span class="keyword">when</span> (lightness(<span class="variable">@a</span>) &gt;= <span class="number">50%</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) <span class="keyword">when</span> (lightness(<span class="variable">@a</span>) &lt; <span class="number">50%</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class1</span> &#123; <span class="selector-class">.mixin</span>(<span class="number">#ddd</span>) &#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123; <span class="selector-class">.mixin</span>(<span class="number">#555</span>) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>全部比较运算有： &gt; &gt;= = =&lt; &lt;。此外，关键字true只表示布尔真值</p></blockquote><p>使用逗号‘,’—分割，相等于或条件表达式，有一个条件满足即可。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) <span class="keyword">when</span> (<span class="variable">@a</span> &gt; <span class="number">10</span>), (<span class="variable">@a</span> &lt; -<span class="number">10</span>) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>and关键字实现与条件</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) <span class="keyword">when</span> (isnumber(<span class="variable">@a</span>)) <span class="keyword">and</span> (<span class="variable">@a</span> &gt; <span class="number">0</span>) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>not关键字实现非条件</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@b</span>) <span class="keyword">when</span> <span class="keyword">not</span> (<span class="variable">@b</span> &gt; <span class="number">0</span>) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>可以无参数，也可以对参数进行比较运算：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span>: mobile;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) <span class="keyword">when</span> (<span class="variable">@media</span> = mobile) &#123; ... &#125;</span><br><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>) <span class="keyword">when</span> (<span class="variable">@media</span> = desktop) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.max</span> (<span class="variable">@a</span>, <span class="variable">@b</span>) <span class="keyword">when</span> (<span class="variable">@a</span> &gt; <span class="variable">@b</span>) &#123; <span class="attribute">width</span>: <span class="variable">@a</span> &#125;</span><br><span class="line"><span class="selector-class">.max</span> (<span class="variable">@a</span>, <span class="variable">@b</span>) <span class="keyword">when</span> (<span class="variable">@a</span> &lt; <span class="variable">@b</span>) &#123; <span class="attribute">width</span>: <span class="variable">@b</span> &#125;</span><br></pre></td></tr></table></figure><p>基于值的类型进行匹配，我们就可以使用is*函式</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>, <span class="variable">@b</span>: <span class="number">0</span>) <span class="keyword">when</span> (isnumber(<span class="variable">@b</span>)) &#123; ... &#125;</span><br><span class="line"><span class="selector-class">.mixin</span> (<span class="variable">@a</span>, <span class="variable">@b</span>: black) <span class="keyword">when</span> (iscolor(<span class="variable">@b</span>)) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>下面就是常见的检测函式：</p><ul><li>iscolor</li><li>isnumber</li><li>isstring</li><li>iskeyword</li><li>isurl</li></ul><p>如果你想判断一个值是纯数字，还是某个单位量，可以使用下列函式：</p><ul><li>ispixel</li><li>ispercentage</li><li>isem</li></ul><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p>在Less中，混合可以调用它自身。这样，当一个混合递归调用自己，再结合<code>Guard表达式</code>和<code>模式匹配</code>这两个特性，就可以写出循环结构。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loop</span>(<span class="variable">@counter</span>) <span class="keyword">when</span> (<span class="variable">@counter</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="selector-class">.loop</span>((<span class="variable">@counter</span> - <span class="number">1</span>));    <span class="comment">// 递归调用自身</span></span><br><span class="line">  <span class="attribute">width</span>: (<span class="number">10px</span> * <span class="variable">@counter</span>); <span class="comment">// 每次调用时产生的样式代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="selector-class">.loop</span>(<span class="number">5</span>); <span class="comment">// 调用循环</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><p><a href="https://less.bootcss.com/functions/#functions-overview" target="_blank" rel="noopener">https://less.bootcss.com/functions/#functions-overview</a></p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>LESS 中的作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@var:</span> red;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="variable">@var:</span> white;</span><br><span class="line">  <span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@var</span>; <span class="comment">// white</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@var</span>; <span class="comment">// red  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Importing"><a href="#Importing" class="headerlink" title="Importing"></a>Importing</h2><p>你可以在main文件中通过下面的形势引入 .less 文件, .less 后缀可带可不带:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"lib.less"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"lib"</span>;</span><br></pre></td></tr></table></figure><p>如果你想导入一个CSS文件而且不想LESS对它进行处理，只需要使用.css后缀就可以:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"lib.css"</span>;</span><br></pre></td></tr></table></figure><p>这样LESS就会跳过它不去处理它.</p><h2 id="避免编译"><a href="#避免编译" class="headerlink" title="避免编译"></a>避免编译</h2><p>有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.</p><p>要输出这样的值我们可以在字符串前加上一个 <code>~</code>, 例如:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="string">~"ms:alwaysHasItsOwnSyntax.For.Stuff()"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="attribute">ms</span>:alwaysHasItsOwnSyntax.For.Stuff();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li><code>/**/</code> 可以使用，会被编译</li><li><code>//</code> 可以使用，但不会被编译到css中，会自动过滤掉。</li><li><code>less</code>不认识的内容 不会被编译</li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>官方文档：<a href="https://www.html.cn/doc/less/features/" target="_blank" rel="noopener">https://www.html.cn/doc/less/features/</a></p><p><a href="http://www.bootcss.com/p/lesscss/#guide" target="_blank" rel="noopener">http://www.bootcss.com/p/lesscss/#guide</a></p><p><a href="https://www.jianshu.com/p/15ed47ff8b06" target="_blank" rel="noopener">https://www.jianshu.com/p/15ed47ff8b06</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Less是什么&quot;&gt;&lt;a href=&quot;#Less是什么&quot; class=&quot;headerlink&quot; title=&quot;Less是什么&quot;&gt;&lt;/a&gt;Less是什么&lt;/h1&gt;&lt;p&gt;LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承， 运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.html.cn/doc/less/features/#mixin-guards-feature&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Less官方文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hackycy.github.io/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://hackycy.github.io/tags/CSS/"/>
    
      <category term="Less" scheme="http://hackycy.github.io/tags/Less/"/>
    
  </entry>
  
  <entry>
    <title>Android混淆(Proguard)详解</title>
    <link href="http://hackycy.github.io/2019/04/12/Android%E6%B7%B7%E6%B7%86-Proguard-%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/04/12/Android混淆-Proguard-详解/</id>
    <published>2019-04-12T09:11:12.000Z</published>
    <updated>2019-04-15T03:19:59.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="混淆的作用及好处"><a href="#混淆的作用及好处" class="headerlink" title="混淆的作用及好处"></a>混淆的作用及好处</h1><p>混淆属于整个应用程序开发生命周期偏后期阶段的技术了，所以要考虑应用的安全性及性能的问题，混淆就是为了这种需求产生的一种技术，简单说，混淆就是将关键字和关键类名，修改为无意义的字符以起到迷惑试图反编译去查看源码的人。在一定程度上能过滤掉一些入门反编译者，混淆是保障Android程序源码安全的第一道门槛，<br>以上谈了下混淆的作用，而混淆的好处除了能保证源码安全性之外就大概是通过修改关键字为无意义字符串，或者剔除某些辅助类，比如Log，从而减少文件大小。</p><a id="more"></a><h1 id="混淆的原理"><a href="#混淆的原理" class="headerlink" title="混淆的原理"></a>混淆的原理</h1><p><a href="https://www.guardsquare.com/en/products/proguard" target="_blank" rel="noopener">proguard官网</a></p><p>Java 是一种跨平台的、解释型语言，Java 源代码编译成中间”字节码”存储于 class 文件中。由于跨平台的需要，Java   字节码中包括了很多源代码信息，如变量名、方法名，并且通过这些名称来访问变量和方法，这些符号带有许多语义信息，很容易被反编译成 Java 源代码。为了防止这种现象，我们可以使用 Java 混淆器对 Java 字节码进行混淆。<br>混淆就是对发布出去的程序进行重新组织和处理，使得处理后的代码与处理前代码完成相同的功能，而混淆后的代码很难被反编译，即使反编译成功也很难得出程序的真正语义。被混淆过的程序代码，仍然遵照原来的档案格式和指令集，执行结果也与混淆前一样，只是混淆器将代码中的所有变量、函数、类的名称变为简短的英文字母代号，在缺乏相应的函数名和程序注释的况下，即使被反编译，也将难以阅读。同时混淆是不可逆的，在混淆的过程中一些不影响正常运行的信息将永久丢失，这些信息的丢失使程序变得更加难以理解。<br>混淆器的作用不仅仅是保护代码，它也有精简编译后程序大小的作用。由于以上介绍的缩短变量和函数名以及丢失部分信息的原因， 编译后 jar 文件体积大约能减少25%，这对当前费用较贵的无线网络传输是有一定意义的。</p><h1 id="混淆的具体使用"><a href="#混淆的具体使用" class="headerlink" title="混淆的具体使用"></a>混淆的具体使用</h1><p>模块(Module)下的build.gradle的配置</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">  buildTypes&#123;</span><br><span class="line">    release &#123; </span><br><span class="line">       <span class="comment">// 是否进行混淆  </span></span><br><span class="line">       minifyEnabled <span class="keyword">false</span>  </span><br><span class="line">       <span class="comment">// 混淆文件的位置，其中'proguard-android.txt'为sdk默认的混淆配置，</span></span><br><span class="line">       <span class="comment">//'proguard-rules.pro' 是该模块下的混淆配置</span></span><br><span class="line">       proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span>  </span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是proguard在模块下build.gradle文件中的配置信息，其中<code>proguard-android.txt</code>为sdk默认的混淆配置，<code>proguard-rules.pro</code>是在默认配置的基础上针对本模块做出的针对性混淆处理。</p><ul><li>proguard-android.txt 这个文件是系统默认混淆文件一般不需要做修改</li><li>在 debug 版下也可以开启混淆做为测试</li><li>Gradle 2.2 之后，defaultProguardFile 没有使用 SDK 目录下的 proguard-android.txt，而是使用了 gradle 自带的 proguard-android.txt，不同的 gradle 版本带有不同的默认混淆文件，比如在项目根目录的 build/intermediates/proguard-files/proguard-android.txt-2.3.3，即为 gradle 自带的混淆文件。在 proguard-android.txt-2.3.3 文件中也写有说明，Gradle 2.2 之后自带混淆文件</li></ul><blockquote><p>注：proguard-android.txt的位置位于android-sdk/tools/proguard/proguard-android.txt</p></blockquote><h1 id="混淆规则"><a href="#混淆规则" class="headerlink" title="混淆规则"></a>混淆规则</h1><p>这个语法的作用是定义出 <strong>不需要</strong>混淆的源代码，那么编译时会自动将未定义的部分全都混淆。而如下是不需要混淆的</p><ul><li>Android 四大组件</li><li>native方法</li><li>Java 反射用到的类</li><li>自定义控件</li><li>枚举类</li><li>JavaBean</li><li>Parcelable、Serializable 序列化类</li><li>WebView 与 JS 交互所用到的类和方法</li></ul><h1 id="混淆基本指令"><a href="#混淆基本指令" class="headerlink" title="混淆基本指令"></a>混淆基本指令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 代码混淆压缩比，在 0~7 之间</span><br><span class="line">-optimizationpasses 5</span><br><span class="line"></span><br><span class="line"># 混合时不使用大小写混合，混合后的类名为小写</span><br><span class="line">-dontusemixedcaseclassnames</span><br><span class="line"></span><br><span class="line"># 指定不忽略非公共库的类和类成员</span><br><span class="line">-dontskipnonpubliclibraryclasses</span><br><span class="line">-dontskipnonpubliclibraryclassmembers</span><br><span class="line"></span><br><span class="line"># 这句话能够使我们的项目混淆后产生映射文件</span><br><span class="line"># 包含有类名-&gt;混淆后类名的映射关系</span><br><span class="line">-verbose</span><br><span class="line"></span><br><span class="line"># 不做预校验，preverify是proguard的四个步骤之一，Android不需要preverify，去掉这一步能够加快混淆速度</span><br><span class="line">-dontpreverify</span><br><span class="line"></span><br><span class="line"># 保留Annotation不混淆</span><br><span class="line">-keepattributes *Annotation*,InnerClasses</span><br><span class="line"></span><br><span class="line"># 避免混淆泛型</span><br><span class="line">-keepattributes Signature</span><br><span class="line"></span><br><span class="line"># 抛出异常时保留代码行号</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line"></span><br><span class="line"># 指定混淆是采用的算法，后面的参数是一个过滤器</span><br><span class="line"># 这个过滤器是 Google 推荐的算法，一般不做修改</span><br><span class="line">-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*</span><br><span class="line"></span><br><span class="line"># 是否允许改变作用域的，可以提高优化效果</span><br><span class="line"># 但是，如果你的代码是一个库的话，最好不要配置这个选项，因为它可能会导致一些 private 变量被改成 public，谨慎使用</span><br><span class="line">#-allowaccessmodification</span><br><span class="line"></span><br><span class="line"># 指定一些接口可能会被合并，即使一些子类没有同时实现两个接口的方法。这种情况在java源码中是不允许存在的，但是在java字节码中是允许存在的。</span><br><span class="line"># 它的作用是通过合并接口减少类的数量，从而达到减少输出文件体积的效果。仅在 optimize 阶段有效。</span><br><span class="line"># 如果在开启后没有任何影响可以使用，这项配置对于一些虚拟机的65535方法数限制是有一定效果的，谨慎使用</span><br><span class="line">#-mergeinterfacesaggressively</span><br><span class="line"></span><br><span class="line"># 输出所有找不到引用和一些其它错误的警告，但是继续执行处理过程。不处理警告有些危险，所以在清楚配置的具体作用的时候再使用</span><br><span class="line">-ignorewarnings</span><br></pre></td></tr></table></figure><h1 id="详细指令"><a href="#详细指令" class="headerlink" title="详细指令"></a>详细指令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">-include &#123;filename&#125;     #从给定的文件中读取配置参数</span><br><span class="line">-basedirectory &#123;directoryname&#125;    #指定基础目录为以后相对的档案名称</span><br><span class="line">-injars &#123;class_path&#125;    #指定要处理的应用程序jar,war,ear和目录</span><br><span class="line">-outjars &#123;class_path&#125;     #指定处理完后要输出的jar,war,ear和目录的名称</span><br><span class="line">-libraryjars &#123;classpath&#125;     #指定要处理的应用程序jar,war,ear和目录所需要的程序库文件</span><br><span class="line">-dontskipnonpubliclibraryclasses     #指定不去忽略非公共的库类。</span><br><span class="line">-dontskipnonpubliclibraryclassmembers     #指定不去忽略包可见的库类的成员。</span><br><span class="line"></span><br><span class="line"> #保留选项</span><br><span class="line">-keep &#123;Modifier&#125; &#123;class_specification&#125;     #保护指定的类文件和类的成员</span><br><span class="line">-keepclassmembers &#123;modifier&#125; &#123;class_specification&#125;     #保护指定类的成员，如果此类受到保护他们会保护的更好</span><br><span class="line">-keepclasseswithmembers &#123;class_specification&#125;     #保护指定的类和类的成员，但条件是所有指定的类和类成员是要存在。</span><br><span class="line">-keepnames &#123;class_specification&#125;     #保护指定的类和类的成员的名称（如果他们不会压缩步骤中删除）</span><br><span class="line">-keepclassmembernames &#123;class_specification&#125;     #保护指定的类的成员的名称（如果他们不会压缩步骤中删除）</span><br><span class="line">-keepclasseswithmembernames &#123;class_specification&#125;     #保护指定的类和类的成员的名称，如果所有指定的类成员出席（在压缩步骤之后）</span><br><span class="line">-printseeds &#123;filename&#125;     #列出类和类的成员-keep选项的清单，标准输出到给定的文件</span><br><span class="line"></span><br><span class="line"> #压缩</span><br><span class="line">-dontshrink     #不压缩输入的类文件</span><br><span class="line">-printusage &#123;filename&#125;</span><br><span class="line">-whyareyoukeeping &#123;class_specification&#125;</span><br><span class="line"></span><br><span class="line"> #优化</span><br><span class="line">-dontoptimize     #不优化输入的类文件</span><br><span class="line">-assumenosideeffects &#123;class_specification&#125;     #优化时假设指定的方法，没有任何副作用</span><br><span class="line">-allowaccessmodification     #优化时允许访问并修改有修饰符的类和类的成员</span><br><span class="line"></span><br><span class="line"> #混淆</span><br><span class="line">-dontobfuscate     #不混淆输入的类文件</span><br><span class="line">-printmapping &#123;filename&#125;</span><br><span class="line">-applymapping &#123;filename&#125;     #重用映射增加混淆</span><br><span class="line">-obfuscationdictionary &#123;filename&#125;     #使用给定文件中的关键字作为要混淆方法的名称</span><br><span class="line">-overloadaggressively     #混淆时应用侵入式重载</span><br><span class="line">-useuniqueclassmembernames     #确定统一的混淆类的成员名称来增加混淆</span><br><span class="line">-flattenpackagehierarchy &#123;package_name&#125;     #重新包装所有重命名的包并放在给定的单一包中</span><br><span class="line">-repackageclass &#123;package_name&#125;     #重新包装所有重命名的类文件中放在给定的单一包中</span><br><span class="line">-dontusemixedcaseclassnames     #混淆时不会产生形形色色的类名</span><br><span class="line">-keepattributes &#123;attribute_name,...&#125;     #保护给定的可选属性，例如LineNumberTable, LocalVariableTable, SourceFile, Deprecated, Synthetic, Signature, and</span><br><span class="line"></span><br><span class="line"> #InnerClasses.</span><br><span class="line">-renamesourcefileattribute &#123;string&#125;     #设置源文件中给定的字符串常量</span><br></pre></td></tr></table></figure><h1 id="混淆日志"><a href="#混淆日志" class="headerlink" title="混淆日志"></a>混淆日志</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># APK 包内所有 class 的内部结构</span><br><span class="line">-dump proguard/class_files.txt</span><br><span class="line"># 未混淆的类和成员</span><br><span class="line">-printseeds proguard/seeds.txt</span><br><span class="line"># 列出从 APK 中删除的代码</span><br><span class="line">-printusage proguard/unused.txt</span><br><span class="line"># 混淆前后的映射，这个文件在追踪异常的时候是有用的</span><br><span class="line">-printmapping proguard/mapping.txt</span><br></pre></td></tr></table></figure><h1 id="其他自定义混淆规则"><a href="#其他自定义混淆规则" class="headerlink" title="其他自定义混淆规则"></a>其他自定义混淆规则</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># JavaBean 实体类不能混淆，一般会将实体类统一放到一个包下，you.package.path 请改成你自己的项目路径</span><br><span class="line">-keep public class com.frame.mvp.entity.** &#123;</span><br><span class="line">    *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 网页中的 JavaScript 进行交互，you.package.path 请改成你自己的项目路径</span><br><span class="line">#-keepclassmembers class you.package.path.JSInterface &#123;</span><br><span class="line">#    &lt;methods&gt;;</span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line"># 需要通过反射来调用的类，没有可忽略，you.package.path 请改成你自己的项目路径</span><br><span class="line">#-keep class you.package.path.** &#123; *; &#125;</span><br></pre></td></tr></table></figure><h1 id="一些不是很常用但比较实用的混淆命令"><a href="#一些不是很常用但比较实用的混淆命令" class="headerlink" title="一些不是很常用但比较实用的混淆命令"></a>一些不是很常用但比较实用的混淆命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 所有重新命名的包都重新打包，并把所有的类移动到所给定的包下面。如果没有指定 packagename，那么所有的类都会被移动到根目录下</span><br><span class="line"># 如果需要从目录中读取资源文件，移动包的位置可能会导致异常，谨慎使用</span><br><span class="line"># you.package.path 请改成你自己的项目路径</span><br><span class="line">-flatternpackagehierarchy</span><br><span class="line"></span><br><span class="line"># 所有重新命名过的类都重新打包，并把他们移动到指定的packagename目录下。如果没有指定 packagename，同样把他们放到根目录下面。</span><br><span class="line"># 这项配置会覆盖-flatternpackagehierarchy的配置。它可以代码体积更小，并且更加难以理解。</span><br><span class="line"># you.package.path 请改成你自己的项目路径</span><br><span class="line">-repackageclasses you.package.path</span><br><span class="line"></span><br><span class="line"># 指定一个文本文件用来生成混淆后的名字。默认情况下，混淆后的名字一般为 a、b、c 这种。</span><br><span class="line"># 通过使用配置的字典文件，可以使用一些非英文字符做为类名。成员变量名、方法名。字典文件中的空格，标点符号，重复的词，还有以&apos;#&apos;开头的行都会被忽略。</span><br><span class="line"># 需要注意的是添加了字典并不会显著提高混淆的效果，只不过是更不利与人类的阅读。正常的编译器会自动处理他们，并且输出出来的jar包也可以轻易的换个字典再重新混淆一次。</span><br><span class="line"># 最有用的做法一般是选择已经在类文件中存在的字符串做字典，这样可以稍微压缩包的体积。</span><br><span class="line"># 字典文件的格式：一行一个单词，空行忽略，重复忽略</span><br><span class="line">-obfuscationdictionary</span><br><span class="line"></span><br><span class="line"># 指定一个混淆类名的字典，字典格式与 -obfuscationdictionary 相同</span><br><span class="line">#-classobfuscationdictionary</span><br><span class="line"># 指定一个混淆包名的字典，字典格式与 -obfuscationdictionary 相同</span><br><span class="line">-packageobfuscationdictionary</span><br><span class="line"></span><br><span class="line"># 混淆的时候大量使用重载，多个方法名使用同一个混淆名，但是他们的方法签名不同。这可以使包的体积减小一部分，也可以加大理解的难度。仅在混淆阶段有效。</span><br><span class="line"># 这个参数在 JDK 版本上有一定的限制，可能会导致一些未知的错误，谨慎使用</span><br><span class="line">-overloadaggressively</span><br><span class="line"></span><br><span class="line"># 方法同名混淆后亦同名，方法不同名混淆后亦不同名。不使用该选项时，类成员可被映射到相同的名称。因此该选项会增加些许输出文件的大小。</span><br><span class="line">-useuniqueclassmembernames</span><br><span class="line"></span><br><span class="line"># 指定在混淆的时候不使用大小写混用的类名。默认情况下，混淆后的类名可能同时包含大写字母和小写字母。</span><br><span class="line"># 这样生成jar包并没有什么问题。只有在大小写不敏感的系统（例如windows）上解压时，才会涉及到这个问题。</span><br><span class="line"># 因为大小写不区分，可能会导致部分文件在解压的时候相互覆盖。如果有在windows系统上解压输出包的需求的话，可以加上这个配置。</span><br><span class="line">-dontusemixedcaseclassnames</span><br></pre></td></tr></table></figure><h1 id="Android开发常用不需要混淆指令"><a href="#Android开发常用不需要混淆指令" class="headerlink" title="Android开发常用不需要混淆指令"></a>Android开发常用不需要混淆指令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"># Android 四大组件相关</span><br><span class="line">-keep public class * extends android.app.Activity</span><br><span class="line">-keep public class * extends android.app.Appliction</span><br><span class="line">-keep public class * extends android.app.Service</span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">-keep public class * extends android.content.ContentProvider</span><br><span class="line">-keep public class * extends android.app.backup.BackupAgentHelper</span><br><span class="line">-keep public class * extends android.preference.Preference</span><br><span class="line">-keep public class * extends android.view.View</span><br><span class="line">-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line"></span><br><span class="line"># Fragment</span><br><span class="line">-keep public class * extends android.support.v4.app.Fragment</span><br><span class="line">-keep public class * extends android.app.Fragment</span><br><span class="line"></span><br><span class="line"># 保留support下的所有类及其内部类</span><br><span class="line">-keep class android.support.** &#123; *; &#125;</span><br><span class="line">-keep interface android.support.** &#123; *; &#125;</span><br><span class="line">-dontwarn android.support.**</span><br><span class="line"></span><br><span class="line"># 保留 R 下面的资源</span><br><span class="line">-keep class **.R$* &#123;*;&#125;</span><br><span class="line">-keepclassmembers class **.R$* &#123;</span><br><span class="line">    public static &lt;fields&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留本地 native 方法不被混淆</span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留在 Activity 中的方法参数是 view 的方法，</span><br><span class="line"># 这样以来我们在 layout 中写的 onClick 就不会被影响</span><br><span class="line">-keepclassmembers class * extends android.app.Activity&#123;</span><br><span class="line">    public void *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留枚举类不被混淆</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留自定义控件（继承自View）不被混淆</span><br><span class="line">-keep public class * extends android.view.View&#123;</span><br><span class="line">    *** get*();</span><br><span class="line">    void set*(***);</span><br><span class="line">    public &lt;init&gt;(android.content.Context);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留 Parcelable 序列化类不被混淆</span><br><span class="line">-keep class * implements android.os.Parcelable &#123;</span><br><span class="line">  public static final android.os.Parcelable$Creator *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留 Serializable 序列化的类不被混淆</span><br><span class="line">-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">    static final long serialVersionUID;</span><br><span class="line">    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">    private void readObject(java.io.ObjectInputStream);</span><br><span class="line">    java.lang.Object writeReplace();</span><br><span class="line">    java.lang.Object readResolve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 对于带有回调函数的 onXXEvent 的，不能被混淆</span><br><span class="line">-keepclassmembers class * &#123;</span><br><span class="line">    void *(**On*Event);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># WebView，没有使用 WebView 请注释掉</span><br><span class="line">-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;</span><br><span class="line">   public *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);</span><br><span class="line">    public boolean *(android.webkit.WebView, java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.webView, jav.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 不混淆使用了 @Keep 注解相关的类</span><br><span class="line">-keep class android.support.annotation.Keep</span><br><span class="line"></span><br><span class="line">-keep @android.support.annotation.Keep class * &#123;*;&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    @android.support.annotation.Keep &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    @android.support.annotation.Keep &lt;fields&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    @android.support.annotation.Keep &lt;init&gt;(...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 删除代码中 Log 相关的代码，如果删除了一些预料之外的代码，很容易就会导致代码崩溃，谨慎使用</span><br><span class="line">-assumenosideeffects class android.util.Log&#123;</span><br><span class="line">   public static boolean isLoggable(java.lang.String,int);</span><br><span class="line">   public static int v(...);</span><br><span class="line">   public static int i(...);</span><br><span class="line">   public static int w(...);</span><br><span class="line">   public static int d(...);</span><br><span class="line">   public static int e(...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 删除自定义Log工具</span><br><span class="line">-assumenosideeffects class com.example.Log.Logger&#123;</span><br><span class="line">   public static int v(...);</span><br><span class="line">   public static int i(...);</span><br><span class="line">   public static int w(...);</span><br><span class="line">   public static int d(...);</span><br><span class="line">   public static int e(...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">-ignorewarnings                     # 忽略警告，避免打包时某些警告出现  </span><br><span class="line">-optimizationpasses 5               # 指定代码的压缩级别  </span><br><span class="line">-dontusemixedcaseclassnames         # 是否使用大小写混合  </span><br><span class="line">-dontskipnonpubliclibraryclasses    # 是否混淆第三方jar  </span><br><span class="line">-dontpreverify                      # 混淆时是否做预校验  </span><br><span class="line">-verbose                            # 混淆时是否记录日志  </span><br><span class="line">-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*        # 混淆时所采用的算法  </span><br><span class="line">  </span><br><span class="line">-libraryjars   libs/treecore.jar  </span><br><span class="line">  </span><br><span class="line">-dontwarn android.support.v4.**     #缺省proguard 会检查每一个引用是否正确，但是第三方库里面往往有些不会用到的类，没有正确引用。如果不配置的话，系统就会报错。  </span><br><span class="line">-dontwarn android.os.**  </span><br><span class="line">-keep class android.support.v4.** &#123; *; &#125;        # 保持哪些类不被混淆  </span><br><span class="line">-keep class com.baidu.** &#123; *; &#125;    </span><br><span class="line">-keep class vi.com.gdi.bgl.android.**&#123;*;&#125;  </span><br><span class="line">-keep class android.os.**&#123;*;&#125;  </span><br><span class="line">  </span><br><span class="line">-keep interface android.support.v4.app.** &#123; *; &#125;    </span><br><span class="line">-keep public class * extends android.support.v4.**    </span><br><span class="line">-keep public class * extends android.app.Fragment  </span><br><span class="line">  </span><br><span class="line">-keep public class * extends android.app.Activity  </span><br><span class="line">-keep public class * extends android.app.Application  </span><br><span class="line">-keep public class * extends android.app.Service  </span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver  </span><br><span class="line">-keep public class * extends android.content.ContentProvider  </span><br><span class="line">-keep public class * extends android.support.v4.widget  </span><br><span class="line">-keep public class * extends com.sqlcrypt.database  </span><br><span class="line">-keep public class * extends com.sqlcrypt.database.sqlite  </span><br><span class="line">-keep public class * extends com.treecore.**  </span><br><span class="line">-keep public class * extends de.greenrobot.dao.**  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">-keepclasseswithmembernames class * &#123;       # 保持 native 方法不被混淆  </span><br><span class="line">    native &lt;methods&gt;;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclasseswithmembers class * &#123;            # 保持自定义控件类不被混淆  </span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclasseswithmembers class * &#123;            # 保持自定义控件类不被混淆  </span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclassmembers class * extends android.app.Activity &#123; //保持类成员  </span><br><span class="line">   public void *(android.view.View);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclassmembers enum * &#123;                  # 保持枚举 enum 类不被混淆  </span><br><span class="line">    public static **[] values();  </span><br><span class="line">    public static ** valueOf(java.lang.String);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keep class * implements android.os.Parcelable &#123;    # 保持 Parcelable 不被混淆  </span><br><span class="line">  public static final android.os.Parcelable$Creator *;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keep class MyClass;                              # 保持自己定义的类不被混淆</span><br></pre></td></tr></table></figure><h1 id="资源混淆"><a href="#资源混淆" class="headerlink" title="资源混淆"></a>资源混淆</h1><p><code>AndResGuard</code>是一个帮助你缩小APK大小的工具，他的原理类似Java Proguard，但是只针对资源。他会将原本冗长的资源路径变短，例如将<code>res/drawable/wechat变为r/d/a</code>。</p><p><code>AndResGuard</code>不涉及编译过程，只需输入一个apk(无论签名与否，<code>debug</code>版，<code>release</code>版均可，在处理过程中会直接将原签名删除)，可得到一个实现资源混淆后的apk(若在配置文件中输入签名信息，可自动重签名并对齐，得到可直接发布的apk)以及对应资源ID的mapping文件。</p><p><a href="https://github.com/shwenzhang/AndResGuard/blob/master/README.zh-cn.md" target="_blank" rel="noopener">github</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;mid=208135658&amp;idx=1&amp;sn=ac9bd6b4927e9e82f9fa14e396183a8f#rd" target="_blank" rel="noopener">原理</a></p><h1 id="丧心病狂的混淆操作"><a href="#丧心病狂的混淆操作" class="headerlink" title="丧心病狂的混淆操作"></a>丧心病狂的混淆操作</h1><p>原理：混淆是可以配置词典,<a href="https://mp.weixin.qq.com/s/ya0RiLuHfIBrPLkl2lTbaA" target="_blank" rel="noopener">原文链接</a></p><p>随便找一个开源项目上手</p><p><a href="https://github.com/kingwang666/GetApk" target="_blank" rel="noopener">https://github.com/kingwang666/GetApk</a></p><p>开启混淆</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">    debug &#123;</span><br><span class="line">        minifyEnabled <span class="keyword">true</span></span><br><span class="line">        proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到上面配置了混淆文件包含：<code>proguard-rules.pro</code></p><p>和moudule的build.gradle在同一目录，在里面可以添加你的词典配置：</p><p><img src="demo.png" alt=""></p><blockquote><p>强烈建议，开启混淆后，配置词典前，先打个包运行一下确定可以正常运行。</p></blockquote><p>最后上面的混淆词典，分别来自不同的开源项目：</p><p><a href="https://github.com/RockyQu/ProguardDictionary" target="_blank" rel="noopener">https://github.com/RockyQu/ProguardDictionary</a></p><p>包含使用Java关键词的词典。</p><p><a href="https://github.com/o2e/ProguardDictionaryGenerator" target="_blank" rel="noopener">https://github.com/o2e/ProguardDictionaryGenerator</a></p><p>包含最后那个全是非常神奇的字符的。</p><p><a href="https://github.com/WrBug/FrenziedProguard" target="_blank" rel="noopener">https://github.com/WrBug/FrenziedProguard</a></p><p>包含1il,中文，0oO的。</p><blockquote><p>放一个混淆后的apk地址，如果实在懒得run又想看看效果：<br><a href="http://wanandroid.com/blogimgs/57ed3c61-08ee-4a3f-b859-f3cd1d748437.apk" target="_blank" rel="noopener">http://wanandroid.com/blogimgs/57ed3c61-08ee-4a3f-b859-f3cd1d748437.apk</a></p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.jianshu.com/p/60e82aafcfd0" target="_blank" rel="noopener">https://www.jianshu.com/p/60e82aafcfd0</a></p><p><a href="https://rockycoder.cn/android/2018/03/15/Android-proguard-rules.html" target="_blank" rel="noopener">https://rockycoder.cn/android/2018/03/15/Android-proguard-rules.html</a></p><p><a href="https://juejin.im/post/5ae7edc7f265da0b776f7a95" target="_blank" rel="noopener">https://juejin.im/post/5ae7edc7f265da0b776f7a95</a></p><p><a href="https://www.imooc.com/learn/879" target="_blank" rel="noopener">https://www.imooc.com/learn/879</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;混淆的作用及好处&quot;&gt;&lt;a href=&quot;#混淆的作用及好处&quot; class=&quot;headerlink&quot; title=&quot;混淆的作用及好处&quot;&gt;&lt;/a&gt;混淆的作用及好处&lt;/h1&gt;&lt;p&gt;混淆属于整个应用程序开发生命周期偏后期阶段的技术了，所以要考虑应用的安全性及性能的问题，混淆就是为了这种需求产生的一种技术，简单说，混淆就是将关键字和关键类名，修改为无意义的字符以起到迷惑试图反编译去查看源码的人。在一定程度上能过滤掉一些入门反编译者，混淆是保障Android程序源码安全的第一道门槛，&lt;br&gt;以上谈了下混淆的作用，而混淆的好处除了能保证源码安全性之外就大概是通过修改关键字为无意义字符串，或者剔除某些辅助类，比如Log，从而减少文件大小。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Mac应用程序无法打开或文件损坏的处理方法</title>
    <link href="http://hackycy.github.io/2019/04/12/Mac%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E6%88%96%E6%96%87%E4%BB%B6%E6%8D%9F%E5%9D%8F%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>http://hackycy.github.io/2019/04/12/Mac应用程序无法打开或文件损坏的处理方法/</id>
    <published>2019-04-12T08:23:11.000Z</published>
    <updated>2019-04-12T08:37:18.235Z</updated>
    
    <content type="html"><![CDATA[<p>今天安装一些软件时遇到了 <strong>无法打开或文件损坏的Mac应用程序</strong>，所以查了一下解决办法，记录在了博客下。</p><p>本人机器系统版本<code>Mojave 10.14.4</code></p><a id="more"></a><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>大多数用户在安装 Mac 应用时，经常会遇到提示 “ XXX.app 已损坏，打不开。您应该将它移到废纸篓 ” 或 “ 打不开 XXX.app，因为它来自身份不明的开发者 ” ，如下图所示：</p><p><img src="f1.png" alt=""></p><p><img src="f2.png" alt=""></p><p><strong>1. 打开系统偏好设置界面，进入安全性与隐私</strong></p><p><img src="f3.jpeg" alt=""></p><p><strong>2. 点按左下角的锁头图标，解锁更改权限</strong></p><p><strong>3. 将允许从以下位置下载的应用，更改为 “ 任何来源 ” ，然后再打开应用即可</strong></p><p><img src="f4.jpeg" alt=""></p><p>若没有“任何来源”这个选项（<code>macOS Sierra 10.12</code>及以上的用户可能会遇到），按以下步骤执行：<br>打开终端<code>（Terminal.app）</code><br>拷贝粘贴<code>sudo spctl --master-disable</code>，按回车键</p><p>输入你的账户密码，按回车键确认执行（该密码不会显示，直接输入即可）</p><p><img src="f5.png" alt=""></p><p><img src="f6.png" alt=""></p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>如安装应用时，出现 “ 打不开 XXX.app，因为它来自身份不明的开发者 ” ，并提示你的软件在什么位置什么时间下载了磁盘影像。如图所示：</p><p><img src="f7.png" alt=""></p><p><strong>1、将软件放入“应用程序”后，点击软件 右键-打开 ，如图所示：</strong></p><p><img src="f8.png" alt=""></p><p><strong>2、弹出以下对话框后，你打开即可。</strong></p><p><img src="f9.png" alt=""></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.puasu.com/article/share/201805/10.html" target="_blank" rel="noopener">http://www.puasu.com/article/share/201805/10.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天安装一些软件时遇到了 &lt;strong&gt;无法打开或文件损坏的Mac应用程序&lt;/strong&gt;，所以查了一下解决办法，记录在了博客下。&lt;/p&gt;
&lt;p&gt;本人机器系统版本&lt;code&gt;Mojave 10.14.4&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://hackycy.github.io/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="Mac" scheme="http://hackycy.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>移动端前端开发之viewport</title>
    <link href="http://hackycy.github.io/2019/04/11/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B9%8Bviewport/"/>
    <id>http://hackycy.github.io/2019/04/11/移动端前端开发之viewport/</id>
    <published>2019-04-11T09:13:02.000Z</published>
    <updated>2019-04-19T04:37:08.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>浏览器的<code>viewport</code>是可以看到Web内容的窗口区域，通常与渲染出的页面的大小不同，这种情况下，浏览器会提供滚动条以滚动访问所有内容。</p><p>窄屏幕设备（如移动设备）在一个虚拟窗口或视口中渲染页面，这个窗口或视口通常比屏幕宽；然后缩小渲染的结果，以便在一屏内显示所有内容。然后用户可以移动、缩放以查看页面的不同区域。例如，如果移动屏幕的宽度为640px，则可能会用980px的虚拟视口渲染页面，然后缩小页面以适应640px的窗口大小。</p><p>这样做是因为许多页面没有做移动端优化，在小窗口渲染时会乱掉（或看起来乱）。所以，这种虚拟视口是一种让未做移动端优化的网站在窄屏设备上看起来更好的办法。</p><a id="more"></a><h1 id="移动浏览器的问题"><a href="#移动浏览器的问题" class="headerlink" title="移动浏览器的问题"></a>移动浏览器的问题</h1><p>当我们将移​​动浏览器与桌面浏览器进行比较时，最明显的区别是屏幕尺寸。移动浏览器显示的桌面优化网站显着少于桌面浏览器; 通过缩小直到文本不可读的小，或者只显示适合屏幕的网站的一小部分。</p><p>移动屏幕远小于桌面屏幕; 考虑最大宽度为400px，有时候要少得多。（有些手机报告的宽度较大，但它们正在撒谎 - 或者至少给我们无用的信息。）</p><p>平板电脑设备的中间层，如iPad或传闻中的基于HP webOS的平板设备，将弥合桌面和移动设备之间的差距，但这不会改变根本问题。网站也必须在移动设备上运行，因此我们必须让它们在小屏幕上显示。</p><p>最重要的问题集中在CSS上，尤其是视口的尺寸。如果我们一对一地复制桌面模型，我们的CSS就会开始惨不忍睹。</p><p>让我们回到我们的侧边栏吧width: 10%。如果移动浏览器与桌面浏览器完全相同，那么它们最多只能生成40px宽的元素，而且这个元素太窄了。你的液体布局看起来会非常可怕。</p><p>解决问题的一种方法是为移动浏览器构建一个特殊网站。即使除了你是否应该这样做的根本问题之外，实际的问题是只有极少数的网站所有者被充分利用以满足移动设备的需求。</p><p>移动浏览器供应商希望为他们的客户提供最佳体验，现在这意味着“尽可能像桌面一样。”因此需要一些技巧。</p><h1 id="设备像素和CSS像素"><a href="#设备像素和CSS像素" class="headerlink" title="设备像素和CSS像素"></a>设备像素和CSS像素</h1><p>讲解viewport视口前先来了解一下这两个概念，这两个概念虽然都是说像素，但是此像素非彼像素。</p><h2 id="设备像素"><a href="#设备像素" class="headerlink" title="设备像素"></a>设备像素</h2><p><strong>设备像素</strong>（device pixel）是物理概念，顾名思义，显示屏是由一个个物理像素点组成的，通过控制每个像素点的颜色，使屏幕显示出不同的图像，屏幕从工厂出来那天起，它上面的物理像素点就固定不变了，单位pt。</p><blockquote><p>pt在css单位中属于真正的绝对单位，1pt = 1/72(inch),inch及英寸，而1英寸等于2.54厘米。<br>pt = 1/72(英寸), px = 1/dpi(英寸)</p></blockquote><p>不同的设备，其图像基本单位是不同的，比如显示器的点距，可以认为是显示器的物理像素。现在的液晶显示器的点距一般在0.25mm到0.29mm之间。而打印机的墨点，也可以认为是打印机的物理像素，300DPI就是0.085mm，600DPI就是0.042mm。</p><p><img src="dp.jpeg" alt=""></p><p><strong>注意</strong>，我们通常所说的显示器分辨率，其实是指桌面设定的分辨率，而不是显示器的物理分辨率。只不过现在液晶显示器成为主流，由于液晶的显示原理与CRT不同，只有在桌面分辨率与物理分辨率一致的情况下，显示效果最佳，所以现在我们的桌面分辨率几乎总是与显示器的物理分辨率一致了。</p><h2 id="CSS像素"><a href="#CSS像素" class="headerlink" title="CSS像素"></a>CSS像素</h2><p><strong>CSS像素</strong>（css pixel）是Web编程概念，指的是CSS样式代码中使用的逻辑像素。</p><p>在CSS规范中，长度单位分为两类：绝对（absolute）单位和相对（relative）单位。而px是一个相对单位，相对于设备像素。</p><p><strong>CSS像素的相对性</strong></p><p>举个例子理解：</p><p>使用PC端浏览器打开一个网页，网页中有一个宽400px的盒子（块级元素）。浏览器宽为800px，那么这个盒子的宽此时应该占据页面的一半。但是我们使用浏览器中页面放大功能，放大200%，也就是原来的两倍，那么此时该盒子宽应该占满了整个页面。但是既没有调整浏览器窗口大小，也没有改变任何的css样式，但是该盒子却看上去放大了一倍。这是因为使用页面放大功能把css像素放大了两倍。</p><p>CSS像素与屏幕像素1：1同样大小时：</p><p><img src="csslizi1.png" alt=""></p><p>CSS像素(黑色边框)开始被拉伸，此时1个CSS像素大于1个屏幕像素</p><p><img src="csslizi2.png" alt=""></p><p>默认情况下一个CSS像素应该是等同于一个物理像素的，但是浏览器放大的操作让一个CSS像素等于两倍的设备像素。</p><p>而在移动端中的高PPI的设备上，CSS像素在默认情况下就相当于多个设备像素，如iPhone5使用的是Retina视网膜屏幕，使用<code>2px * 2px</code>的设备像素代表<code>1px * 1px</code>的CSS像素。所以设备像素为<code>640pt * 1136pt</code>，而CSS像素为<code>320px * 568px</code>。</p><blockquote><p>设备独立像素（Device Independent Pixel）简写DIP</p></blockquote><p>设备独立像素也叫 <strong>密度无关像素</strong> ，可以认为是计算机坐标系统中的一个点，这个点表示一个可以由程序使用并控制的虚拟像素，可以由相关系统转换为物理像素。设备独立像素是一个整体概念，包括了css像素，比如:css像素，只是在android 机中，css像素不叫 “css像素了”，而叫“设备独立像素”。</p><blockquote><p>CSS像素 = 设备独立像素 = 逻辑像素</p></blockquote><h2 id="设备像素与CSS像素的关系"><a href="#设备像素与CSS像素的关系" class="headerlink" title="设备像素与CSS像素的关系"></a>设备像素与CSS像素的关系</h2><p>了解它们间的关系时，先来了解两个概念：<code>ppi</code>和<code>dpr</code></p><blockquote><p>PPI像素密度(pixel per inch) | DPR设备像素比(device pixel ratio)</p></blockquote><h3 id="PPI屏幕密度"><a href="#PPI屏幕密度" class="headerlink" title="PPI屏幕密度"></a>PPI屏幕密度</h3><p><code>ppi</code>:表示每英寸所拥有的像素数目，数值越高，代表显示屏能够以越高的密度显示图像。即每英寸像素取值，更确切的说法应该是像素密度，也就是衡量单位物理面积内拥有像素值的情况。</p><p><code>ppi</code>的计算公式可以查阅资料<a href="https://zh.wikipedia.org/wiki/%E6%AF%8F%E8%8B%B1%E5%AF%B8%E5%83%8F%E7%B4%A0" target="_blank" rel="noopener">ppi计算公式</a>。</p><p><img src="ppicalc.png" alt=""></p><p>来算一下数学</p><p><img src="calclizi.png" alt=""></p><p>图中以屏幕尺寸为4寸的<code>iPhone 5s</code>为例，分辨率为<code>1136pt x 640pt</code>，代入公式像素密度为<code>326PPI</code>。计算结果会有出入。</p><blockquote><p>分辨率为<code>1136pt x 640pt</code>指屏幕上垂直有 1136 个物理像素，水平有 640 个物理像素</p></blockquote><blockquote><p>DPI: 每英寸多少点。如果是在当用于描述显示器设备时，ppi和dpi是同一概念，是相等的。</p></blockquote><h3 id="DPR设备像素比"><a href="#DPR设备像素比" class="headerlink" title="DPR设备像素比"></a>DPR设备像素比</h3><p>设备像素比（device pixel ratio）定义了设备像素和设备独立像素（CSS像素）的转换关系，即一个设备像素对应多少个设备独立像素（CSS像素）。</p><ul><li>与设备的关系：<code>DPR = 屏幕横向设备像素 / 设备PPI</code></li><li>与设备像素、CSS像素的关系：<code>DPR = 设备像素 / CSS像素</code></li><li>与 <strong>理想视口</strong>(下文将提到)的关系：<code>DPR = 屏幕横向设备像素 / 理想视口的宽度</code></li></ul><p>在一台移动终端中，设备像素的大小是固定的，不可变的。但是<code>设备独立像素dip</code>是可以被拉长或压缩的。</p><p><img src="whatisdip.png" alt=""></p><p>例如iPhone5s中使用的是Retina视网膜屏幕，即PPI超过300的都叫做超高密度屏幕，只不过苹果公司给了换了个高大上的名字：Retina视网膜屏幕。</p><p>但是在普通屏幕下1个设备像素等于一个CSS像素的设备已经很少了，比如 Iphone 5s 设备像素比为2，Iphone 6s 设备像素比为3。至于安卓机中的设备像素比就更多了，有1.3、1.5、2、3等等。</p><p><strong>如何理解DPR</strong></p><p>设备像素比(dpr) 是指在移动开发中1个css像素占用多少设备像素，如2代表1个css像素用2x2个设备像素来绘制。</p><p>设备像素比(dpr)，公式为<code>1px = (dpr)^2 * 1dp</code>，可以理解为1px由多少个设备像素组成；</p><h3 id="PPI和DPR的关系"><a href="#PPI和DPR的关系" class="headerlink" title="PPI和DPR的关系"></a>PPI和DPR的关系</h3><p>毕竟这些参数是外国人先发明的，他们会优先选择自己熟悉的计量单位作为显示设备的工厂标准参数，因此ppi就用作显示设备的工业标准；</p><p>告诉业界人士，ppi达到多少是高清屏，此时对应的dpr是多少，而不直接告诉你我现在的显示设备dpr是多少，毕竟人们直接听到像素分辨率会更加有反应。</p><p><strong>设备像素比与ppi相关，一般是ppi/160的整数倍：</strong></p><p><img src="ppireldpr.jpeg" alt=""></p><h3 id="设备像素和CSS像素的关系"><a href="#设备像素和CSS像素的关系" class="headerlink" title="设备像素和CSS像素的关系"></a>设备像素和CSS像素的关系</h3><p>以iPhone6/7/8为例：</p><blockquote><p>设备宽高为375pt × 667pt，可以理解为设备独立像素(或css像素)。<br>dpr为2，根据上面的计算公式，其物理像素就为750pt × 1334pt。</p></blockquote><p><img src="csspixel.png" alt=""></p><p>上图中可以看出，对于这样的css样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">height</span>: 2<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p>在不同的屏幕上(普通屏幕 vs retina屏幕)，css像素所呈现的大小(物理尺寸)是一致的，不同的是1个css像素所对应的物理像素个数是不一致的。</p><p>在普通屏幕下，1个css像素 对应 1个物理像素(1:1)。 在retina 屏幕下，1个css像素对应 4个物理像素(1:4)。</p><h2 id="window-devicePixelRatio"><a href="#window-devicePixelRatio" class="headerlink" title="window.devicePixelRatio"></a>window.devicePixelRatio</h2><p><code>window.devicePixelRatio</code>是设备上物理像素和设备独立像素(device-independent pixels (dips))的比例。<br>公式表示就是：<code>window.devicePixelRatio = 物理像素 / dips</code>。</p><p>dip或dp,（device independent pixels，设备独立像素）与屏幕密度有关。dip可以用来辅助区分视网膜设备还是非视网膜设备。</p><p>所有非视网膜屏幕的iphone在垂直的时候，宽度为320物理像素。当你使用<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code>的时候，会设置视窗布局宽度（不同于视觉区域宽度，不放大显示情况下，两者大小一致，见下图）为320px, 于是，页面很自然地覆盖在屏幕上。</p><p>这样，非视网膜屏幕的iphone上，屏幕物理像素320像素，独立像素也是320像素，因此，window.devicePixelRatio等于1.</p><p>而对于视网膜屏幕的iphone，如iphone4s, 纵向显示的时候，屏幕物理像素640像素。同样，当用户设置<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code>的时候，其视区宽度并不是640像素，而是320像素，这是为了有更好的阅读体验 – 更合适的文字大小。</p><p>这样，在视网膜屏幕的iphone上，屏幕物理像素640像素，独立像素还是320像素，因此，<code>window.devicePixelRatio</code>等于<code>2</code>.</p><blockquote><p>在css中，可以通过-webkit-device-pixel-ratio，webkit-min-device-pixel-ratio和-webkit-max-device-pixel-ratio进行媒体查询，对不同dpr的设备，做一些样式适配(这里只针对webkit内核的浏览器和webview)。</p></blockquote><p><strong>兼容性</strong></p><p>来自<a href="https://caniuse.com/#search=window.devicePixelRatio" target="_blank" rel="noopener">caniuse.com</a></p><p><img src="caniusedevicepixelratio.png" alt=""></p><p>喜忧参半。好的是Safari, Android WebKit, Chrome 22+(Android), Opera Mobile, BlackBerry WebKit, QQ, Palm WebKit, 及Dolfin都能正确实现该属性。</p><p>当然，大部分这些浏览器仍然运行在<code>devicePixelRatio</code>值应该为<code>1</code>的系统上，当它们移动到视网膜类似设备时候，可能就会遇到问题。</p><blockquote><p>注意：你可以为这个 window.devicePixelRatio 重新赋值，但并不会对最终的显示造成任何的影响。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.devicePixelRatio = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.devicePixelRatio); <span class="comment">//10</span></span><br></pre></td></tr></table></figure><h2 id="设计师和前端工程师之间如何协同"><a href="#设计师和前端工程师之间如何协同" class="headerlink" title="设计师和前端工程师之间如何协同"></a>设计师和前端工程师之间如何协同</h2><p>一般由设计师按照设备像素(device pixel)为单位制作设计稿。<br>前端工程师，参照相关的设备像素比(device pixel ratio)，进行换算以及编码。</p><h1 id="分辨率、像素和屏幕尺寸"><a href="#分辨率、像素和屏幕尺寸" class="headerlink" title="分辨率、像素和屏幕尺寸"></a>分辨率、像素和屏幕尺寸</h1><p><code>PPI</code>指的是像素密度。</p><p>分辨率是指一个块屏幕的像素尺寸。比如说<code>1334pt * 750pt</code>是iPhone6的分辨率。</p><p>屏幕尺寸是指显示屏幕对角线的尺寸，一般用英寸来表示。</p><p>询问别人一粒像素有多大是一个非常鸡贼的问题（小心面试遇到这样的题），虽然我们说像素是构成屏幕的发光的点，是物理的，但是像素在脱离了屏幕尺寸之后是没有大小可言的，你可以将 1920 * 1080 颗像素放到一台 40 寸的小米电视机里面，也可以将同样多的像素全部塞到一台 5.5 寸的 iPhone7 Plus 手机里面去，那么对于 40 寸的电视而言，每个像素颗粒当然会大于 5.5 寸的手机的像素。</p><p><img src="tvandphone.jpeg" alt=""></p><p>所以光看屏幕的分辨率对于设计师来说是不具备多少实际意义的，通过分辨率计算得出的像素密度（PPI）才是设计师要关心的问题，我们通过屏幕分辨率和屏幕尺寸就能计算出屏幕的像素密度的。</p><p>再次使用 iPhone（6~7）作为例子。我们知道该屏幕的横向物理尺寸为 2.3 英寸 ，且横向具有 750 颗像素，根据下面的公式，我们能够算出 iPhone（6~7）的屏幕是 326 PPI，意为每寸存在 326 颗像素。</p><p>其实不论我们怎么除，计算得出来的像素密度（PPI）都会是这个数，宽存在像素除以宽物理长度，高存在像素除以高物理长度，得数都接近于 326。</p><h1 id="viewport视口"><a href="#viewport视口" class="headerlink" title="viewport视口"></a>viewport视口</h1><p>在移动设备上的浏览器都会认为自己能让所有网站显示，即使不是为移动设备设计的网站。但是以浏览器可视区域为viewport的话，移动设备屏幕都不宽，所以那些为桌面浏览器设计的网站放到移动设备显示的时候，必然会因为viewport太窄而挤作一团，甚至布局也会乱掉。虽然市面上说某某手机分辨率达到<code>768 * 1024</code>，甚至到达2k屏的分辨率，那这么高的分辨率用来显示桌面网站应该没有问题吧。但是在上述文中<code>CSS像素</code>中的1px只是一个相对值，并不能够直接代表等于屏幕上的1px。手机分辨率越大，但是屏幕尺寸不变的情况下，css像素中的1px就回代表更多的物理像素，才能让1px的东西在屏幕上的大小与那些低分辨率的设备差不多，不然会因为太过于小而使得肉眼无法看清。</p><p>所以在移动设备下，浏览器的viewport可以分为三个：可视视口（visual viewport）、布局视口（layout viewport）和理想视口（ideal viewport）。（来自ppk大神观点）</p><h2 id="可视视口"><a href="#可视视口" class="headerlink" title="可视视口"></a>可视视口</h2><p>可视视口就是目前在屏幕上显示页面的一部分。用户可以滚动以更改用户自己所看到的部分，或者缩放以更改可视窗口的大小。</p><p><img src="visualviewport.jpg" alt=""></p><p>但是，CSS布局（尤其是百分比宽度）是相对于布局视口计算的， 布局视口比视觉视口宽得多。</p><p>因此，<code>&lt;html&gt;</code>元素最初采用布局视口的宽度，并且您的CSS被解释为屏幕明显比手机屏幕宽。这可确保您网站的布局与桌面浏览器上的布局相同。</p><p>布局视口有多宽？这与浏览器不同。<code>Safari iPhone</code>使用<code>980px</code>，<code>Opera</code>使用<code>850px</code>，<code>Android WebKit</code>使用<code>800px</code>和<code>IE</code>使用<code>974px</code>。</p><blockquote><p>可视视口的宽度可以通过<code>window.innerWidth</code>获取，但是在Android 2, Oprea mini 和 UC 8中无法正确获取。</p></blockquote><h2 id="布局视口"><a href="#布局视口" class="headerlink" title="布局视口"></a>布局视口</h2><p>一般移动设备的浏览器都默认设置了一个 viewport 元标签，定义一个虚拟的布局视口（layout viewport），用于解决早期的页面在手机上显示的问题。iOS, Android 基本都将这个视口分辨率设置为 980px，所以 PC 上的网页基本能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p><p><strong>完全缩小的情况下：visual viewport = layout viewport</strong></p><p><img src="vv=lv.jpg" alt=""></p><p>浏览器选择了布局视口的尺寸，使其在完全缩小模式下完全覆盖屏幕（因此等于可视视口）.</p><p><strong>不完全缩小的情况下：layout viewport &gt; visual viewport</strong></p><p><img src="lv&gt;vv.jpg" alt=""></p><p>布局视口的宽度和高度等于在不完全缩小模式下可以在屏幕上显示的任何宽度和高度。当用户放大这些尺寸时保持不变。</p><p>在放大和缩小的过程中，<code>visual viewport</code>和<code>layout viewport</code>的宽，高都没发生任何的变化,变化的仅仅就像是用户拿着这个<code>visual viewport</code>去远离或者靠近<code>layout viewport</code>，在远离或者靠近的过程中，就会呈现出缩放的效果来。</p><blockquote><p>布局视口的宽度/高度可以通过<code>document.documentElement.clientWidth / Height</code>获取。</p></blockquote><h2 id="布局视口和可视视口的联系"><a href="#布局视口和可视视口的联系" class="headerlink" title="布局视口和可视视口的联系"></a>布局视口和可视视口的联系</h2><p>可以把<code>layout viewport</code>理解为一张完全遮住并且不能更边大小的白纸，把<code>visual viewport</code>理解为一个有边框的透视器，你可以通过这个透视器来查看这张白纸的内容。通过这个透视器你可以一点点的看到白纸部分内容，这里所能看到的就是<code>visual viewport</code>。你也可以靠近或者远离的方式来透视白纸（白纸静止不动），你看的内容可以变多或者变少，但是白纸<code>layout viewport</code>自身的大小和形状是不会发生改变的。</p><h2 id="理想视口"><a href="#理想视口" class="headerlink" title="理想视口"></a>理想视口</h2><p>布局视口的默认宽度并不是一个理想的宽度，于是 Apple 和其他浏览器厂商引入了理想视口的概念，它对设备而言是最理想的布局视口尺寸。显示在理想视口中的网站具有最理想的宽度，用户无需进行缩放。</p><blockquote><p>完美适配：首先不需要用户缩放和横向滚动条就能正常的查看网站的所有内容；第二，显示的文字的大小是合适，比如一段14px大小的文字，不会因为在一个高密度像素的屏幕里显示得太小而无法看清，理想的情况是这段14px的文字无论是在何种密度屏幕，何种分辨率下，显示出来的大小都是差不多的。当然，不只是文字，其他元素像图片什么的也是这个道理。</p></blockquote><p>理想视口的值其实就是屏幕分辨率的值，它对应的像素叫做设备逻辑像素（device independent pixel, dip）。dip 和设备的物理像素无关，一个 dip 在任意像素密度的设备屏幕上都占据相同的空间。如果用户没有进行<code>缩放</code>，那么一个 CSS 像素就等于一个 dip。</p><p><code>ideal viewport</code>并没有一个固定的尺寸，不同的设备拥有有不同的<code>ideal viewport</code>。所有的iphone的<code>ideal viewport</code>宽度都是320px，无论它的屏幕宽度是320还是640，也就是说，在iphone中，css中的320px就代表iphone屏幕的宽度。</p><p>但是安卓设备就比较复杂了，有320px的，有360px的，有384px的等等，关于不同的设备ideal viewport的宽度都为多少，可以到 <a href="http://viewportsizes.com" target="_blank" rel="noopener">http://viewportsizes.com</a> 去查看一下，里面收集了众多设备的理想宽度。</p><p>用下面的方法可以使布局视口与理想视口的宽度一致：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h2><p>两个视口都以CSS像素为单位进行测量。但是，当视觉视口尺寸随着缩放而变化时（如果放大，屏幕上的CSS像素较少），布局视口尺寸保持不变。（如果他们没有，您的页面将不断重排，因为重新计算百分比宽度。）</p><p>缩放是相对于<code>ideal viewport</code>缩放的，缩放值越大，当前viewport的宽度就会越小，反之亦然。例如在iphone中，<code>ideal viewport</code> 的宽度是320px，如果我们设置<code>initial-scale=2</code>，此时 viewport 的宽度会变为只有160px了，这也好理解，放大了一倍嘛，就是原来1px的东西变成2px了，但是1px变为2px并不是把原来的320px变为640px了，而是在实际宽度不变的情况下，1px变得跟原来的2px的长度一样了，所以放大2倍后原来需要320px才能填满的宽度现在只需要160px就做到了。因此，我们可以得出一个公式：</p><p><strong>视觉视口和缩放比例的关系为：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">visual viewport宽度 = ideal viewport宽度 / 当前缩放值</span><br><span class="line"></span><br><span class="line">当前缩放值 = 理想视口宽度  / 视觉视口宽度</span><br></pre></td></tr></table></figure><p>所以，当用户放大时，视觉视口将会变小，CSS 像素将跨越更多的物理像素。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>ppk大神把移动设备上的viewport分为 <strong>layout viewport</strong> 、 <strong>visual viewport</strong> 和 <strong>ideal viewport</strong> 三类，其中的<code>ideal viewport</code>是最适合移动设备的viewport，<code>ideal viewport</code>的宽度等于移动设备的屏幕宽度，只要在css中把某一元素的宽度设为<code>ideal viewport</code>的宽度(单位用px)，那么这个元素的宽度就是设备屏幕的宽度了，也就是宽度为100%的效果。<code>ideal viewport</code> 的意义在于，无论在何种分辨率的屏幕下，那些针对<code>ideal viewport</code>而设计的网站，不需要用户手动缩放，也不需要出现横向滚动条，都可以完美的呈现给用户。</p><h1 id="利用meta标签对viewport进行控制"><a href="#利用meta标签对viewport进行控制" class="headerlink" title="利用meta标签对viewport进行控制"></a>利用meta标签对viewport进行控制</h1><p>移动设备默认的viewport是layout viewport，也就是那个比屏幕要宽的viewport，但在进行移动设备网站的开发时，我们需要的是ideal viewport。那么怎么才能得到ideal viewport呢？这就该轮到meta标签出场了。</p><p>我们可以使用视口元标签（viewport meta 标签）来进行布局视口的设置。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上述<code>meta</code>标签的作用是让当前viewport的宽度等于设备的宽度，同时不允许用户手动缩放。</p><p><code>meta viewport</code>标签首先是由苹果公司在其<code>safari</code>浏览器中引入的，目的就是解决移动设备的<code>viewport</code>问题。后来安卓以及各大浏览器厂商也都纷纷效仿，引入对meta viewport的支持，事实也证明这个东西还是非常有用的。</p><p>在苹果的规范中，meta viewport 有6个属性(暂且把content中的那些东西称为一个个属性和值)，如下：</p><table><thead><tr><th>属性</th><th>取值</th><th>描述</th></tr></thead><tbody><tr><td>width</td><td>正整数或device-width</td><td>定义视口的宽度，单位为像素</td></tr><tr><td>height</td><td>正整数或device-height</td><td>定义视口的高度，单位为像素，一般不用</td></tr><tr><td>initial-scale</td><td>[0.0-10.0]</td><td>定义初始缩放值</td></tr><tr><td>minimum-scale</td><td>[0.0-10.0]</td><td>定义放大最大比例，它必须小于或等于maximum-scale设置</td></tr><tr><td>maximum-scale</td><td>[0.0-10.0]</td><td>定义缩小最小比例，它必须大于或等于minimum-scale设置</td></tr><tr><td>user-scalable</td><td>yes / no</td><td>定义是否允许用户手动缩放页面，默认值 yes</td></tr></tbody></table><p><strong>有几点需要注意：</strong></p><ul><li>viewport 标签只对移动端浏览器有效，对 PC 端浏览器是无效的</li><li>当缩放比例为 100% 时，dip 宽度 = CSS 像素宽度 = 理想视口的宽度 = 布局视口的宽度</li><li>单独设置 initial-scale 或 width 都会有兼容性问题，所以设置布局视口为理想视口的最佳方法是同时设置这两个属性</li><li>即使设置了 user-scalable = no，在 Android Chrome 浏览器中也可以强制启用手动缩放</li></ul><p>这些属性可以同时使用，也可以单独使用或混合使用，多个属性同时使用时用逗号隔开就行了。</p><p>此外，在安卓中还支持<code>target-densitydpi</code> 这个私有属性，它表示目标设备的密度等级，作用是决定css中的1px代表多少物理像素。</p><table><thead><tr><th>属性</th><th>取值</th><th>描述</th></tr></thead><tbody><tr><td>target-densitydpi</td><td>high-dpi,medium-dpi,low-dpi,device-dpi</td><td>私有属性，它表示目标设备的密度等级，作用是决定css中的1px代表多少物理像素</td></tr></tbody></table><p>特别说明的是，当<code>target-densitydpi=device-dpi</code>时， css中的1px会等于物理像素中的1px。</p><p>因为这个属性只有安卓支持，并且安卓已经决定要废弃<code>&lt;strike&gt;target-densitydpi&lt;/strike&gt;</code>  这个属性了，所以这个属性我们要避免进行使用。</p><h1 id="动态改变meta-viewport标签"><a href="#动态改变meta-viewport标签" class="headerlink" title="动态改变meta viewport标签"></a>动态改变meta viewport标签</h1><h2 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h2><p>使用<code>document.write</code>来动态输出<code>meta viewport</code>标签，例如</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;'</span>)</span><br></pre></td></tr></table></figure><h2 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h2><p>通过<code>setAttribute</code>来改变</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">id</span>=<span class="string">"testViewport"</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width = 380"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mvp = <span class="built_in">document</span>.getElementById(<span class="string">'testViewport'</span>);</span></span><br><span class="line"><span class="javascript">mvp.setAttribute(<span class="string">'content'</span>,<span class="string">'width=480'</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安卓2.3自带浏览器上的一个<code>bug</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">alert(<span class="built_in">document</span>.documentElement.clientWidth); <span class="comment">//弹出600，正常情况应该弹出320</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=600"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">alert(<span class="built_in">document</span>.documentElement.clientWidth); <span class="comment">//弹出320，正常情况应该弹出600</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试的手机<code>ideal viewport</code>宽度为320px，第一次弹出的值是600,但这个值应该是第行meta标签的结果啊，然后第二次弹出的值是320，这才是第一行meta标签所达到的效果啊，所以在安卓2.3(或许是所有2.x版本中)的自带浏览器中，对<code>meta viewport</code>标签进行覆盖或更改，会出现让人非常迷糊的结果。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://segmentfault.com/a/1190000015884091" target="_blank" rel="noopener">https://segmentfault.com/a/1190000015884091</a></p><p><a href="https://www.quirksmode.org/mobile/viewports.html" target="_blank" rel="noopener">https://www.quirksmode.org/mobile/viewports.html</a></p><p><a href="https://www.quirksmode.org/mobile/viewports2.html" target="_blank" rel="noopener">https://www.quirksmode.org/mobile/viewports2.html</a></p><p><a href="https://www.quirksmode.org/mobile/metaviewport/" target="_blank" rel="noopener">https://www.quirksmode.org/mobile/metaviewport/</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Mobile/Viewport_meta_tag" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Mobile/Viewport_meta_tag</a></p><p><a href="https://www.jianshu.com/p/af6dad66e49a" target="_blank" rel="noopener">https://www.jianshu.com/p/af6dad66e49a</a></p><p><a href="http://viewportsizes.com" target="_blank" rel="noopener">http://viewportsizes.com</a></p><p><a href="https://juejin.im/post/5bb6c62be51d450e47142c60" target="_blank" rel="noopener">https://juejin.im/post/5bb6c62be51d450e47142c60</a></p><p><a href="https://www.jianshu.com/p/3d28f4959c5a" target="_blank" rel="noopener">https://www.jianshu.com/p/3d28f4959c5a</a></p><p><a href="https://stackoverflow.com/questions/6333927/difference-between-visual-viewport-and-layout-viewport" target="_blank" rel="noopener">https://stackoverflow.com/questions/6333927/difference-between-visual-viewport-and-layout-viewport</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;浏览器的&lt;code&gt;viewport&lt;/code&gt;是可以看到Web内容的窗口区域，通常与渲染出的页面的大小不同，这种情况下，浏览器会提供滚动条以滚动访问所有内容。&lt;/p&gt;
&lt;p&gt;窄屏幕设备（如移动设备）在一个虚拟窗口或视口中渲染页面，这个窗口或视口通常比屏幕宽；然后缩小渲染的结果，以便在一屏内显示所有内容。然后用户可以移动、缩放以查看页面的不同区域。例如，如果移动屏幕的宽度为640px，则可能会用980px的虚拟视口渲染页面，然后缩小页面以适应640px的窗口大小。&lt;/p&gt;
&lt;p&gt;这样做是因为许多页面没有做移动端优化，在小窗口渲染时会乱掉（或看起来乱）。所以，这种虚拟视口是一种让未做移动端优化的网站在窄屏设备上看起来更好的办法。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hackycy.github.io/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://hackycy.github.io/tags/HTML/"/>
    
      <category term="移动端适配" scheme="http://hackycy.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Android build.gradle配置详解</title>
    <link href="http://hackycy.github.io/2019/04/10/Android-build-gradle%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/04/10/Android-build-gradle配置详解/</id>
    <published>2019-04-10T04:21:25.000Z</published>
    <updated>2019-04-10T06:41:38.111Z</updated>
    
    <content type="html"><![CDATA[<p>AS是采用gradle来进行构建项目，而gradle是基于groovy语言。这里了解一下项目中gradle的详细配置。</p><a id="more"></a><p><img src="project.png" alt="一个最简单的项目结构"></p><h1 id="Project的build-gradle文件"><a href="#Project的build-gradle文件" class="headerlink" title="Project的build.gradle文件"></a>Project的build.gradle文件</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        google()<span class="comment">//从Android Studio3.0后新增了google()配置，可以引用google上的开源项</span></span><br><span class="line">        jcenter()<span class="comment">//是一个类似于github的代码托管仓库，声明了jcenter()配置，可以轻松引用 jcenter上的开源项目</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.3.2'</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;<span class="comment">//这里是项目本身需要的依赖，比如项目所需的maven库</span></span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行gradle clean时，执行此处定义的task任务。</span></span><br><span class="line"><span class="comment">// 该任务继承自Delete，删除根目录中的build目录。</span></span><br><span class="line"><span class="comment">// 相当于执行Delete.delete(rootProject.buildDir)。</span></span><br><span class="line"><span class="comment">// gradle使用groovy语言，调用method时可以不用加（）。</span></span><br><span class="line"><span class="keyword">task</span> clean(type: <span class="keyword">Delete</span>) &#123;</span><br><span class="line">    <span class="keyword">delete</span> rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>buildscript{}</code>闭包是gradle脚本执行所需要的依赖，分别是对应的maven库和插件<ul><li><code>repositories{}</code>闭包：配置远程仓库,该闭包中声明了jcenter()和google()的配置，其中jcenter是一个代码托管仓库，上面托管了很多Android开源项目，在这里配置了jcenter后我们可以在项目中方便引用jcenter上的开源项目，从Android Studio3.0后新增了google()配置，可以引用google上的开源项目</li><li><code>dependencies{}</code>闭包：配置构建工具,该闭包使用classpath声明了一个Gradle插件，由于Gradle并不只是用来构建Android项目，因此此处引入相关插件来构建Android项目，其中’3.0.0’为该插件的版本号，可以根据最新的版本号来调整</li></ul></li><li><code>allprojects{}</code>闭包是项目本身需要的依赖，比如项目所需要的maven库</li><li><code>task clean(type: Delete)</code>是运行gradle clean时，执行此处定义的task任务，该任务继承自Delete，删除根目录中的build目录。其中buildscript包含repositories闭包和dependencies闭包</li></ul><h1 id="Module的build-gradle文件"><a href="#Module的build-gradle文件" class="headerlink" title="Module的build.gradle文件"></a>Module的build.gradle文件</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">28</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"cn.net.sweetlover.myapplication"</span></span><br><span class="line">        minSdkVersion <span class="number">15</span></span><br><span class="line">        targetSdkVersion <span class="number">28</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android-optimize.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:28.0.0'</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.3'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="apply-plugin"><a href="#apply-plugin" class="headerlink" title="apply plugin"></a>apply plugin</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明是Android程序，</span></span><br><span class="line"><span class="comment">//com.android.application 表示这是一个应用程序模块</span></span><br><span class="line"><span class="comment">//com.android.library 标识这是一个库模块</span></span><br><span class="line"><span class="comment">//而这区别：前者可以直接运行，后着是依附别的应用程序运行</span></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br></pre></td></tr></table></figure><p>apply plugin表示应用了一个插件，一般有两种值可选：</p><ul><li><code>com.android.application</code>，表示该模块为应用程序模块，可以直接运行，打包得到的是<code>apk</code>文件</li><li><code>com.android.library</code>，表示该模块为库模块，只能作为代码库依附与别的应用程序模块来运行，打包得到的是<code>aar</code>文件</li></ul><h2 id="android-闭包"><a href="#android-闭包" class="headerlink" title="android{}闭包"></a>android{}闭包</h2><p>这个闭包主要为了配置项目构建的各种属性：</p><h3 id="signingConfigs"><a href="#signingConfigs" class="headerlink" title="signingConfigs{}"></a>signingConfigs{}</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">signingConfigs &#123;<span class="comment">// 自动化打包配置</span></span><br><span class="line">        release &#123;<span class="comment">// 线上环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.keystore'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 开发环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.keystore'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以手动添加签名配置，也可以通过<code>Project Structure</code>-&gt;<code>app</code>-&gt;<code>Singing</code>，点击下面<code>+</code>号填入配置信息即可生成代码配置。</p><p><img src="sign_auto.png" alt="AS配置"></p><p>签名配置完成后可以方便带签名打包，在module的<code>Build Variants</code>中有两个<code>Type</code>，分别是<code>debug</code>和<code>release</code>，可以选择任意一个类型进行打包，并且他们会利用各自配置的Key进行打包，执行 Run app或者<code>Build</code>-&gt;<code>Build apk</code>就会自动在<code>module name/app/build/outputs/apk</code>路径下生成Apk文件。另一种打包方式是Build-&gt;Generate Signed APK填写签名信息生成Apk。</p><h3 id="compileSdkVersion"><a href="#compileSdkVersion" class="headerlink" title="compileSdkVersion"></a>compileSdkVersion</h3><p>设置编译时用的Android版本</p><h3 id="buildToolsVersion"><a href="#buildToolsVersion" class="headerlink" title="buildToolsVersion"></a>buildToolsVersion</h3><p>设置编译时使用的构建工具的版本，Android Studio3.0后去除此项配置</p><h3 id="defaultConfig"><a href="#defaultConfig" class="headerlink" title="defaultConfig{}"></a>defaultConfig{}</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"cn.net.sweetlover.myapplication"</span><span class="comment">//项目的包名</span></span><br><span class="line">        minSdkVersion <span class="number">16</span><span class="comment">//项目最低兼容的版本</span></span><br><span class="line">        targetSdkVersion <span class="number">27</span><span class="comment">//项目的目标版本</span></span><br><span class="line">        versionCode <span class="number">1</span><span class="comment">//版本号</span></span><br><span class="line">        versionName <span class="string">"1.0"</span><span class="comment">//版本名称</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span><span class="comment">//表明要使用AndroidJUnitRunner进行单元测试</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><code>applicationId</code>：指定了项目的包名。</li><li><code>minSdkVersion</code>:指定项目最低兼容的版本，如果设备小于这个版本或者大于maxSdkVersion(一般不用)将无法安装这个应用，这里指定为16，表示最低兼容到Android 4.1系统。</li><li><code>targetSdkVersion</code>:指定项目的目标版本，表示在该目标版本上已经做过充分测试，系统会为该应用启动一些对应该目标系统的最新功能特性，Android系统平台的行为变更，只有targetSdkVersion的属性值被设置为大于或等于该系统平台的API版本时，才会生效。例如，若指定targetSdkVersion值为22，则表示该程序最高只在Android5.1版本上做过充分测试，在Android6.0系统上（对应targetSdkVersion为23）拥有的新特性如系统运行时权限等功能就不会被启用。</li><li><code>versionCode</code>:表示版本号，一般每次打包上线时该值只能增加，打包后看不见。</li><li><code>versionName</code>:表示版本名称，展示在应用市场上。</li><li><code>testInstrumentationRunner</code>:<code>&quot;android.support.test.runner.AndroidJUnitRunner&quot;</code>表明要使用<code>AndroidJUnitRunner</code>进行单元测试。</li></ul><h3 id="buildTypes"><a href="#buildTypes" class="headerlink" title="buildTypes{}"></a>buildTypes{}</h3><p>这个闭包主要指定生成安装文件的主要配置，一般包含两个子闭包，一个是<code>debug</code>闭包，用于指定生成测试版安装文件的配置，可以忽略不写；另一个是<code>release</code>闭包，用于指定生成正式版安装文件的配置。两者能配置的参数相同，最大的区别默认属性配置不一样，两种模式支持的属性配置如下图：</p><p><img src="buildtype.png" alt=""></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;<span class="comment">// 生产/测试环境配置</span></span><br><span class="line">        release &#123;<span class="comment">// 生产环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"false"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://release.cn/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.release<span class="comment">//设置签名信息</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 测试环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"true"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://test.com/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.debug<span class="comment">//设置签名信息</span></span><br><span class="line">            debuggable <span class="keyword">false</span><span class="comment">//是否支持断点调试</span></span><br><span class="line">            jniDebuggable <span class="keyword">false</span><span class="comment">//是否可以调试NDK代码</span></span><br><span class="line">            renderscriptDebuggable <span class="keyword">false</span><span class="comment">//是否开启渲染脚本就是一些c写的渲染方法</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>release{}</code>闭包和<code>debug{}</code>闭包两者能配置的参数相同，最大的区别默认属性配置不一样：</p><ul><li><code>minifyEnabled</code>:表明是否对代码进行混淆，true表示对代码进行混淆，false表示对代码不进行混淆，默认的是false。</li><li><code>proguardFiles</code>:指定混淆的规则文件，这里指定了<code>proguard-android.txt</code>文件和<code>proguard-rules.pro</code>文件两个文件，<code>proguard-android.txt</code>文件为默认的混淆文件，里面定义了一些通用的混淆规则。<code>proguard-rules.pro</code>文件位于当前项目的根目录下，可以在该文件中定义一些项目特有的混淆规则。</li><li><code>buildConfigField</code>:用于解决Beta版本服务和Release版本服务地址不同或者一些Log打印需求控制的。 <strong>例如：配置buildConfigField(“boolean”, “LOG_DEBUG”, “true”)</strong>，这个方法接收三个非空的参数，第一个：确定值的类型，第二个：指定key的名字，第三个：传值，调用的时候BuildConfig.LOG_DEBUG即可调用。</li><li><code>debuggable</code>:表示是否支持断点调试，release默认为false，debug默认为true。</li><li><code>jniDebuggable</code>:表示是否可以调试NDK代码，使用lldb进行c和c++代码调试，release默认为false。</li><li><code>signingConfig</code>:设置签名信息，通过<code>signingConfigs.release</code>或者<code>signingConfigs.debug</code>，配置相应的签名，但是添加此配置前必须先添加<code>signingConfigs</code>闭包，添加相应的签名信息。</li><li><code>renderscriptDebuggable</code>:表示是否开启渲染脚本就是一些c写的渲染方法，默认为false。</li><li><code>renderscriptOptimLevel</code>:表示渲染等级，默认是3。</li><li><code>pseudoLocalesEnabled</code>:是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多。</li><li><code>applicationIdSuffix</code>:和defaultConfig中配置是一的，这里是在applicationId 中添加了一个后缀，一般使用的不多。</li><li><code>versionNameSuffix</code>:表示添加版本名称的后缀，一般使用的不多。</li><li><code>zipAlignEnabled</code>:表示是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率，release和debug默认都为true。</li></ul><h3 id="sourceSets"><a href="#sourceSets" class="headerlink" title="sourceSets{}"></a>sourceSets{}</h3><p>配置目录指向</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span> &#123;<span class="comment">//目录指向配置</span></span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]<span class="comment">//指定lib库目录</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>配置 <code>jniLibs.srcDirs = [&#39;libs&#39;]</code>，可以在<code>Android studio</code>的<code>Android</code>视图下生成<code>jniLibs</code>文件夹，可以方便我们存放jar包和库文件，其中<code>Android</code>视图下的<code>jniLibs</code>和<code>project</code>视图下的<code>libs</code>指向同一文件夹（app→libs），如下图所示：</p><p><img src="sourceset.png" alt=""></p><h3 id="packagingOptions"><a href="#packagingOptions" class="headerlink" title="packagingOptions{}"></a>packagingOptions{}</h3><p>打包时的相关配置</p><p>当项目中依赖的第三方库越来越多时，有可能会出现两个依赖库中存在同一个（名称）文件。如果这样，Gradle在打包时就会提示错误（警告）。那么就可以根据提示，然后使用以下方法将重复的文件剔除，比较常用的是通过exclude去除重复的文件，例如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">packagingOptions&#123;</span><br><span class="line">        <span class="comment">//pickFirsts做用是 当有重复文件时 打包会报错 这样配置会使用第一个匹配的文件打包进入apk</span></span><br><span class="line">        <span class="comment">// 表示当apk中有重复的META-INF目录下有重复的LICENSE文件时  只用第一个 这样打包就不会报错</span></span><br><span class="line">        pickFirsts = [<span class="string">'META-INF/LICENSE'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//merges何必 当出现重复文件时 合并重复的文件 然后打包入apk</span></span><br><span class="line">        <span class="comment">//这个是有默认值得 merges = [] 这样会把默默认值去掉  所以我们用下面这种方式 在默认值后添加</span></span><br><span class="line">        merge <span class="string">'META-INF/LICENSE'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个是在同时使用butterknife、dagger2做的一个处理。同理，遇到类似的问题，只要根据gradle的提示，做类似处理即可。</span></span><br><span class="line">        <span class="keyword">exclude</span> <span class="string">'META-INF/services/javax.annotation.processing.Processor'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="productFlavors"><a href="#productFlavors" class="headerlink" title="productFlavors{}"></a>productFlavors{}</h3><p>多渠道配置</p><p>这个配置是经常会使用到的，通常在适配多个渠道的时候，需要为特定的渠道做部分特殊的处理，比如设置不同的包名、应用名等。场景：当我们使用友盟统计时，通常需要设置一个渠道ID，那么我们就可以利用productFlavors来生成对应渠道信息的包，如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">android &#123;  </span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        wandoujia &#123;</span><br><span class="line">            <span class="comment">//豌豆荚渠道包配置</span></span><br><span class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class="string">"wandoujia"</span>]</span><br><span class="line">            <span class="comment">//manifestPlaceholders的使用在后续章节（AndroidManifest里的占位符）中介绍</span></span><br><span class="line">        &#125;</span><br><span class="line">        xiaomi &#123;</span><br><span class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class="string">"xiaomi"</span>]</span><br><span class="line">            applicationId <span class="string">"com.wiky.gradle.xiaomi"</span> <span class="comment">//配置包名</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        _360 &#123;</span><br><span class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class="string">"_360"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更简洁的方式：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">android &#123;  </span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        wandoujia &#123;&#125;</span><br><span class="line">        xiaomi &#123;&#125;</span><br><span class="line">        _360 &#123;&#125;</span><br><span class="line">       <span class="comment">//...</span></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    productFlavors.all &#123; </span><br><span class="line">        <span class="comment">//批量修改，类似一个循序遍历</span></span><br><span class="line">        flavor -&gt; flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name] </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完之后，在命令行窗口中（Terminal）中输入<code>gradlew assembleRelease</code>（windows）即可开始打包，在Mac系统中对应指令是<code>./gradlew assembleRelease</code>。当然，如果想要debug版本的包，将指令中<code>assembleRelease</code>改为<code>assembleDebug</code>即可。最后生成的包还是在<code>app/build/outputs/apk</code>中，默认命名格式如<code>app-wandoujia-release-unsigned.apk</code>，在module的<code>Build Variants</code>中可以选择相应的渠道。<br>注：Android Studio3.0需在主app的build.gradle里面的</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    targetSdkVersion：***</span><br><span class="line">    minSdkVersion ：***</span><br><span class="line">    versionCode：***</span><br><span class="line">    versionName ：***</span><br><span class="line">    <span class="comment">//版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了</span></span><br><span class="line">    flavorDimensions <span class="string">"versionCode"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lintOptions"><a href="#lintOptions" class="headerlink" title="lintOptions{}"></a>lintOptions{}</h3><p>代码扫描分析</p><p>Lint 是Android Studio 提供的 代码扫描分析工具，它可以帮助我们发现代码结构/质量问题，同时提供一些解决方案，而且这个过程不需要我们手写测试用例。</p><p>Lint 发现的每个问题都有描述信息和等级（和测试发现 bug 很相似），我们可以很方便地定位问题，同时按照严重程度进行解决。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关</span></span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        abortOnError <span class="keyword">false</span> <span class="comment">//即使报错也不会停止打包</span></span><br><span class="line">        checkReleaseBuilds <span class="keyword">false</span>  <span class="comment">//打包release版本的时候进行检测</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="dependencies"><a href="#dependencies" class="headerlink" title="dependencies{}"></a>dependencies{}</h2><p>该闭包定义了项目的依赖关系，一般项目都有三种依赖方式：本地依赖、库依赖和远程依赖。本地依赖可以对本地的jar包或目录添加依赖关系，库依赖可以对项目中的库模块添加依赖关系，远程依赖可以对jcener库上的开源项目添加依赖关系。从Android Studio3.0后<code>compile</code>引入库不在使用，而是通过<code>api</code>和<code>implementation</code>，<code>api</code>完全等同于以前的<code>compile</code>，用<code>api</code>引入的库整个项目都可以使用，用<code>implementation</code>引入的库只有对应的Module能使用，其他Module不能使用，由于之前的项目统一用<code>compile</code>依赖，导致的情况就是模块耦合性太高，不利于项目拆解，使用<code>implementation</code>之后虽然使用起来复杂了但是做到降低偶合兴提高安全性。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(<span class="keyword">include</span>: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:28.0.0'</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.3'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>implementation fileTree(include: [&#39;*.jar&#39;], dir: &#39;libs&#39;)</code>：<code>implementation fileTree</code>是一个本地依赖声明，表示将libs目录下所有.jar后缀的文件都添加到项目的构建路径当中。</p><p><code>testImplementation</code>和<code>androidTestImplementation</code>：表示声明测试用例库。</p><h2 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明是Android程序，</span></span><br><span class="line"><span class="comment">//com.android.application 表示这是一个应用程序模块</span></span><br><span class="line"><span class="comment">//com.android.library 标识这是一个库模块</span></span><br><span class="line"><span class="comment">//而这区别：前者可以直接运行，后着是依附别的应用程序运行</span></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    signingConfigs &#123;<span class="comment">// 自动化打包配置</span></span><br><span class="line">        release &#123;<span class="comment">// 线上环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.jks'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 开发环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.jks'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileSdkVersion <span class="number">27</span><span class="comment">//设置编译时用的Android版本</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"cn.net.sweetlover.myapplication"</span><span class="comment">//项目的包名</span></span><br><span class="line">        minSdkVersion <span class="number">16</span><span class="comment">//项目最低兼容的版本</span></span><br><span class="line">        targetSdkVersion <span class="number">27</span><span class="comment">//项目的目标版本</span></span><br><span class="line">        versionCode <span class="number">1</span><span class="comment">//版本号</span></span><br><span class="line">        versionName <span class="string">"1.0"</span><span class="comment">//版本名称</span></span><br><span class="line">        flavorDimensions <span class="string">"versionCode"</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span><span class="comment">//表明要使用AndroidJUnitRunner进行单元测试</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;<span class="comment">// 生产/测试环境配置</span></span><br><span class="line">        release &#123;<span class="comment">// 生产环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"false"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://release.cn/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.release<span class="comment">//设置签名信息</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 测试环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"true"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://test.com/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.debug<span class="comment">//设置签名信息</span></span><br><span class="line">            debuggable <span class="keyword">false</span><span class="comment">//是否支持断点调试</span></span><br><span class="line">            jniDebuggable <span class="keyword">false</span><span class="comment">//是否可以调试NDK代码</span></span><br><span class="line">            renderscriptDebuggable <span class="keyword">false</span><span class="comment">//是否开启渲染脚本就是一些c写的渲染方法</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;<span class="comment">//目录指向配置</span></span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]<span class="comment">//指定lib库目录</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    packagingOptions&#123;<span class="comment">//打包时的相关配置</span></span><br><span class="line">        <span class="comment">//pickFirsts做用是 当有重复文件时 打包会报错 这样配置会使用第一个匹配的文件打包进入apk</span></span><br><span class="line">        <span class="comment">// 表示当apk中有重复的META-INF目录下有重复的LICENSE文件时  只用第一个 这样打包就不会报错</span></span><br><span class="line">        pickFirsts = [<span class="string">'META-INF/LICENSE'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//merges何必 当出现重复文件时 合并重复的文件 然后打包入apk</span></span><br><span class="line">        <span class="comment">//这个是有默认值得 merges = [] 这样会把默默认值去掉  所以我们用下面这种方式 在默认值后添加</span></span><br><span class="line">        merge <span class="string">'META-INF/LICENSE'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个是在同时使用butterknife、dagger2做的一个处理。同理，遇到类似的问题，只要根据gradle的提示，做类似处理即可。</span></span><br><span class="line">        <span class="keyword">exclude</span> <span class="string">'META-INF/services/javax.annotation.processing.Processor'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        wandoujia &#123;&#125;</span><br><span class="line">        xiaomi &#123;&#125;</span><br><span class="line">        _360 &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    productFlavors.all &#123;</span><br><span class="line">            <span class="comment">//批量修改，类似一个循序遍历</span></span><br><span class="line">        flavor -&gt; flavor.manifestPlaceholders = [IFLYTEK_CHANNEL: name]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关</span></span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        abortOnError <span class="keyword">false</span></span><br><span class="line">        <span class="comment">//即使报错也不会停止打包</span></span><br><span class="line">        checkReleaseBuilds <span class="keyword">false</span></span><br><span class="line">        <span class="comment">//打包release版本的时候进行检测</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">//项目的依赖关系</span></span><br><span class="line">    implementation <span class="keyword">fileTree</span>(<span class="keyword">include</span>: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span><br><span class="line">    <span class="comment">//本地jar包依赖</span></span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:27.1.1'</span></span><br><span class="line">    <span class="comment">//远程依赖</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.2'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    <span class="comment">//声明测试用例库</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h1><h2 id="AS一键生成"><a href="#AS一键生成" class="headerlink" title="AS一键生成"></a>AS一键生成</h2><p>1、AS菜单中<code>Build</code>-&gt;<code>Generate Signed APK</code>点击</p><p><img src="signcreate1.png" alt=""></p><p>2、点击<code>Create New...</code></p><blockquote><p>”Create new…”新建一个签名文件<br>”Choose existing…”选择一个已经存在的签名文件</p></blockquote><p>3、填写完整的签名信息。</p><p><img src="newkeystore.png" alt=""></p><p>填写完毕点击<code>OK</code></p><p><strong>参数介绍</strong></p><ul><li><code>Key store path</code> : 签名文件路径</li><li><code>Password</code> : 签名密码</li><li><code>Confirm</code> : 确认密码</li><li><code>Alias</code> : 别名</li><li><code>Validity ( years )</code> : 有限期 （年）</li><li><code>First and Last Name</code> : 全名</li><li><code>Organizational Unit</code> : 组织单位</li><li><code>Organization</code> : 组织</li><li><code>City or Locality</code> : 城市或地方</li><li><code>State or Province</code> : 州或省</li><li><code>Country Code(XX)</code> : 国家代码</li></ul><blockquote><p>这里密码统一填写“android”，别名写个“key”即可。其他的信息根据实际情况和需求填写，并不很重要。</p></blockquote><p>4、生成文件名后缀为<code>keystore</code></p><p><img src="lastcreate.png" alt=""></p><blockquote><p>选V1打包出来的app是jar的（一般这种就是当做第三方导入项目来用的），<br>选v2打包出来的APP是apk版本的（也就是可以直接在手机上安装的，可是上线的）；</p></blockquote><p>一般情况下两个同时选择即可。然后点击<code>Finish</code>完成生成签名。</p><p><strong>原因：</strong></p><p>v2的用途解释：<br>1.用于验证其完整性的APK的加密签名现在位于ZIP中央目录之前。<br>2.这个签名是在整个APK文件的二进制内容上计算和验证的，而不是在v1的归档文件中解压缩文件内容。<br>3.一个APK可以同时由v1和v2签名同时签署，所以它仍然可以向后兼容以前的Android版本。</p><p>但是只设置v2会引起7.0以下会直接安装完显示未安装，7.0以上则使用了V2的方式验证 </p><p>报错信息为：<code>INSTALL_PARSE_FAILED_NO_CERTIFICATES</code>。</p><p>同时设置V1和V2则所有机型都没问题。而只设置v1签名并不会影响什么，但是在7.0上不会使用更安全的验证方式</p><blockquote><p>如果你想在使用Android分级插件时禁用添加v1或v2的签名，你可以将这些行添加到你的signingConfig部分。<br>v1SigningEnabled false<br>v2SigningEnabled false</p></blockquote><h2 id="命令行生成"><a href="#命令行生成" class="headerlink" title="命令行生成"></a>命令行生成</h2><p>配置jdk后</p><p>运行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> forever -keyalg RSA -validity 10000 -keystore forever.keystore</span><br></pre></td></tr></table></figure></p><p><strong>这里关键文字的代表意义：</strong></p><ul><li>forever：keystore的别名alias</li><li>10000：keystore的有效天数</li><li>forever.keystore：keystore的名称</li></ul><p>1、第一次输入的秘钥库口令即为forever.keystore的密码<br>2、然后填写相关的信息<br>3、生成对应的forever.keystore，文件地址在cmd命令的对应路径下面</p><p><img src="cmdcreate.png" alt=""></p><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><h2 id="Project的setting-gradle文件"><a href="#Project的setting-gradle文件" class="headerlink" title="Project的setting.gradle文件"></a>Project的setting.gradle文件</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">':app'</span></span><br></pre></td></tr></table></figure><p>setting.gradle 文件在 初始化过程中被执行，构建器通过<code>setting.gradle</code> 文件中的内容了解哪些模块将被<code>build</code>。</p><blockquote><p>注意：单模块项目不一定需要有 setting 文件，但一旦有多个模块，必须要有 setting 文件，同时也要写明所有要构建的模块，否则 gradle 不会 build 不包括的模块。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AS是采用gradle来进行构建项目，而gradle是基于groovy语言。这里了解一下项目中gradle的详细配置。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>IOS pch预编译头文件使用</title>
    <link href="http://hackycy.github.io/2019/04/08/IOS-pch%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    <id>http://hackycy.github.io/2019/04/08/IOS-pch预编译头文件使用/</id>
    <published>2019-04-08T04:19:05.000Z</published>
    <updated>2019-04-08T04:44:22.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PCH是什么"><a href="#PCH是什么" class="headerlink" title="PCH是什么"></a>PCH是什么</h1><p>PCH文件是一个标准的预编译头文件( Pre-Compiled Header)，在Xcode6之前的版本中，系统模板会在Supporting Files文件夹自动创建。但在Xcode6之后的版本中取消了这一文件，如果我们需要使用pch文件，则需要手动创建。去掉的主要的原因:</p><a id="more"></a><blockquote><p>1、去掉自动导入的系统框架类库的头文件，可以提高原文件的复用性，便于迁移。<br>2、一个体积大的Prefix Header会大大增加编译时间。</p></blockquote><p>再来看看pch的作用：</p><blockquote><p>1.存放一些全局的宏(整个项目中都用得上的宏)。<br>2.用来包含一些头文件(整个项目中都用得上的头文件)。<br>3.能自动打开或者关闭日志输出功能。</p></blockquote><p>如果你的pch文件确实很大，那那肯定影响编译速度，苹果去掉他可能是要加快编译时间增加用户体验。虽然失去了编程的便利性。事实上，正确运用pch文件时预编译后的头文件会被缓存起来，再次编译的时候就不需要重新编译pch文件中导入的内容，编译速度并不会降低很多。很重要的一点就是pch文件确实给我们编程带来便利，我们不用在每个文件内重复引用另一个文件；那怎样才能提高编译速度呢？降低编译速度的罪魁祸首就是大量的共用性不高的宏定义和头文件的引入。编译的时候整个工程范围地查找和替换这些宏定义字段，重复导入这些头文件，不慢就奇怪了。</p><h1 id="PCH创建"><a href="#PCH创建" class="headerlink" title="PCH创建"></a>PCH创建</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p><img src="create_pch.png" alt="PCH文件创建"></p><p>点击创建，输入文件名即可。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在项目-&gt;<code>Build Settings</code>下</p><ul><li><p>找到该<code>Precompile Prefix Header</code>项设置为<code>YES</code>,这样的话pch会被预编译，预编译后的pch文件会被缓存起来，从而提高编译速度。当 <code>Precompile Prefix Header</code> 为<code>NO</code>时，那么pch不会被预编译，而是在每一个用到它导入的框架类库的<code>.m</code>文件中编译一次</p></li><li><p>找到<code>Prefix Header</code>项</p></li></ul><p><img src="pch_config.png" alt=""></p><p>双击可弹出输入框，给Prefix Header设置路径，只需要点击pch文件然后按住鼠标左键拖过来就行，但是<code>/Users/zjyzy/WorkPlace/xcode/AllDemo/BarDemo/BarDemo/PrefixHeader.pch</code>代表的是绝对路径，当用别的电脑时就不能识别了，这时就可以用到<code>$(SRCROOT)</code>来替换，在iOS中<code>$(SRCROOT)</code>代表的是项目根目录下，路径形式为：<br><code>$(SRCROOT)/当前工程名字/需要包含头文件所在文件夹</code><br>所以把路径改为:<br><code>$(SRCROOT)/BarDemo/PrefixHeader.pch</code></p><h1 id="PCH使用"><a href="#PCH使用" class="headerlink" title="PCH使用"></a>PCH使用</h1><p>一般来说在你向pch添加全局的头文件之前,必须添加以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __OBJC__</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>这个宏定义的作用是保证只有oc文件可以调用pch里面的头文件，一些非OC语言不能调用，比如.cpp,.mm。如果不加入，那么如果代码中带有.cpp,.mm文件，那么将报错。NSObjCRuntime.h  NSObject.h  NSZone.h将会报出编译异常。<br>这样你就可以在pch文件当中添加一些常用头文件、宏定义了。</p><h2 id="宏来自定义只能在debug环境下使用输出日志"><a href="#宏来自定义只能在debug环境下使用输出日志" class="headerlink" title="宏来自定义只能在debug环境下使用输出日志"></a>宏来自定义只能在debug环境下使用输出日志</h2><p>在pch文件下添加如下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __OBJC__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> TTLog(...) NSLog(__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> TTLog(...);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p><code>TTLog</code>为自定义名称,在项目中输出则将<code>NSLog</code>替换为<code>TTLog</code>即可。</p></blockquote><p><strong>宏定义的debug /release切换，见下图操作步骤</strong></p><p><img src="rd.png" alt=""></p><p>在选择了<code>Edit Scheme</code>后<code>run info</code>中切换<code>debug/release</code>模式</p><p><img src="rd2.png" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://my.oschina.net/goboy/blog/1838003" target="_blank" rel="noopener">https://my.oschina.net/goboy/blog/1838003</a></p><p><a href="https://www.jianshu.com/p/a1d61f5cc454" target="_blank" rel="noopener">https://www.jianshu.com/p/a1d61f5cc454</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PCH是什么&quot;&gt;&lt;a href=&quot;#PCH是什么&quot; class=&quot;headerlink&quot; title=&quot;PCH是什么&quot;&gt;&lt;/a&gt;PCH是什么&lt;/h1&gt;&lt;p&gt;PCH文件是一个标准的预编译头文件( Pre-Compiled Header)，在Xcode6之前的版本中，系统模板会在Supporting Files文件夹自动创建。但在Xcode6之后的版本中取消了这一文件，如果我们需要使用pch文件，则需要手动创建。去掉的主要的原因:&lt;/p&gt;
    
    </summary>
    
      <category term="Ios" scheme="http://hackycy.github.io/categories/Ios/"/>
    
    
      <category term="Ios" scheme="http://hackycy.github.io/tags/Ios/"/>
    
  </entry>
  
  <entry>
    <title>IOS状态栏、导航栏使用总结</title>
    <link href="http://hackycy.github.io/2019/04/04/IOS%E7%8A%B6%E6%80%81%E6%A0%8F%E3%80%81%E5%AF%BC%E8%88%AA%E6%A0%8F%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://hackycy.github.io/2019/04/04/IOS状态栏、导航栏使用总结/</id>
    <published>2019-04-04T07:08:36.000Z</published>
    <updated>2019-04-08T04:11:11.605Z</updated>
    
    <content type="html"><![CDATA[<p><strong>状态栏与导航栏的位置如下图</strong></p><a id="more"></a><p><strong>iOS7之前：</strong>状态栏与导航栏是分开的；<br><strong>iOS7之后：</strong>状态栏与导航栏合在一起；导航部分总高度(64)= 状态栏高度(20) +导航栏内容高度((44）</p><p><strong>iPhoneX以后：</strong>状态栏的高度变为44，导航栏部分总高度(88) = 状态栏(44) + 导航栏内容高度(44)</p><p><img src="statusbar.png" alt=""></p><p>我们可以通过<code>[UIApplication sharedApplication].statusBarFrame.size</code>获取状态栏的size（一般没有刘海时的高度为<code>20</code>，有刘海时的高度为44）。通过<code>self.navigationController.navigationBar.frame.size</code>来获取导航栏的size。</p><h1 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h1><p>状态栏内容包括信号、时间、电量等，只有两种颜色样式（黑或白）。</p><h2 id="状态栏显示和隐藏"><a href="#状态栏显示和隐藏" class="headerlink" title="状态栏显示和隐藏"></a>状态栏显示和隐藏</h2><p>全局控制：通过 <strong>info.plist</strong>设置，或者调用全局方法。<br>分页控制：在视图控制器里通过 <strong>prefersStatusBarHidden</strong>方法设置。</p><h3 id="全局控制"><a href="#全局控制" class="headerlink" title="全局控制"></a>全局控制</h3><p>默认设置或者手动设置 <strong>info.plist</strong>文件中<code>View controller-based status bar appearance</code>设置为<code>NO</code>，此时状态栏需要全局设置，有两种方式设置。</p><p><strong>方法1:</strong></p><p>依次进入<code>Targets</code>-&gt;<code>General</code>-&gt;<code>Deployment Info</code>，然后可进行进行设置如下:</p><p><img src="hidestatusbar.png" alt=""></p><p>在<code>info.plist</code>文件中添加<code>Status bar is initially hidden</code>设置为<code>YES</code>，则隐藏启动页状态栏，否则反之。和直接在项目中设置相同。</p><p><img src="statusbar_infop.png" alt=""></p><p><strong>方法2:</strong></p><p>代码设置：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//已过时</span></span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] setStatusBarHidden:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//推荐</span></span><br><span class="line">[<span class="built_in">UIApplication</span> sharedApplication].statusBarHidden = <span class="literal">YES</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>使用代码控制全局的状态栏，代码的位置很重要；在AppDelegate中写入可以设置整个App页面的状态栏样式；<br>如果需要单独设置其中一个页面隐藏状态栏，需要在进入页面时设置隐藏，退出页面时设置显示，以保证不影响其他页面的状态栏样式。</p><h3 id="分页控制"><a href="#分页控制" class="headerlink" title="分页控制"></a>分页控制</h3><p>手动设置 <strong>info.plist</strong>文件中<code>View controller-based status bar appearance</code>设置为<code>YES</code>，此时全局状态设置是无效的，需要分页设置才能修改其样式，即：在每个视图控制器或者控制器基类中使用如下代码：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重写该方法</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)prefersStatusBarHidden &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;<span class="comment">//设置显示，YES为隐藏</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="状态栏颜色"><a href="#状态栏颜色" class="headerlink" title="状态栏颜色"></a>状态栏颜色</h2><p>状态栏分前后两个部分，要分清。</p><ul><li>文字部分：就是指电池、时间等部分</li><li>背景部分：就是显示黑色或者图片的部分</li></ul><h3 id="文字部分"><a href="#文字部分" class="headerlink" title="文字部分"></a>文字部分</h3><p>简单来说，就是设置显示电池电量、时间、网络部分标示的颜色， 这里只能设置两种颜色：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//黑色</span></span><br><span class="line"><span class="built_in">UIStatusBarStyleDefault</span></span><br><span class="line"><span class="comment">//白色</span></span><br><span class="line"><span class="built_in">UIStatusBarStyleLightContent</span></span><br></pre></td></tr></table></figure><p>全局控制：通过 <strong>info.plist</strong>设置，或者调用全局方法。<br>分页控制：在视图控制器里通过 <strong>preferredStatusBarStyle</strong>方法设置。</p><h4 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h4><p>默认设置或者手动设置 <strong>info.plist</strong>文件中<code>View controller-based status bar appearance</code>设置为<code>NO</code>，此时状态栏需要全局设置，有两种方式设置。</p><p><strong>方法1:</strong></p><p>依次进入<code>Targets</code>-&gt;<code>General</code>-&gt;<code>Deployment Info</code>，然后可进行进行设置如下:</p><p><img src="statusbar_fontbg.png" alt=""></p><p><strong>方法2:</strong></p><p>代码设置:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UIStatusBarStyleDefault | UIStatusBarStyleLightContent</span></span><br><span class="line"><span class="comment">//UIStatusBarStyleDefault,黑色(默认)</span></span><br><span class="line"><span class="comment">//UIStatusBarStyleLightContent,白色</span></span><br><span class="line">[<span class="built_in">UIApplication</span> sharedApplication].statusBarStyle = <span class="built_in">UIStatusBarStyleLightContent</span>;</span><br></pre></td></tr></table></figure><h4 id="分页设置"><a href="#分页设置" class="headerlink" title="分页设置"></a>分页设置</h4><p>手动设置 <strong>info.plist</strong>文件中<code>View controller-based status bar appearance</code>设置为<code>YES</code>，此时全局状态设置是无效的，需要分页设置才能修改其样式，即：在每个视图控制器或者控制器基类中使用如下代码：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重写该方法</span></span><br><span class="line">- (<span class="built_in">UIStatusBarStyle</span>)preferredStatusBarStyle &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIStatusBarStyleLightContent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>特别注意：</strong></p><p>但是，这里存在一个问题：如果当前视图控制器是<code>UINavigationController</code>的子视图控制器，<code>preferredStatusBarStyle</code>方法并不会被调用。这是因为导航控制器里的<code>preferredStatusBarStyle</code>才具有修改状态栏样式的能力。</p><p>解决方法：</p><ul><li>方法1:添加子类控制器</li></ul><p>我们需要使用自定义的子类导航控制器，在其中添加如下的代码：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIStatusBarStyle</span>)preferredStatusBarStyle &#123;</span><br><span class="line">    <span class="built_in">UIViewController</span> *topVC = <span class="keyword">self</span>.topViewController;</span><br><span class="line">    <span class="keyword">return</span> [topVC preferredStatusBarStyle];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法2:放弃preferredStatusBarStyle该方法</li></ul><p>直接不使用preferredStatusBarStyle方法，而是直接在当前视图控制器中调用如下方法修改状态栏。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//状态栏和导航栏背景色为白色，状态栏文字为黑色</span></span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.barStyle = <span class="built_in">UIBarStyleDefault</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//状态栏和导航栏背景色为黑色，状态栏文字为白色</span></span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.barStyle = <span class="built_in">UIBarStyleBlack</span>;</span><br></pre></td></tr></table></figure><h3 id="背景部分"><a href="#背景部分" class="headerlink" title="背景部分"></a>背景部分</h3><p>背景部分，简单来说，就是状态栏的背景颜色，其实系统状态栏的背景颜色一直是透明的状态，当有导航栏时，导航栏背景是什么颜色，状态栏就是什么颜色，没有导航栏时，状态栏背后的视图时什么颜色，它就是什么颜色。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置状态栏与到导航栏都是不透明</span></span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.translucent = <span class="literal">NO</span>;</span><br><span class="line"><span class="comment">// 这个方法是设置导航栏背景颜色，状态栏也会随之变色</span></span><br><span class="line">[<span class="keyword">self</span>.navigationController.navigationBar setBarTintColor:[<span class="built_in">UIColor</span> redColor]];</span><br></pre></td></tr></table></figure><p><strong>单独设置</strong></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 设置状态栏背景颜色</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param color 设置颜色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setStatusBarBackgroundColor:(<span class="built_in">UIColor</span> *)color &#123;</span><br><span class="line">    <span class="built_in">UIView</span> *statusBar = [[[<span class="built_in">UIApplication</span> sharedApplication] valueForKey:<span class="string">@"statusBarWindow"</span>] valueForKey:<span class="string">@"statusBar"</span>];</span><br><span class="line">    <span class="keyword">if</span> ([statusBar respondsToSelector:<span class="keyword">@selector</span>(setBackgroundColor:)]) &#123;</span><br><span class="line">        statusBar.backgroundColor = color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong></p><p><img src="statusbar_bg.png" alt=""></p><blockquote><p>如果是单独设置某个页面的状态栏背景色，还需要在离开页面时恢复原样。</p></blockquote><h2 id="状态栏常用宏定义"><a href="#状态栏常用宏定义" class="headerlink" title="状态栏常用宏定义"></a>状态栏常用宏定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> mark - 设备参数</span></span><br><span class="line"><span class="comment">//屏幕宽</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_ScreenWidth   [[UIScreen mainScreen] bounds].size.width</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕高</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_ScreenHeight  [[UIScreen mainScreen] bounds].size.height</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断设备类型是否iPhoneX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_ISIphoneX    (([UIScreen mainScreen].bounds.size.height/[UIScreen mainScreen].bounds.size.width) &gt;= 2.16)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//导航栏高度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_NavBarHeight (ZS_ISIphoneX ? 88.f : 64.f)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//状态栏高度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_StatusBarHeight (ZS_ISIphoneX ? 44.f : 20.f)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//导航栏内容高度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_NavBarContentHeight 44.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//标签栏高度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ZS_TabBarHeight (ZS_ISIphoneX ? 49.f + 34.f : 49.f)</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：自iOS11之后，Apple引入Safe Area(安全区)的概念，这将是比宏定义更加有效的适配方法。</p></blockquote><h1 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h1><h2 id="导航栏样式"><a href="#导航栏样式" class="headerlink" title="导航栏样式"></a>导航栏样式</h2><p>设置导航栏样式可分为全局设置或分页设置</p><h3 id="全局设置-1"><a href="#全局设置-1" class="headerlink" title="全局设置"></a>全局设置</h3><p>全局设置在<code>AppDelegate</code>中设置，在整个app都会生效</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置导航栏背景颜色</span></span><br><span class="line">[[<span class="built_in">UINavigationBar</span> appearance] setBarTintColor:[<span class="built_in">UIColor</span> redColor]];</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置导航栏背景图片</span></span><br><span class="line">[[<span class="built_in">UINavigationBar</span> appearance] setBackgroundImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"bg"</span>] forBarMetrics:<span class="built_in">UIBarMetricsDefault</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置导航栏标题样式</span></span><br><span class="line">[[<span class="built_in">UINavigationBar</span> appearance] setTitleTextAttributes:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                                                          [<span class="built_in">UIColor</span> redColor], <span class="built_in">NSForegroundColorAttributeName</span>,</span><br><span class="line">                                                          [<span class="built_in">UIFont</span> boldSystemFontOfSize:<span class="number">25</span>], <span class="built_in">NSFontAttributeName</span>,</span><br><span class="line">                                                          <span class="literal">nil</span>]];</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置导航栏返回按钮的颜色</span></span><br><span class="line">[[<span class="built_in">UINavigationBar</span> appearance] setTintColor:[<span class="built_in">UIColor</span> redColor]];</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置导航栏隐藏</span></span><br><span class="line">[[<span class="built_in">UINavigationBar</span> appearance] setHidden:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure><h3 id="分页设置-1"><a href="#分页设置-1" class="headerlink" title="分页设置"></a>分页设置</h3><p>全局设置后，但是有几个页面需求不同，则也可以进行单独的分页设置。</p><p>分页设置的调用方法变为<code>self.navigationController.navigationBar</code>。<br>并且分页设置需要遵循： <strong>进入页面时修改，离开页面时还原</strong>的原则。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入页面时设置颜色：灰色</span></span><br><span class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillAppear:animated];</span><br><span class="line">    [<span class="keyword">self</span>.navigationController.navigationBar setBarTintColor:[<span class="built_in">UIColor</span> grayColor]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//离开页面时还原为全局设置：橙色</span></span><br><span class="line">- (<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillDisappear:animated];</span><br><span class="line">    [<span class="keyword">self</span>.navigationController.navigationBar setBarTintColor:[<span class="built_in">UIColor</span> orangeColor]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导航栏引起的布局问题"><a href="#导航栏引起的布局问题" class="headerlink" title="导航栏引起的布局问题"></a>导航栏引起的布局问题</h2><p>当导航栏透明时会出现以下情况：</p><h3 id="内容偏移属性：automaticallyAdjustsScrollViewInsets"><a href="#内容偏移属性：automaticallyAdjustsScrollViewInsets" class="headerlink" title="内容偏移属性：automaticallyAdjustsScrollViewInsets"></a>内容偏移属性：automaticallyAdjustsScrollViewInsets</h3><p>automaticallyAdjustsScrollViewInsets是视图控制器的一个属性，默认为YES，用于优化滑动类视图(继承于UIScrollView的视图)在视图控制里的显示：</p><p>iOS系统的导航栏UINavigationBar与标签栏UITabBar默认都是半透明模糊效果，在这种情况下系统会对视图控制器的UI布局进行优化： <strong>视图控制器里面第一个被添加进去的视图是滑动类视图，并且其Frame是整个屏幕大小时，系统会自动调整其contenInset，以保证滑动视图里的内容不被UINavigationBar与UITabBar遮挡。</strong></p><p>但是对于普通的视图，此时我们仍然需要注意：非滑动视图的布局仍然要考虑导航栏和标签栏高度，注意不被遮挡，比如布局的时候加上导航栏高度，以免内容被导航栏遮挡。</p><p>我们可以通过一段代码来测试一下效果，在默认导航栏(半透明)的视图控制器里添加如下代码：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UITextView是滑动视图，内容自动向下偏移，不会被导航栏覆盖</span></span><br><span class="line">    <span class="built_in">UITextView</span> *leftTextView = [[<span class="built_in">UITextView</span> alloc] init];</span><br><span class="line">    leftTextView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>,<span class="number">100</span>, <span class="number">675</span>);</span><br><span class="line">    leftTextView.backgroundColor = [<span class="built_in">UIColor</span> lightGrayColor];</span><br><span class="line">    leftTextView.text = <span class="string">@"君不见，黄河之水天上来，奔流到海不复回。君不见，高堂明镜悲白发，朝如青丝暮成雪。人生得意须尽欢，莫使金樽空对月。天生我材必有用，千金散尽还复来。"</span>;</span><br><span class="line">    leftTextView.font = [<span class="built_in">UIFont</span> systemFontOfSize:<span class="number">18</span>];</span><br><span class="line">    leftTextView.editable = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:leftTextView];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//UIView是非滑动视图，内容被导航栏部分覆盖</span></span><br><span class="line">    <span class="built_in">UIView</span> *rightView= [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">150</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>)];</span><br><span class="line">    rightView.backgroundColor = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:rightView];</span><br></pre></td></tr></table></figure><p><img src="auto.png" alt="导航栏透明情况下，滑动视图自动偏移，普通视图被遮挡"></p><p>这里会发现非滑动视图会被导航栏遮挡，但是滑动视图即使延伸到了导航栏下，但是其内容部分却自动向下偏移了，没有被导航栏遮挡住，这是因为系统自动优化了其内边距。</p><p>其实，这种系统的优化也是可以控制关闭的，关闭优化之后，滑动视图就会和普通视图一样，如果还设置其布局的原点是(0,0),其内容就会被导航栏所覆盖，关键代码如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//automaticallyAdjustsScrollViewInsets在11.0后失效，所以需要判断</span></span><br><span class="line"><span class="keyword">if</span> (@available(iOS <span class="number">11.0</span>,*)) &#123;</span><br><span class="line">       scrollView.contentInsetAdjustmentBehavior = <span class="built_in">UIScrollViewContentInsetAdjustmentNever</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="comment">//automaticallyAdjustsScrollViewIn，关闭自动偏移的系统优化</span></span><br><span class="line">       <span class="keyword">self</span>.automaticallyAdjustsScrollViewInsets = <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="边缘延伸属性：edgesForExtendedLayout"><a href="#边缘延伸属性：edgesForExtendedLayout" class="headerlink" title="边缘延伸属性：edgesForExtendedLayout"></a>边缘延伸属性：edgesForExtendedLayout</h3><p>edgesForExtendedLayout也是视图控制器的布局属性，默认值是UIRectEdgeAll，即：当前视图控制器里各种UI控件会忽略导航栏和标签的存在，布局时若设置其原点设置为(0,0)，视图会延伸显示到导航栏的下面被覆盖。</p><p>所以我们可以设置<code>self.edgesForExtendedLayout=UIRectEdgeNone</code>，此时视图控制器里内容就会避开导航栏和标签栏了.</p><h2 id="导航栏透明"><a href="#导航栏透明" class="headerlink" title="导航栏透明"></a>导航栏透明</h2><p>导航栏布局问题都是因为导航栏透明度影响，但是需求没有必要透明，那么视图控制器里的控件就会默认从(0,64)开始布局了，设置导航栏不透明的方法如下:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.translucent= <span class="literal">NO</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;状态栏与导航栏的位置如下图&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Ios" scheme="http://hackycy.github.io/categories/Ios/"/>
    
    
      <category term="Ios" scheme="http://hackycy.github.io/tags/Ios/"/>
    
  </entry>
  
  <entry>
    <title>Android中MVC、MVP、MVVM介绍</title>
    <link href="http://hackycy.github.io/2019/04/01/Android%E4%B8%ADMVC%E3%80%81MVP%E3%80%81MVVM%E4%BB%8B%E7%BB%8D/"/>
    <id>http://hackycy.github.io/2019/04/01/Android中MVC、MVP、MVVM介绍/</id>
    <published>2019-04-01T14:19:32.000Z</published>
    <updated>2019-04-01T15:37:50.270Z</updated>
    
    <content type="html"><![CDATA[<p><strong>MVC,MVP,MVVM简单介绍</strong></p><a id="more"></a><h1 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h1><p><code>MVC</code>全名是<code>Model-View-Controller</code>，是模型(model)-视图(view)-控制器(controller)的缩写，一种软件设计的典范，用一种业务逻辑、数据、界面显示分离的方式来组织代码，在改进和个性化定制洁面以及用户交互的同时，不需要重新编写业务逻辑。其中<code>Model</code>层处理数据，业务逻辑等。<code>View</code>层处理界面的显示结果。<code>Controller</code>层起到桥梁的作用，来控制<code>View</code>层和<code>Model</code>层通信以此来达到分离视图显示和业务逻辑层。</p><p><img src="mvc.png" alt=""></p><p>我们往往把Android中界面部分的实现也理解为采用了MVC框架，常常把Activity理解为MVC模式中的Controller。</p><p><strong>看似没有什么特别的地方，但是由几个需要特别关注的关键点：</strong></p><ul><li>View是把控制权交给Controller，自己不执行业务逻辑。</li><li>Controller执行业务逻辑并且操作Model，但不会直接操作View，可以说它是对View无知的。</li><li>View和Model的同步消息是通过观察着模式进行，而同步操作是由View自己请求Model的数据然后对视图进行更新。</li></ul><h2 id="MVC的优缺点"><a href="#MVC的优缺点" class="headerlink" title="MVC的优缺点"></a>MVC的优缺点</h2><p><strong>优点</strong></p><ul><li>把业务逻辑全部分离到controller中，模块化程度高。当业务逻辑变更的时候，不需要更改view和model，只需要更改controller即可（swappable controller）。</li><li>观察者模式可以做到多视图同时更新</li></ul><p><strong>缺点</strong></p><ul><li>controller测试困难，因为视图同步操作是由view自己执行，而view只能在有UI的环境下运行。在没有UI的环境下对controller进行单元测试的时候，controller业务逻辑的正确性是无法验证的。controller更新model的时候，无法对view的更新操作进行断言。</li><li>view无法组件化。view是强依赖特定的model的，如果需要把这个view抽出来作为另外一个应用程序可服用的组件就困难了，因为不同的程序model是不一样的。</li></ul><h1 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a>MVP</h1><p><code>MVP</code>其实是<code>MVC</code>的一种演进版本，它更简单，将<code>MVC</code>中的<code>Controller</code>改为了<code>Presenter</code>，<code>View</code>通过接口与<code>Presenter</code>进行交互，降低耦合，方便进行单元测试。</p><ul><li><strong>View:</strong>负责绘制UI元素，与用户进行交互（Activity、View、Fragment都可以作为View层）</li><li><strong>Model:</strong>对数据的操作、对网络等的操作，和业务相关的逻辑处理</li><li><strong>Presenter:</strong>作为View与Model交互的中间纽带，处理与用户交互的逻辑。可以把Presenter理解为一个中间层的角色，它接受Model层的数据，并且处理之后传递给View层，还需要处理View层的用户<br>交互等操作。</li></ul><p><img src="mvp.png" alt=""></p><p><strong>关键点</strong></p><ul><li>View不再负责同步的逻辑，而是由Presenter负责。Presenter中既有业务逻辑也有同步逻辑。</li><li>View需要提供操作界面的接口给Presenter进行调用。（关键）</li></ul><p>对比在MVC中，Controller是不能操作View的，View也没有提供相应的接口。而在MVP当中，Presenter可以操作View，View需要提供一组对界面操作的接口给Presenter进行调用。Model仍然通过事件广播自己的变更，但由于Presenter监听而不是View。</p><h2 id="MVP（Passive-View）优缺点"><a href="#MVP（Passive-View）优缺点" class="headerlink" title="MVP（Passive View）优缺点"></a>MVP（Passive View）优缺点</h2><p><strong>优点</strong></p><ul><li>便于测试，Presenter对View是通过接口进行，在对Presenter进行不依赖UI环境的单元测试的时候，可以通过Mock一个View对象，这个对象只需要实现了View的接口即可。然后依赖注入到Presenter中，单元测试的时候就可以完整的测试Presenter业务逻辑的正确性。</li><li>View可以进行组件化。在MVP当中，View不依赖Model。这样就可以让View从特定的业务场景中脱离出来，可以说View可以做到对业务逻辑完全无知。它只需要提供一系列接口提供给上层接操作。这样就可以做到高度可复用的View组件。</li></ul><p><strong>缺点</strong></p><ul><li>Presenter中除了业务逻辑意外，还有大量的View-&gt;Model，Model-&gt;View的手动同步逻辑，造成Presenter比较笨重，维护起来会比较困难。</li></ul><h1 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h1><p><code>MVVM</code>模式（Mode-View-ViewModel），和<code>MVP</code>模式相比，<code>MVVM</code>模式用ViewModel替换了Presenter，其他层基本上与<code>MVP</code>模式一直，<code>ViewModel</code>可以理解成是<code>View</code>的数据模型和<code>Presenter</code>的合体。</p><p><code>MVVM</code>采用双向绑定（data-binding）。View的变动，自动反应在ViewModel，反之亦然。这种模式实际上是框架替应用开发者做了一些工作（相当于ViewModel类是由库帮我们生成的），开发者只需要较少代码就能实现比较复杂的交互。</p><p><img src="mvvm.png" alt=""></p><p><strong>MVVM调用关系</strong></p><p>MVVM的调用关系和MVP一样。但是，在ViewModel当中会有一个叫Binder，或者是Data-binding engine的东西。以前全部由Presenter负责的View和Model之间数据同步操作交由给Binder处理。你只需要在View的模版语法当中，指令式地声明View上的显示的内容是和Model的哪一块数据绑定的。当ViewModel对进行Model更新的时候，Binder会自动把数据更新到View上去，当用户对View进行操作（例如表单输入），Binder也会自动把数据更新到Model上去。这种方式称为：Two-way data-binding，双向数据绑定。可以简单而不恰当地理解为一个模版引擎，但是会根据数据变更实时渲染。</p><p><strong>关键点</strong></p><ul><li>MVVM把View和Model的同步逻辑自动化了。以前Presenter负责的View和Model同步不再手动地进行操作，而是交由框架所提供的Binder进行负责。</li><li>只需要告诉Binder，View显示的数据对应的是Model哪一部分即可。</li></ul><h2 id="MVVM优缺点"><a href="#MVVM优缺点" class="headerlink" title="MVVM优缺点"></a>MVVM优缺点</h2><p><strong>优点</strong></p><ul><li>提高可维护性。解决了MVP大量的手动View和Model同步的问题，提供双向绑定机制。提高了代码的可维护性。</li><li>简化测试。因为同步逻辑是交由Binder做的，View跟着Model同时变更，所以只需要保证Model的正确性，View就正确。大大减少了对View同步更新的测试。</li></ul><p><strong>缺点</strong></p><ul><li>过于简单的图形界面不适用，或说牛刀杀鸡。</li><li>对于大型的图形应用程序，视图状态较多，ViewModel的构建和维护的成本都会比较高。</li><li>数据绑定的声明是指令式地写在View的模版当中的，这些内容是没办法去打断点debug的。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>三者，都是后者解决前者遗留的问题，但每个存在必有其的理由。每种模式并不能因为用而用，而是根据业务的需求来定制。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;MVC,MVP,MVVM简单介绍&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>CSS经典面试案例详解</title>
    <link href="http://hackycy.github.io/2019/03/28/CSS%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E6%A1%88%E4%BE%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/03/28/CSS经典面试案例详解/</id>
    <published>2019-03-28T15:29:03.000Z</published>
    <updated>2019-04-09T02:34:52.464Z</updated>
    
    <content type="html"><![CDATA[<h1 id="包含块"><a href="#包含块" class="headerlink" title="包含块"></a>包含块</h1><p>一个元素的尺寸和位置经常受其包含块的影响，大多数情况下，包含块就是这个元素最近的祖先元素的内容去，但是也不是总是这样的。<br><a id="more"></a></p><p>当一个客户端代理（比如说浏览器）展示一个文档时，对每一个元素，它都产生了一个盒子。每一个盒子都被划分为四个区域。</p><ul><li>内容区</li><li>内边距区</li><li>边框区</li><li>外边距区<br><img src="boxdim.png" alt=""></li></ul><p>很多被误导的观念：一个元素的包含块就是他的父元素的内容区，但并非是这样的。</p><h2 id="包含块有什么影响？"><a href="#包含块有什么影响？" class="headerlink" title="包含块有什么影响？"></a>包含块有什么影响？</h2><p>元素的尺寸及位置，常常会受它的包含块所影响。对于一些属性，例如 width, height, padding, margin，绝对定位元素的偏移值 （比如 position 被设置为 absolute 或 fixed），当我们对其赋予百分比值时，这些值的计算值，就是通过元素的包含块计算得来。</p><h2 id="什么是包含块"><a href="#什么是包含块" class="headerlink" title="什么是包含块"></a>什么是包含块</h2><p>有这么大的影响，那么包含块到底是什么？<br>如果对于浮动元素，其包含块定义为最近的块级祖先元素。但是对于定位的元素则行为相对复杂了。</p><ul><li><p>“根元素”的包含块（也被称为初始包含块）由用户代理建立。在HTML中，根元素就是html元素。不过有些浏览器会使用body作为根元素。在大多数浏览器中，初始包含块是一个视窗大小的矩形。<del>但不代表就是视口。</del></p><blockquote><p>在电脑图形学里面，视口代表了一个可看见的多边形区域（通常来说是矩形）。在浏览器范畴里，它代表的是浏览器中网站可见内容的部分。</p></blockquote></li><li><p>对于一个非根元素，如果其<code>position</code>值是<code>relative</code>或<code>static</code>，包含块则由最近的块级框、表单元格或行内块祖先框的内容边界构成。</p><blockquote><p>当时网页中基本不会使用表单元格、行内块来作为页面的基本布局。</p></blockquote></li><li><p>对于一个非根元素，如果其<code>position</code>值是<code>absolute</code>，包含块设置为最近的<code>position</code>值不是<code>static</code>的祖先元素（可以是任何类型）。</p><ul><li>如果这个祖先元素是块级元素，包含块则设置为该元素的内边距边界，换句话说就是由边框界定的区域。</li><li>如果这个祖先元素是行内元素，包含块则设置为该祖先元素的内容边界。在从左向右的语言中，包含块的上边界和左边界是该祖先元素中第一个框内容区的上边界和左边界，包含块的下边界和右边界是最后一个框内容区的下边界和右边界。而从右向左读的语言中，包含块的右边界对应于第一个框的右内容边界，包含块的左边界则取自最后一个框的做内容边界，上下边界也是一样。</li><li>如果没有祖先，元素的包含块定义为初始包含块。</li></ul></li></ul><p><strong>看一下案例，对于包含块的影响</strong></p><h3 id="初始包含块"><a href="#初始包含块" class="headerlink" title="初始包含块"></a>初始包含块</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        html &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="css">            <span class="comment">/*margin: 30px;*/</span></span></span><br><span class="line"><span class="undefined">            border: 1px red solid;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*margin: 30px;*/</span></span></span><br><span class="line"><span class="undefined">            border: 1px pink solid;</span></span><br><span class="line"><span class="undefined">            height: 90%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: beige;</span></span><br><span class="line"><span class="undefined">            width: 400px;</span></span><br><span class="line"><span class="undefined">            height: 800px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 200px */</span></span></span><br><span class="line"><span class="undefined">            width: 50%;  </span></span><br><span class="line"><span class="css">            <span class="comment">/* 200px */</span></span></span><br><span class="line"><span class="undefined">            height: 50%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 40px */</span></span></span><br><span class="line"><span class="undefined">            margin: 10%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 40px */</span></span></span><br><span class="line"><span class="undefined">            padding: 10%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>content标签为静态定位，则wrap标签为他的包含块，所以content标签的高和宽的百分比值有wrap包含块的高和宽来决定，margin和padding的百分比值则由wrap包含块的宽来决定。</p><h3 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            display: inline;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 200px */</span></span></span><br><span class="line"><span class="undefined">            width: 50%;  </span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 40px */</span></span></span><br><span class="line"><span class="undefined">            margin: 10%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 40px */</span></span></span><br><span class="line"><span class="undefined">            padding: 10%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>与案例1相似的结构，但是wrap元素变成了内联元素，则wrap不是content的包含块，没有祖先元素能够成为content的包含块，则content的包含块为初始包含块。所以content的宽和高的百分比值将不再由wrap元素决定。</p><h3 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 0px;</span></span><br><span class="line"><span class="undefined">            top: 0px;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            width: 500px;</span></span><br><span class="line"><span class="undefined">            height: 500px;</span></span><br><span class="line"><span class="undefined">            padding: 50px 50px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 300px */</span></span></span><br><span class="line"><span class="undefined">            width: 50%; </span></span><br><span class="line"><span class="css">            <span class="comment">/* 150px */</span></span></span><br><span class="line"><span class="undefined">            height: 25%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 60px */</span></span></span><br><span class="line"><span class="undefined">            padding: 10%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 60px */</span></span></span><br><span class="line"><span class="undefined">            margin: 10%;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>与案例1相似的结构，wrap和content元素都开启了绝对定位，那么wrap元素则为content元素的包含块，所以content的百分比值有wrap元素来决定，但是注意wrap的盒模型有padding值，计算时需要加上。</p><blockquote><p>如果包含块的 box-sizing 值设置为 border-box ，就没有这个问题。</p></blockquote><h3 id="案例四"><a href="#案例四" class="headerlink" title="案例四"></a>案例四</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 400px;</span></span><br><span class="line"><span class="undefined">            height: 300px;</span></span><br><span class="line"><span class="undefined">            margin: 50px;</span></span><br><span class="line"><span class="undefined">            padding: 30px;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: fixed;</span></span><br><span class="line"><span class="undefined">            left: 0;</span></span><br><span class="line"><span class="undefined">            top: 0;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 50% vw */</span></span></span><br><span class="line"><span class="undefined">            width: 50%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 50% scroll h  */</span></span></span><br><span class="line"><span class="undefined">            height: 50%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 10% vw */</span></span></span><br><span class="line"><span class="undefined">            margin: 10%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 10% vw */</span></span></span><br><span class="line"><span class="undefined">            padding: 10%;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>content元素的包含块的定位为<code>fixed</code>，所以他的包含块即为初始包含块（屏幕上，也即是viewport）,content元素则会随着浏览器窗口的大小的变化而变化。</p><h3 id="案例五"><a href="#案例五" class="headerlink" title="案例五"></a>案例五</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            background: beige;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        section &#123;</span></span><br><span class="line"><span class="undefined">            transform: rotate(0deg);</span></span><br><span class="line"><span class="undefined">            width: 400px;</span></span><br><span class="line"><span class="undefined">            height: 160px;</span></span><br><span class="line"><span class="undefined">            background: lightgray;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 80px;</span></span><br><span class="line"><span class="undefined">            top: 30px;</span></span><br><span class="line"><span class="undefined">            width: 50%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* == 200px */</span></span></span><br><span class="line"><span class="undefined">            height: 25%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* == 40px */</span></span></span><br><span class="line"><span class="undefined">            margin: 5%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* == 20px */</span></span></span><br><span class="line"><span class="undefined">            padding: 5%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* == 20px */</span></span></span><br><span class="line"><span class="undefined">            background: cyan;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个示例中，P 元素的 position 为 absolute，所以它的包含块是 <section>，也就是距离它最近的一个 transform 值不为 none 的父元素。</section></p><h1 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h1><p>left、top、right、bottom、width、height默认值为auto。<br>margin、padding默认值为0。</p><h1 id="浮动元素层级"><a href="#浮动元素层级" class="headerlink" title="浮动元素层级"></a>浮动元素层级</h1><p>看一个案例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#up</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#down</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"up"</span>&gt;</span>upupup<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"down"</span>&gt;</span>downdowndown<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>原来<code>up</code>id的元素不开启浮动的情况下，两个块级元素上下排列，但是开启了<code>up</code>id的元素的浮动后，<br><code>down</code>id的元素由于收到了<code>up</code>元素的影响顶了上去，但是发现文字并没有跟着上去。<br>解释：<br><strong>在浮动的情况下，元素层级只提升半层，元素分两层，一层与盒模型相关，一层与文字相关。</strong></p><h1 id="负margin详解"><a href="#负margin详解" class="headerlink" title="负margin详解"></a>负margin详解</h1><p><a href="https://www.w3cplus.com/css/the-definitive-guide-to-using-negative-margins.html" target="_blank" rel="noopener">负margin用法权威指南</a></p><p>何为负margin</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#content &#123;margin-left:-100px;&#125;</span><br></pre></td></tr></table></figure><ul><li>负margin是标准的CSS，在w3c中，margin属性值是允许出现负值的</li><li>负margin不是一种hack方法</li><li>不脱离文档流（在不使用浮动的情况下）</li><li>完全兼容</li><li>浮动会影响负margin的使用</li><li><del>dreamveaver不解析负margin（前端工程师不推荐使用，也不应该在设计视图中检查网站）</del></li></ul><p>**作用在static元素上的负margin属性值<br><img src="negative-margin-1.jpg" alt=""><br>当static元素没有设定成浮动的元素，上图中说明了负margin对static元素的作用。</p><p>当static元素的<code>margin-left/margin-right</code>被赋予负值时，元素将被拉进指定方向。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box1</span> &#123;<span class="attribute">margin-top </span>: -<span class="number">10px</span>;&#125;</span><br><span class="line"><span class="comment">/*元素向上移动10px*/</span></span><br></pre></td></tr></table></figure><p>当static元素的<code>margin-bottom/margin-right</code>被赋予负值时，会将后续的元素拖拉进来，覆盖原来的元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box1</span> &#123;<span class="attribute">margin-bottom </span>: -<span class="number">10px</span>;&#125;</span><br><span class="line"><span class="comment">/*box1后续的元素将向上移动10px，box1本身不会移动*/</span></span><br></pre></td></tr></table></figure><p><strong>作用在浮动元素上的负margin属性值</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mydiv1"</span>&gt;</span>First<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mydiv2"</span>&gt;</span>Second<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 应用在与浮动相反方向的负margin */</span></span><br><span class="line"><span class="selector-id">#mydiv1</span> &#123;<span class="attribute">float</span>:left; <span class="attribute">margin-right</span>:-<span class="number">100px</span>;&#125;</span><br></pre></td></tr></table></figure><p>如果给一个浮动元素加上相反方向的负margin，则会使行间距为0且内容重叠。这对于创建1列是100%宽度而其他列是固定宽度（比如100px）的自适应布局来说是非常有用的方法。</p><p>若两个元素都为浮动，且#mydiv1的元素设定margin-right为20px。这样#mydiv2会认为#mydiv1的宽度比原来宽度缩短了20px（因此会导致重叠）。但有意思的是，#mydiv1的内容不受影响，保持原有的宽度。</p><p>如果负margin等于实际宽度，则元素会被完全覆盖。这是因为元素的完全宽度等于margin，padding，border，width相加而成，所以如果负margin等于余下三者的和，那元素的实际宽度也就变成了0px。</p><h1 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h1><p>看圣杯布局前，先看看如何实现三列布局</p><p><strong>三列布局需求：</strong></p><ul><li>两边固定，中间自适应</li><li>当中列要完整显示</li><li>当中列优先加载</li></ul><h2 id="定位实现"><a href="#定位实现" class="headerlink" title="定位实现"></a>定位实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 两倍的left+right */</span></span></span><br><span class="line"><span class="undefined">            min-width: 600px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 400px;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#left</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 0;</span></span><br><span class="line"><span class="undefined">            top: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            right: 0;</span></span><br><span class="line"><span class="undefined">            top: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#middle</span> &#123;</span></span><br><span class="line"><span class="undefined">            height: 400px;</span></span><br><span class="line"><span class="undefined">            padding: 0 200px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"middle"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是页面的整体布局很少会使用定位来实现，而且定位需要一个容器，容器的定位必须是相对定位，定位会提升元素层级，这样布局会相对复杂。</p><h2 id="浮动实现"><a href="#浮动实现" class="headerlink" title="浮动实现"></a>浮动实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 两倍的left+right */</span></span></span><br><span class="line"><span class="undefined">            min-width: 600px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 400px;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#left</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: right;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#middle</span> &#123;</span></span><br><span class="line"><span class="undefined">            height: 400px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"middle"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，浮动来实现三列布局比使用定位来实现三列布局更加方便。但是也造成一个问题，中间列按照文档的加载顺序，无法做到中间列优先加载，所以圣杯布局就出现了。</p><h2 id="实现圣杯布局"><a href="#实现圣杯布局" class="headerlink" title="实现圣杯布局"></a>实现圣杯布局</h2><p>完整实现代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#header</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#footer</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: gray;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            line-height: 50px;</span></span><br><span class="line"><span class="undefined">            height: 50px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#middle</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 1、中间自适应，给予宽度100%，middle的包含块为container */</span></span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#middle</span>, <span class="selector-id">#left</span>, <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 2、三个块设置浮动，且middle宽度为100%，则left，和right换行显示 */</span></span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#left</span> &#123;</span></span><br><span class="line"><span class="undefined">            /* 3、解决left，设置margin-left为-100%，因为left的包含块和middle的包含块是同一个，</span></span><br><span class="line"><span class="undefined">            则-100%的值等于middle的宽度，则left被拉成与middle同行显示且靠middle左边对齐 */</span></span><br><span class="line"><span class="undefined">            margin-left: -100%;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 6、将自己往外拉自身的宽度值 */</span></span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            left: -200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 4、同理，只需要设置负值为与自身宽度相同，则被拉上与middle同行显示，且右边与middle右边对其 */</span></span></span><br><span class="line"><span class="undefined">            margin-left: -200px;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 7、将自己往外拉自身的宽度值 */</span></span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            right: -200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#middle</span> &#123;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span> &#123;</span></span><br><span class="line"><span class="undefined">            /* 5、完成后，但是middle宽度还是整个的100%，left与right其实只是盖着它们，并没有把内容设置到中间，但是这里不能简单的设置padding值，</span></span><br><span class="line"><span class="undefined">            因为中间的宽度是100&amp;设定死的，而且left的margin也会随之变化，</span></span><br><span class="line"><span class="undefined">            所以要给它们三个的父元素container设置padding值，然后再将left和right往外拉 */</span></span><br><span class="line"><span class="undefined">            padding: 0 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 0、解决高度塌陷 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="undefined">            *zoom: 1;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: "";</span></span><br><span class="line"><span class="undefined">            display: block;</span></span><br><span class="line"><span class="undefined">            clear: both;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"middle"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>圣杯布局结合了浮动、定位等技术，但最重要一点是使用了<code>负margin</code>的用法。</p><h1 id="伪等高布局"><a href="#伪等高布局" class="headerlink" title="伪等高布局"></a>伪等高布局</h1><p>通常我们会遇到一些需求，要求两列高度相同，但是两列内容所撑开的高度不一定相同，伪等高布局就出现了。</p><p>实现代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0 400px;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 父容器设置内容溢出显示 */</span></span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 400px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 400px;</span></span><br><span class="line"><span class="undefined">            background-color: gray;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 设置padding，让内容撑开一定高度 */</span></span></span><br><span class="line"><span class="undefined">            padding-bottom: 10000px;</span></span><br><span class="line"><span class="css">            <span class="comment">/*内容边界在收缩回来。*/</span></span></span><br><span class="line"><span class="undefined">            margin-bottom: -10000px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 解决高度塌陷 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="undefined">            *zoom: 1;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: "";</span></span><br><span class="line"><span class="undefined">            display: block;</span></span><br><span class="line"><span class="undefined">            clear: both;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>left<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>right<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同样多列也是如此运用，但是原理还是利用了<code>负margin</code>的特性来实现。</p><h1 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h1><p>因为圣杯布局外部整体布局还是会使用到定位，这样还是会对页面布局产生比较大的影响，那么双飞翼布局就出现了，对比圣杯，仅仅只是加了一个标签来搭建整体结构，不会使用到定位这些元素来影响到整体的布局。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#header</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#footer</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            line-height: 50px;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span> <span class="selector-class">.left</span>, <span class="selector-id">#container</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            margin-left: -100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            margin-left: -200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span> <span class="selector-class">.middle</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span> <span class="selector-class">.middle</span> <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 解决高度塌陷 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="undefined">            *zoom: 1;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: "";</span></span><br><span class="line"><span class="undefined">            display: block;</span></span><br><span class="line"><span class="undefined">            clear: both;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"middle"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 对比圣杯布局，就是在middle里再加一个元素用来做内容的容器，那么这个容器再设置padding就不会影响到两侧元素了 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                middle content</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h1><p>先看一段代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html &#123;</span></span><br><span class="line"><span class="undefined">            margin: 30px;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            margin: 30px;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">            height: 5000px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看看这时候的滚动条作用与谁身上，不是body，也不是html，而是作用与<code>文档</code>上。</p><p>再看一个案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">            margin: 30px;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">            overflow: scroll;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">            margin: 30px;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">            overflow: scroll;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">            height: 5000px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>body和html都添加了高度为100%的属性值，而它俩的包含块为初始包含块，所以它们两个高度为视口的高度。而两个都添加了overflow为scroll时，不仅文档出现了滚动条，而且body身上也出现了滚动条。</p><h1 id="静止系统默认滚动条"><a href="#静止系统默认滚动条" class="headerlink" title="静止系统默认滚动条"></a>静止系统默认滚动条</h1><p>看到上面的例子后，如何静止掉系统的默认滚动条。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            overflow: auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 5000px;"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="解决IE6下fixed固定定位失效问题"><a href="#解决IE6下fixed固定定位失效问题" class="headerlink" title="解决IE6下fixed固定定位失效问题"></a>解决IE6下fixed固定定位失效问题</h1><p>实现代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 隐藏系统滚动条 */</span></span></span><br><span class="line"><span class="undefined">        html,</span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            overflow: scroll;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.test</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 50px;</span></span><br><span class="line"><span class="undefined">            top: 50px;</span></span><br><span class="line"><span class="undefined">            width: 100px;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 5000px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到test元素仅仅只是设置了绝对定位，但是作用基本等同于固定定位。<br><strong>解释：</strong>因为这里隐藏了系统的默认滚动条，body显示的滚动条并不会移动视口，只有系统的滚动条才会移动视口。body的滚动条仅仅只是移动的body内的元素。而test元素的包含块是视口，所以就算滚动条怎么移动，test元素也不会移动，这就是另类解决fixed定位失效的问题解决办法。</p><h1 id="粘连布局"><a href="#粘连布局" class="headerlink" title="粘连布局"></a>粘连布局</h1><p>可能会遇到一种需求，我们有一个内容<code>main</code></p><ul><li>当<code>main</code>的高度足够长的时候，<code>footer</code>应该紧跟在<code>main</code>元素后面</li><li>当<code>main</code>元素比较短的时候（比如小于屏幕的高度），我们期望这个<code>footer</code>元素能够粘连在屏幕底部</li></ul><p>实现代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body,</span></span><br><span class="line"><span class="undefined">        html &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: yellow;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            min-height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="undefined">            padding-bottom: 50px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#footer</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">            height: 50px;</span></span><br><span class="line"><span class="undefined">            line-height: 50px;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">            <span class="comment">/* 将自己拉上去一个自己的高度 */</span></span></span><br><span class="line"><span class="undefined">            margin-top: -50px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            main<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt;</span></span><br><span class="line"><span class="comment">            main&lt;br /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 必须要放在wrap外面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>内容少的时候，footer粘在底部，当内容过多时滚动并紧跟内容。也是简单的<code>负margin</code>的运用。</p><h1 id="BFC"><a href="#BFC" class="headerlink" title="BFC"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context" target="_blank" rel="noopener">BFC</a></h1><p>理解BFC是什么前我们先来理解另外两个概念：<code>Box</code>和<code>FC</code>(即formatting context)</p><h2 id="Box"><a href="#Box" class="headerlink" title="Box"></a>Box</h2><p>一个页面是由很多个<code>Box</code>组成的，元素的类型和<code>display</code>属性决定了这个<code>Box</code>的类型。不同类型的<code>Box</code>，会参与不同的Formatting Context。</p><p><code>Block Level</code>的box会参与形成<code>BFC</code>，比如<code>display</code>值为<code>block</code>，<code>list-item</code>，<code>table</code>的元素。</p><p><code>Inline Level</code>的box会参与形成<code>IFC</code>，比如<code>display</code>值为<code>inline</code>，<code>inline-table</code>，<code>inline-block</code>的元素。</p><h2 id="FC-Formatting-Context"><a href="#FC-Formatting-Context" class="headerlink" title="FC(Formatting Context)"></a>FC(Formatting Context)</h2><p>它是W3C CSS2.1规范中的一个概念，定义的是页面中的一块渲染区域，并且有一套渲染规则，它 <strong>决定了其子元素将如何定位</strong>，以及和 <strong>其他元素的关系和相互作用</strong>。</p><p>常见的<code>Formatting Context</code>有：<code>Block Formatting Context</code>(BFC|块级格式化上下文)和<code>Inline Formatting Context</code>(IFC|行内格式化上下文)。</p><h2 id="IFC、BFC布局规则"><a href="#IFC、BFC布局规则" class="headerlink" title="IFC、BFC布局规则"></a>IFC、BFC布局规则</h2><h3 id="IFC布局规则"><a href="#IFC布局规则" class="headerlink" title="IFC布局规则"></a>IFC布局规则</h3><p>在行内格式化上下文中，框（boxes）一个接一个的水平排列，起点是包含块的顶部。水平方向上的<code>margin</code>，<code>border</code>和<code>padding</code>在框之间得到保留。框在垂直方向上可以以不同的方式对齐：它们的顶部或者底部对其，或根据其中文字的基线对其。包含那些框的长方形区域，会形成一行，叫做行框。</p><h3 id="BFC布局规则【重要】"><a href="#BFC布局规则【重要】" class="headerlink" title="BFC布局规则【重要】"></a>BFC布局规则【重要】</h3><ul><li>内部的Box会在垂直方向，一个接一个的放置。</li><li>Box垂直方向的距离由<code>margin</code>决定。属于同一个BFC的两个相邻Box的<code>margin</code>会发生重叠</li><li>每个元素的左外边缘（margin-left），与包含块的左边（<code>contain box left</code>)相接触（对于从左往右的格式化，否则相反）。即使存在浮动也是如此。除非这个元素自己形成了一个新的BFC。</li><li>BFC的区域不会与<code>float box</code>重叠。</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算BFC的高度时，浮动元素也参与计算。</li></ul><h2 id="块格式化上下文（Block-Formatting-Context，BFC）"><a href="#块格式化上下文（Block-Formatting-Context，BFC）" class="headerlink" title="块格式化上下文（Block Formatting Context，BFC）"></a>块格式化上下文（Block Formatting Context，BFC）</h2><p>是Web页面的可视化CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p><p>下列方式会创建 <strong>块格式化上下文：</strong></p><ul><li>根元素或包含根元素的元素</li><li>浮动元素（元素的 <code>float</code> 不是 <code>none</code>）</li><li>绝对定位元素（元素的 <code>position</code> 为 <code>absolute</code> 或 <code>fixed</code>）</li><li>行内块元素（元素的 <code>display</code> 为 <code>inline-block</code>）</li><li>表格单元格（元素的 <code>display</code>为 <code>table-cell</code>，HTML表格单元格默认为该值）</li><li>表格标题（元素的 <code>display</code> 为 <code>table-caption</code>，HTML表格标题默认为该值）</li><li>匿名表格单元格元素（元素的 <code>display</code>为 <code>table</code>、<code>table-row</code>、 <code>table-row-group</code>、<code>table-header-group</code>、<code>table-footer-group</code>（分别是<code>HTML table、row、tbody、thead、tfoot</code>的默认属性）或 <code>inline-table</code>）</li><li><code>overflow</code> 值不为 <code>visible</code> 的块元素</li><li><code>display</code> 值为 <code>flow-root</code> 的元素</li><li><code>contain</code> 值为 <code>layout</code>、<code>content</code>或 <code>strict</code> 的元素</li><li>弹性元素（<code>display</code>为 <code>flex</code> 或 <code>inline-flex</code>元素的直接子元素）</li><li>网格元素（<code>display</code>为 <code>grid</code> 或 <code>inline-grid</code> 元素的直接子元素）</li><li>多列容器（元素的 <code>column-count</code> 或 <code>column-width</code> 不为 <code>auto</code>，包括 <code>column-count</code> 为 1）</li><li><code>column-span</code> 为 <code>all</code> 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。</li></ul><blockquote><p>块格式化上下文包含创建它的元素内部的所有内容.</p></blockquote><p>块格式化上下文对浮动定位（参见 float）与清除浮动（参见 clear）都很重要。浮动定位和清除浮动时只会应用于同一个BFC内的元素。浮动不会影响其它BFC中元素的布局，而清除浮动只能清除同一BFC中在它前面的元素的浮动。外边距折叠（Margin collapsing）也只会发生在属于同一BFC的块级元素之间。</p><p>简单来说：BFC就是一个容器，来管理块级元素。</p><h1 id="IE下的BFC（hasLayout）"><a href="#IE下的BFC（hasLayout）" class="headerlink" title="IE下的BFC（hasLayout）"></a>IE下的BFC（hasLayout）</h1><p>IE5、6、7下没有BFC的概念，但有类似于BFC相同的概念<code>hasLayout</code>。</p><p>hasLayout可以简单看作是IE5.5/6/7中的<code>BFC(Block Formatting Context)</code>。也就是一个元素要么自己对自身内容进行组织和尺寸计算(即可通过width/height来设置自身的宽高)，要么由其containing block来组织和尺寸计算。而IFC（即没有拥有布局）而言，则是元素无法对自身内容进行组织和尺寸计算，而是由自身内容来决定其尺寸（即仅能通过line-height设置内容行距，通过行距来支撑元素的高度；也无法通过width设置元素宽度，仅能由内容来决定而已）。</p><p>当hasLayout为true时(就是所谓的”拥有布局”)，相当于元素产生新BFC，元素自己对自身内容进行组织和尺寸计算;</p><p>当hasLayout为false时(就是所谓的”不拥有布局”)，相当于元素不产生新BFC，元素由其所属的containing block进行组织和尺寸计算。</p><p>和产生新BFC的特性一样，hasLayout无法通过CSS属性直接设置，而是通过某些CSS属性间接开启这一特性。不同的是某些CSS属性是以不可逆方式间接开启hasLayout为true。并且默认产生新BFC的只有html元素，而默认hasLayout为true的元素就不只有html元素了。</p><p>另外我们可以通过object.currentStyle.hasLayout属性来判断元素是否开启了hasLayout特性。</p><p>必须说明： **IE8及以上浏览器使用了全新的显示引擎，已经不再使用hasLayout属性，因为hasLayout属性只针对IE7以下。</p><p><strong>默认拥有布局的元素</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>, <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span>, <span class="tag">&lt;<span class="name">tr</span>&gt;</span>, <span class="tag">&lt;<span class="name">th</span>&gt;</span>, <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span>,<span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span>, <span class="tag">&lt;<span class="name">button</span>&gt;</span>, <span class="tag">&lt;<span class="name">select</span>&gt;</span>, <span class="tag">&lt;<span class="name">textarea</span>&gt;</span>, <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span>, <span class="tag">&lt;<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span>&gt;</span>, <span class="tag">&lt;<span class="name">embed</span>&gt;</span>, <span class="tag">&lt;<span class="name">object</span>&gt;</span>, <span class="tag">&lt;<span class="name">applet</span>&gt;</span>,<span class="tag">&lt;<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>如何触发hasLayout</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span></span><br><span class="line"><span class="selector-tag">height</span>: (除 <span class="selector-tag">auto</span> 外任何值)</span><br><span class="line"><span class="selector-tag">width</span>: (除 <span class="selector-tag">auto</span> 外任何值)</span><br><span class="line"><span class="selector-tag">float</span>: (<span class="selector-tag">left</span> 或 <span class="selector-tag">right</span>)</span><br><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">absolute</span></span><br><span class="line"><span class="selector-tag">writing-mode</span>: <span class="selector-tag">tb-rl</span></span><br><span class="line"><span class="selector-tag">zoom</span>: (除 <span class="selector-tag">normal</span> 外任意值)</span><br></pre></td></tr></table></figure><p>IE7还有一些额外的属性可触发hasLayout</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">min-height</span>: (任意值)</span><br><span class="line"><span class="selector-tag">min-width</span>: (任意值)</span><br><span class="line"><span class="selector-tag">max-height</span>: (除 <span class="selector-tag">none</span> 外任意值)</span><br><span class="line"><span class="selector-tag">max-width</span>: (除 <span class="selector-tag">none</span> 外任意值)</span><br><span class="line"><span class="selector-tag">overflow</span>: (除 <span class="selector-tag">visible</span> 外任意值，仅用于块级元素)</span><br><span class="line"><span class="selector-tag">overflow-x</span>: (除 <span class="selector-tag">visible</span> 外任意值，仅用于块级元素)</span><br><span class="line"><span class="selector-tag">overflow-y</span>: (除 <span class="selector-tag">visible</span> 外任意值，仅用于块级元素)</span><br><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">fixed</span></span><br></pre></td></tr></table></figure><p>使用hasLayout就是为了兼容一些项目需要运行在IE7以下版本。</p><h1 id="BFC实现自适应两栏布局"><a href="#BFC实现自适应两栏布局" class="headerlink" title="BFC实现自适应两栏布局"></a>BFC实现自适应两栏布局</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: aquamarine;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.middle</span> &#123;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: green;</span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: "";</span></span><br><span class="line"><span class="undefined">            display: block;</span></span><br><span class="line"><span class="undefined">            clear: both;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="undefined">            zoom: 1;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"middle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用三列布局的思想来实现两列布局，但是利用BFC的原理可以更简单的实现两列布局。由于left块开启浮动，会使得left显示在middle上层，但是middle还是占满100%，单纯用颜色判断像是两列布局，但是开启left透明度会发现middle占满100%，是浮现在上面，而让middle开启BFC，overflow为hidden即为开启了middle的BFC，BFC的区域并不会和浮动区域重叠，即可实现。</p><h1 id="清除浮动解决高度塌陷的方式"><a href="#清除浮动解决高度塌陷的方式" class="headerlink" title="清除浮动解决高度塌陷的方式"></a>清除浮动解决高度塌陷的方式</h1><h2 id="直接给予高度"><a href="#直接给予高度" class="headerlink" title="直接给予高度"></a>直接给予高度</h2><p>直接计算内容盒子高度，并赋予父容器高度，简单，但是毫无扩展性。</p><h2 id="利用BFC"><a href="#利用BFC" class="headerlink" title="利用BFC"></a>利用BFC</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 利用BFC布局原则，BFC块高度，浮动元素也会参与高度计算，只要满足开启BFC的条件即可 */</span></span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="br标签"><a href="#br标签" class="headerlink" title="br标签"></a>br标签</h2><p><code>&lt;br clear=&quot;all&#39; /&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 利用br标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> <span class="attr">clear</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="空标签清除浮动"><a href="#空标签清除浮动" class="headerlink" title="空标签清除浮动"></a>空标签清除浮动</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="undefined">            clear: both;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 空标签并清除浮动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="伪元素清除浮动"><a href="#伪元素清除浮动" class="headerlink" title="伪元素清除浮动"></a>伪元素清除浮动</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            border: 1px black solid;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="undefined">            *zoom: 1;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: "";</span></span><br><span class="line"><span class="undefined">            display: block;</span></span><br><span class="line"><span class="undefined">            clear: both;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="垂直水平居中"><a href="#垂直水平居中" class="headerlink" title="垂直水平居中"></a>垂直水平居中</h1><h2 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h2><p>需要已知自身元素高宽。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            width: 600px;</span></span><br><span class="line"><span class="undefined">            height: 600px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#inner</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 50%;</span></span><br><span class="line"><span class="undefined">            top: 50%;</span></span><br><span class="line"><span class="undefined">            margin-left: -50px;</span></span><br><span class="line"><span class="undefined">            margin-top: -50px;</span></span><br><span class="line"><span class="undefined">            width: 100px;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h2><p>需要已知自身元素高宽。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            width: 600px;</span></span><br><span class="line"><span class="undefined">            height: 600px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#inner</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 0;</span></span><br><span class="line"><span class="undefined">            top: 0;</span></span><br><span class="line"><span class="undefined">            right: 0;</span></span><br><span class="line"><span class="undefined">            bottom: 0;</span></span><br><span class="line"><span class="undefined">            margin: auto auto;</span></span><br><span class="line"><span class="undefined">            width: 100px;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原理：</p><p>绝对定位盒子特性：高宽有内容撑开下<br>水平方向上：left + right + width + padding + margin = 包含块padding内容区域<br>垂直方向上：top + bottom + width + padding + margin = 包含块padding内容区域</p><p>上述例子中：<br>水平方向上：0 + 0 + 100 + 0 + auto = 600<br>垂直方向上：0 + 0 + 100 + 0 + auto = 600<br>则auto等于250，即可居中。</p><h2 id="方案3"><a href="#方案3" class="headerlink" title="方案3"></a>方案3</h2><p>无需知道元素高度，使用transform</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            width: 600px;</span></span><br><span class="line"><span class="undefined">            height: 600px;</span></span><br><span class="line"><span class="undefined">            background-color: pink;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#inner</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 50%;</span></span><br><span class="line"><span class="undefined">            top: 50%;</span></span><br><span class="line"><span class="undefined">            transform: translate(-50%,-50%);</span></span><br><span class="line"><span class="undefined">            background-color: aqua;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">            testaaaaaaa<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            testaaaaaa<span class="tag">&lt;<span class="name">abr</span> /&gt;</span></span><br><span class="line">            testaaaaaa<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            testaaaaaa<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h1><p><img src="line_height.png" alt="行高"></p><p>从上到下四条线分别是顶线、中线、基线、底线，很像才学英语字母时的四线三格</p><p>1.行高是指上下文本行的基线间的垂直距离，即图中两条红线间垂直距离。<br>2.行距是指一行底线到下一行顶线的垂直距离，即第一行粉线和第二行绿线间的垂直距离。<br>3.半行距是行距的一半，即区域3垂直距离/2，区域1，2，3，4的距离之和为行高，而区域1，2，4距离之和为字体size，所以半行距也可以这么算：（行高-字体size）/2 </p><p><strong>内容区：</strong>底线和顶线包裹的区域，即下图深灰色背景区域。<br>文本行中的每个元素都会生成一个内容区，这个由字体的大小确定。这个内容区则会生成一个行内框，如果不存在其他因素，这个行内框就完全等于该元素的内容区，由line-height产生的行间距就是增加和减少各行内框高度的因素之一。</p><p><strong>行内框 :</strong> 行内框是一个浏览器渲染模型中的一个概念，无法显示出来，行内框默认等于内容区域， 将line-height的计算值减去font-size的计算值，这个值就是总行距，这个值可能是个负值，任何将行间距/2 分别应用到内容区的顶部和底部，其结果就是该元素的行内框。</p><p><strong>行框（line box）</strong>，行框是指本行的一个虚拟的矩形框，是浏览器渲染模式中的一个概念，并没有实际显示。默认情况下行框高度等于本行内所有元素中行内框最大的值（一行上垂直对齐时以行高值最大的行内框为基准，其他行内框采用自己的对齐方式向基准对齐，最终计算行框的高度），当有多行内容时，每行都会有自己的行框。</p><p><img src="line_height2.png" alt=""></p><h1 id="vertical-align"><a href="#vertical-align" class="headerlink" title="vertical-align"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/vertical-align" target="_blank" rel="noopener">vertical-align</a></h1><p>CSS 的属性 <code>vertical-align</code> 用来指定行内元素（inline）或表格单元格（table-cell）元素的垂直对齐方式。</p><blockquote><p>注意 vertical-align 只对行内元素、表格单元格元素生效：不能用它垂直对齐块级元素。</p></blockquote><h2 id="使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本的内的图片-lt-img-gt-："><a href="#使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本的内的图片-lt-img-gt-：" class="headerlink" title="使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本的内的图片&lt;img&gt;："></a>使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本的内的图片<code>&lt;img&gt;</code>：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 600px;</span></span><br><span class="line"><span class="undefined">            height: 600px;</span></span><br><span class="line"><span class="undefined">            border: 1px red solid;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">            content: "";</span></span><br><span class="line"><span class="undefined">            display: inline-block;</span></span><br><span class="line"><span class="undefined">            height: 50%;</span></span><br><span class="line"><span class="undefined">            width: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="undefined">            vertical-align: middle; </span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">src</span>=<span class="string">"img/img.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>已放置于<a href="https://github.com/hackycy/CSS-" target="_blank" rel="noopener">github</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://segmentfault.com/a/1190000009545742" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009545742</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;包含块&quot;&gt;&lt;a href=&quot;#包含块&quot; class=&quot;headerlink&quot; title=&quot;包含块&quot;&gt;&lt;/a&gt;包含块&lt;/h1&gt;&lt;p&gt;一个元素的尺寸和位置经常受其包含块的影响，大多数情况下，包含块就是这个元素最近的祖先元素的内容去，但是也不是总是这样的。&lt;br&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hackycy.github.io/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://hackycy.github.io/tags/CSS/"/>
    
      <category term="面试" scheme="http://hackycy.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>跨域介绍以及跨域的方式</title>
    <link href="http://hackycy.github.io/2019/03/27/%E8%B7%A8%E5%9F%9F%E4%BB%8B%E7%BB%8D%E4%BB%A5%E5%8F%8A%E8%B7%A8%E5%9F%9F%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://hackycy.github.io/2019/03/27/跨域介绍以及跨域的方式/</id>
    <published>2019-03-27T14:40:56.000Z</published>
    <updated>2019-03-27T16:01:11.448Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前端在与后端进行数据交互时经常会碰到跨域请求，这里在此探讨一下。</p><a id="more"></a><h1 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域"></a>什么是跨域</h1><h2 id="什么是同源策略及其限制内容"><a href="#什么是同源策略及其限制内容" class="headerlink" title="什么是同源策略及其限制内容"></a>什么是同源策略及其限制内容</h2><p>同源策略是一种约定，它是浏览器最核心也是最基本的安全功能，如果少了同源策略，浏览器很容易收到XSS，CSFR等攻击。所谓同源指的是<code>协议+域名+端口</code>三者相同，即便两个不同的域名指向同一个ip地址，也非同源。</p><p><img src="protocozc.jpg" alt=""></p><p><strong>同源策略的限制内容有：</strong></p><ul><li>Cookie、LocalStorage、IndexedDB等存储性内容</li><li>DOM节点</li><li>AJAX请求发送后，结果被浏览器拦截了</li></ul><p>但是有三个标签是允许跨域加载资源</p><ul><li><code>&lt;img src=&quot;...&quot;&gt;</code></li><li><code>&lt;link href=&quot;...&quot;&gt;</code></li><li><code>&lt;script src=&quot;...&quot;&gt;</code></li></ul><h2 id="常见跨域场景"><a href="#常见跨域场景" class="headerlink" title="常见跨域场景"></a>常见跨域场景</h2><p>当<code>协议</code>、<code>子域名</code>、<code>主域名</code>、<code>端口号</code>中任意一个不相同时，都算作不同域。不同域之间相互请求资源，就算作<code>跨域</code>，常见的跨域场景如下图所示：</p><table><thead><tr><th>URL</th><th>说明</th><th>是否允许通信</th></tr></thead><tbody><tr><td><a href="http://www.a.com/a.js" target="_blank" rel="noopener">http://www.a.com/a.js</a> <br> <a href="http://www.a.com/b.js" target="_blank" rel="noopener">http://www.a.com/b.js</a></td><td>同一个域名下</td><td>允许</td></tr><tr><td><a href="http://www.a.com/lab/a.js" target="_blank" rel="noopener">http://www.a.com/lab/a.js</a> <br> <a href="http://www.a.com/script/b.js" target="_blank" rel="noopener">http://www.a.com/script/b.js</a></td><td>同一域名下不同文件夹</td><td>允许</td></tr><tr><td><a href="http://www.a.com:8000/a.js" target="_blank" rel="noopener">http://www.a.com:8000/a.js</a> <br> <a href="http://www.a.com/b.js" target="_blank" rel="noopener">http://www.a.com/b.js</a></td><td>同一域名，不同端口</td><td>不允许</td></tr><tr><td><a href="http://www.a.com/a.js" target="_blank" rel="noopener">http://www.a.com/a.js</a> <br> <a href="https://www.a.com/b.js" target="_blank" rel="noopener">https://www.a.com/b.js</a></td><td>同一域名，不同协议</td><td>不允许</td></tr><tr><td><a href="http://www.a.com/a.js" target="_blank" rel="noopener">http://www.a.com/a.js</a> <br> <a href="http://70.32.92.74/b.js" target="_blank" rel="noopener">http://70.32.92.74/b.js</a></td><td>域名和域名对应ip</td><td>不允许</td></tr><tr><td><a href="http://www.a.com/a.js" target="_blank" rel="noopener">http://www.a.com/a.js</a> <br> <a href="http://script.a.com/b.js" target="_blank" rel="noopener">http://script.a.com/b.js</a></td><td>主域相同，子域不同</td><td>不允许</td></tr><tr><td><a href="http://www.a.com/a.js" target="_blank" rel="noopener">http://www.a.com/a.js</a> <br> <a href="http://a.com/b.js" target="_blank" rel="noopener">http://a.com/b.js</a></td><td>同一域名，不同二级域名</td><td>不允许，cookie这种情况下也不允许</td></tr><tr><td><a href="http://www.cnblogs.com/a.js" target="_blank" rel="noopener">http://www.cnblogs.com/a.js</a> <br> <a href="http://www.a.com/b.js" target="_blank" rel="noopener">http://www.a.com/b.js</a></td><td>不同域名</td><td>不允许</td></tr></tbody></table><p><strong>特别说明</strong></p><ul><li>如果时协议和端口造成的跨域问题，前端时无能为力的</li><li>在跨域问题上，仅仅是通过“URL的首部“来识别而不会根据域名对应的IP地址是否相同来判断。“URL的首部”可以理解为“协议、域名和端口必须匹配“。</li></ul><blockquote><p>请求跨域，那么请求有没有发出去？<br><strong>跨域并不是请求发不出去，请求能发出去，服务端能收到请求并正常返回结果，只是结果被浏览器拦截了。</strong>，可是通过表单的方式可以发起跨域请求，为什么<code>AJAX</code>就不可以，归根结底，跨域是为了阻止用户读取到另一个域名下的内容，<code>AJAX</code>可以获取响应，浏览器认为这并不安全，所以拦截了响应。但是表单并不会获取新的内容，所以可以发起跨域请求。这同时也说明了跨域并不能完全阻止<code>CSRF</code>，因为请求毕竟是发出去了。</p></blockquote><h1 id="跨域解决方案"><a href="#跨域解决方案" class="headerlink" title="跨域解决方案"></a>跨域解决方案</h1><h2 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>JSONP原理是利用<code>&lt;script&gt;</code>标签没有跨域限制的漏洞，网页可以得到从其他来源动态产生的JSON数据。JSONP请求一定需要对方的服务器做支持才可以。</p><h3 id="JSONP与AJAX对比"><a href="#JSONP与AJAX对比" class="headerlink" title="JSONP与AJAX对比"></a>JSONP与AJAX对比</h3><p>JSONP与AJAX相同，都是客户端向服务器端发送请求，从服务器端获取数据的方式。但是AJAX属于同源策略，JSONP属于非同源策略（跨域请求）</p><h3 id="JSONP优缺点"><a href="#JSONP优缺点" class="headerlink" title="JSONP优缺点"></a>JSONP优缺点</h3><p>JSONP优点是简单兼容性好，可用于解决主流浏览器的跨域数据访问的问题。<br>缺点是仅支持get方法具有局限性，不安全可能会XSS攻击。</p><h3 id="JSONP的实现流程"><a href="#JSONP的实现流程" class="headerlink" title="JSONP的实现流程"></a>JSONP的实现流程</h3><ul><li>声明一个回调函数，其函数名（如show）当做参数值，要传递给跨域请求数据的服务器，函数形参为要获取目标数据（服务器返回的data）。</li><li>创建一个<code>&lt;script&gt;</code>标签，把那个跨域的API数据接口地址，赋值给script的src，还要在这个地址中向服务器传递该参数名（可以通过问好传参：`?callback=show）。</li><li>服务器接受到请求后，需要进行特殊的处理：把传递进来的函数名和它需要给你的数据拼接成一个字符串，例如：传递进去的函数名是show，它准备好的数据是show(‘XXX’)。</li><li>最后服务器把准备的数据通过HTTP协议返回给客户端，客户端再调用执行之前声明的回调函数<code>show</code>，对返回的数据进行操作。</li></ul><p>在开发中可能会遇到多个JSONP请求的回调函数名是相同的，这时候就需要自己封装一个JSONP函数。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.html</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsonp</span>(<span class="params">&#123; url, params, callback &#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>)</span><br><span class="line">    <span class="built_in">window</span>[callback] = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      resolve(data)</span><br><span class="line">      <span class="built_in">document</span>.body.removeChild(script)</span><br><span class="line">    &#125;</span><br><span class="line">    params = &#123; ...params, callback &#125; <span class="comment">// wd=b&amp;callback=show</span></span><br><span class="line">    <span class="keyword">let</span> arrs = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> params) &#123;</span><br><span class="line">      arrs.push(<span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;params[key]&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    script.src = <span class="string">`<span class="subst">$&#123;url&#125;</span>?<span class="subst">$&#123;arrs.join(<span class="string">'&amp;'</span>)&#125;</span>`</span></span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(script)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">jsonp(&#123;</span><br><span class="line">  url: <span class="string">'http://127.0.01:8000/say'</span>,</span><br><span class="line">  params: &#123; <span class="attr">wd</span>: <span class="string">'Iloveyou'</span> &#125;,</span><br><span class="line">  callback: <span class="string">'show'</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>上面这段代码相当于向<code>http://127.0.0.1:8000/say?wd=Iloveyou&amp;callback=show</code>这个地址请求数据，然后后台返回show(‘I love you’)，最后会允许show()这个函数，打印出’我不爱你’</p><p>后端nodejs<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">let</span> app = express()</span><br><span class="line">app.get(<span class="string">'/say'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; wd, callback &#125; = req.query</span><br><span class="line">  <span class="built_in">console</span>.log(wd) <span class="comment">// Iloveyou</span></span><br><span class="line">  <span class="built_in">console</span>.log(callback) <span class="comment">// show</span></span><br><span class="line">  res.end(<span class="string">`<span class="subst">$&#123;callback&#125;</span>('我不爱你')`</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">8000</span>)</span><br></pre></td></tr></table></figure></p><h3 id="JQuery的jsonp形式"><a href="#JQuery的jsonp形式" class="headerlink" title="JQuery的jsonp形式"></a>JQuery的jsonp形式</h3><p>JSONP都是<code>GET</code>和异步请求，不存在其他的请求方式和同步请求，且JQuery默认就会给JSONP的请求清除缓存。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">url:<span class="string">"http://crossdomain.com/jsonServerResponse"</span>,</span><br><span class="line">dataType:<span class="string">"jsonp"</span>,</span><br><span class="line">type:<span class="string">"get"</span>,<span class="comment">//可以省略</span></span><br><span class="line">jsonpCallback:<span class="string">"show"</span>,<span class="comment">//-&gt;自定义传递给服务器的函数名，而不是使用jQuery自动生成的，可省略</span></span><br><span class="line">jsonp:<span class="string">"callback"</span>,<span class="comment">//-&gt;把传递函数名的那个形参callback，可省略</span></span><br><span class="line">success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(data);&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h2><p><strong>CORS需要浏览器和后端同时支持。IE8 和 9 需要通过XDomainRequest来实现。</strong></p><p>浏览器会自动CORS通信，实现CORS通信的关键是后端。只要后端实现了CORS，就实现了跨域。</p><p>服务端设置 Access-Control-Allow-Origin 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源。</p><p>虽然设置 CORS 和前端没什么关系，但是通过这种方式解决跨域问题的话，会在发送请求时出现两种情况，分别为简单请求和复杂请求。</p><h3 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h3><p>只要同时满足一下两大条件，就属于简单请求<br><strong>条件1：使用下列方式之一：</strong></p><ul><li>GET</li><li>HEAD</li><li>POST</li></ul><p><strong>条件2：Content-Type的值仅限于下列三者之一：</strong></p><ul><li>text/plain</li><li>multipart/form-data</li><li>application/x-www-form-urlencoded</li></ul><p>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器； XMLHttpRequestUpload 对象可以使用 XMLHttpRequest.upload 属性访问。</p><h3 id="复杂请求"><a href="#复杂请求" class="headerlink" title="复杂请求"></a>复杂请求</h3><p>不符合以上条件的请求就肯定是复杂请求了。<br>复杂请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求,该请求是 option 方法的，通过该请求来知道服务端是否允许跨域请求。</p><p>我们用PUT向后台请求时，属于复杂请求，后台需做如下配置：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 允许哪个方法访问我</span></span><br><span class="line">res.setHeader(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT'</span>)</span><br><span class="line"><span class="comment">// 预检的存活时间</span></span><br><span class="line">res.setHeader(<span class="string">'Access-Control-Max-Age'</span>, <span class="number">6</span>)</span><br><span class="line"><span class="comment">// OPTIONS请求不做任何处理</span></span><br><span class="line"><span class="keyword">if</span> (req.method === <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">  res.end() </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义后台返回的内容</span></span><br><span class="line">app.put(<span class="string">'/getData'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.headers)</span><br><span class="line">  res.end(<span class="string">'我不爱你'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>接下来我们看下一个完整复杂请求的例子，并且介绍下CORS请求相关的字段</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.html</span></span><br><span class="line"><span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">'name=xiamen'</span> <span class="comment">// cookie不能跨域</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span> <span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">xhr.open(<span class="string">'PUT'</span>, <span class="string">'http://localhost:4000/getData'</span>, <span class="literal">true</span>)</span><br><span class="line">xhr.setRequestHeader(<span class="string">'name'</span>, <span class="string">'xiamen'</span>)</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span>) || xhr.status === <span class="number">304</span>) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(xhr.response)</span><br><span class="line">      <span class="comment">//得到响应头，后台需设置Access-Control-Expose-Headers</span></span><br><span class="line">      <span class="built_in">console</span>.log(xhr.getResponseHeader(<span class="string">'name'</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server1.js</span></span><br><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">let</span> app = express();</span><br><span class="line">app.use(express.static(__dirname));</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server2.js</span></span><br><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">let</span> app = express()</span><br><span class="line"><span class="keyword">let</span> whitList = [<span class="string">'http://localhost:3000'</span>] <span class="comment">//设置白名单</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> origin = req.headers.origin</span><br><span class="line">  <span class="keyword">if</span> (whitList.includes(origin)) &#123;</span><br><span class="line">    <span class="comment">// 设置哪个源可以访问我</span></span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Allow-Origin'</span>, origin)</span><br><span class="line">    <span class="comment">// 允许携带哪个头访问我</span></span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Allow-Headers'</span>, <span class="string">'name'</span>)</span><br><span class="line">    <span class="comment">// 允许哪个方法访问我</span></span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT'</span>)</span><br><span class="line">    <span class="comment">// 允许携带cookie</span></span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Allow-Credentials'</span>, <span class="literal">true</span>)</span><br><span class="line">    <span class="comment">// 预检的存活时间</span></span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Max-Age'</span>, <span class="number">6</span>)</span><br><span class="line">    <span class="comment">// 允许返回的头</span></span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Expose-Headers'</span>, <span class="string">'name'</span>)</span><br><span class="line">    <span class="keyword">if</span> (req.method === <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">      res.end() <span class="comment">// OPTIONS请求不做任何处理</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br><span class="line">app.put(<span class="string">'/getData'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.headers)</span><br><span class="line">  res.setHeader(<span class="string">'name'</span>, <span class="string">'jw'</span>) <span class="comment">//返回一个响应头，后台需设置</span></span><br><span class="line">  res.end(<span class="string">'我不爱你'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/getData'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.headers)</span><br><span class="line">  res.end(<span class="string">'我不爱你'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.use(express.static(__dirname))</span><br><span class="line">app.listen(<span class="number">4000</span>)</span><br></pre></td></tr></table></figure><p>上述代码由<a href="http://localhost:3000/index.html向http://localhost:4000/跨域请求，正如我们上面所说的，后端是实现" target="_blank" rel="noopener">http://localhost:3000/index.html向http://localhost:4000/跨域请求，正如我们上面所说的，后端是实现</a> CORS 通信的关键。</p><h2 id="postMessage"><a href="#postMessage" class="headerlink" title="postMessage"></a>postMessage</h2><p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：</p><ul><li>页面和其打开的新窗口的数据传递</li><li>多窗口之间消息传递</li><li>页面与嵌套的iframe消息传递</li><li>上面三个场景的跨域数据传递</li></ul><p>postMessage()方法允许来自不同源的脚本采用异步方式进行有限的通信，可以实现跨文本档、多窗口、跨域消息传递。</p><blockquote><p>otherWindow.postMessage(message, targetOrigin, [transfer]);</p></blockquote><ul><li>message: 将要发送到其他 window的数据。</li><li>targetOrigin:通过窗口的origin属性来指定哪些窗口能接收到消息事件，其值可以是字符串”*”（表示无限制）或者一个URI。在发送消息的时候，如果目标窗口的协议、主机地址或端口这三者的任意一项不匹配targetOrigin提供的值，那么消息就不会被发送；只有三者完全匹配，消息才会被发送。</li><li>transfer(可选)：是一串和message 同时传递的 Transferable 对象. 这些对象的所有权将被转移给消息的接收方，而发送一方将不再保有所有权。</li></ul><p>接下来我们看个例子： <code>http://localhost:3000/a.html</code>页面向<code>http://localhost:4000/b.html</code>传递“我爱你”,然后后者传回”我不爱你”。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a.html</span></span><br><span class="line">  &lt;iframe src=<span class="string">"http://localhost:4000/b.html"</span> frameborder=<span class="string">"0"</span> id=<span class="string">"frame"</span> onload=<span class="string">"load()"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span> <span class="comment">//等它加载完触发一个事件</span></span><br><span class="line">  <span class="comment">//内嵌在http://localhost:3000/a.html</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> frame = <span class="built_in">document</span>.getElementById(<span class="string">'frame'</span>)</span><br><span class="line">        frame.contentWindow.postMessage(<span class="string">'我爱你'</span>, <span class="string">'http://localhost:4000'</span>) <span class="comment">//发送数据</span></span><br><span class="line">        <span class="built_in">window</span>.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; <span class="comment">//接受返回数据</span></span><br><span class="line">          <span class="built_in">console</span>.log(e.data) <span class="comment">//我不爱你</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// b.html</span></span><br><span class="line">  <span class="built_in">window</span>.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.data) <span class="comment">//我爱你</span></span><br><span class="line">    e.source.postMessage(<span class="string">'我不爱你'</span>, e.origin)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2><p>Websocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSocket和HTTP都是应用层协议，都基于 TCP 协议。但是 <strong>WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据</strong>。同时，WebSocket 在建立连接时需要借助 HTTP 协议，连接建立好了之后 client 与 server 之间的双向通信就与 HTTP 无关了。</p><p>原生WebSocket API使用起来不太方便，我们使用<code>Socket.io</code>，它很好地封装了webSocket接口，提供了更简单、灵活的接口，也对不支持webSocket的浏览器提供了向下兼容。</p><p>我们先来看个例子：本地文件<code>socket.html</code>向<code>localhost:3000</code>发生数据和接受数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// socket.html</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> socket = <span class="keyword">new</span> WebSocket(<span class="string">'ws://localhost:3000'</span>);</span></span><br><span class="line"><span class="javascript">    socket.onopen = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      socket.send(<span class="string">'我爱你'</span>);<span class="comment">//向服务器发送数据</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    socket.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(e.data);<span class="comment">//接收服务器返回的数据</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">let</span> app = express();</span><br><span class="line"><span class="keyword">let</span> WebSocket = <span class="built_in">require</span>(<span class="string">'ws'</span>);<span class="comment">//记得安装ws</span></span><br><span class="line"><span class="keyword">let</span> wss = <span class="keyword">new</span> WebSocket.Server(&#123;<span class="attr">port</span>:<span class="number">3000</span>&#125;);</span><br><span class="line">wss.on(<span class="string">'connection'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ws</span>) </span>&#123;</span><br><span class="line">  ws.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">    ws.send(<span class="string">'我不爱你'</span>)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Node中间件代理-两次跨域"><a href="#Node中间件代理-两次跨域" class="headerlink" title="Node中间件代理(两次跨域)"></a>Node中间件代理(两次跨域)</h2><p>实现原理：<strong>同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略</strong>。<br>代理服务器，需要做以下几个步骤：</p><ul><li>接受客户端请求 。</li><li>将<code>请求</code>转发给服务器。</li><li>拿到服务器<code>响应</code>数据。</li><li>将<code>响应</code>转发给客户端。</li></ul><p><img src="nodeproxy.jpg" alt=""></p><p>我们先来看个例子：本地文件index.html文件，通过代理服务器<code>http://localhost:3000</code>向目标服务器<code>http://localhost:4000</code>请求数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// index.html(http://127.0.0.1:5500)</span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">        url: <span class="string">'http://localhost:3000'</span>,</span></span><br><span class="line"><span class="javascript">        type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="javascript">        data: &#123; <span class="attr">name</span>: <span class="string">'xiamen'</span>, <span class="attr">password</span>: <span class="string">'123456'</span> &#125;,</span></span><br><span class="line"><span class="javascript">        contentType: <span class="string">'application/json;charset=utf-8'</span>,</span></span><br><span class="line"><span class="javascript">        success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(result) <span class="comment">// &#123;"title":"fontend","password":"123456"&#125;</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        error: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(msg)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">     </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server1.js 代理服务器(http://localhost:3000)</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="comment">// 第一步：接受客户端请求</span></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 代理服务器，直接和浏览器直接交互，需要设置CORS 的首部字段</span></span><br><span class="line">  response.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">    <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'*'</span>,</span><br><span class="line">    <span class="string">'Access-Control-Allow-Methods'</span>: <span class="string">'*'</span>,</span><br><span class="line">    <span class="string">'Access-Control-Allow-Headers'</span>: <span class="string">'Content-Type'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 第二步：将请求转发给服务器</span></span><br><span class="line">  <span class="keyword">const</span> proxyRequest = http</span><br><span class="line">    .request(</span><br><span class="line">      &#123;</span><br><span class="line">        host: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        port: <span class="number">4000</span>,</span><br><span class="line">        url: <span class="string">'/'</span>,</span><br><span class="line">        method: request.method,</span><br><span class="line">        headers: request.headers</span><br><span class="line">      &#125;,</span><br><span class="line">      serverResponse =&gt; &#123;</span><br><span class="line">        <span class="comment">// 第三步：收到服务器的响应</span></span><br><span class="line">        <span class="keyword">var</span> body = <span class="string">''</span></span><br><span class="line">        serverResponse.on(<span class="string">'data'</span>, chunk =&gt; &#123;</span><br><span class="line">          body += chunk</span><br><span class="line">        &#125;)</span><br><span class="line">        serverResponse.on(<span class="string">'end'</span>, () =&gt; &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'The data is '</span> + body)</span><br><span class="line">          <span class="comment">// 第四步：将响应结果转发给浏览器</span></span><br><span class="line">          response.end(body)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    .end()</span><br><span class="line">&#125;)</span><br><span class="line">server.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The proxyServer is running at http://localhost:3000'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server2.js(http://localhost:4000)</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">const</span> data = &#123; <span class="attr">title</span>: <span class="string">'fontend'</span>, <span class="attr">password</span>: <span class="string">'123456'</span> &#125;</span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (request.url === <span class="string">'/'</span>) &#123;</span><br><span class="line">    response.end(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">server.listen(<span class="number">4000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The server is running at http://localhost:4000'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上述代码经过两次跨域，值得注意的是浏览器向代理服务器发送请求，也遵循同源策略，最后在index.html文件打印出<code>{&quot;title&quot;:&quot;fontend&quot;,&quot;password&quot;:&quot;123456&quot;}</code></p><h2 id="nginx反向代理"><a href="#nginx反向代理" class="headerlink" title="nginx反向代理"></a>nginx反向代理</h2><p>实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。</p><p>使用nginx反向代理实现跨域，是最简单的跨域方式。只需要修改nginx的配置即可解决跨域问题，支持所有浏览器，支持session，不需要修改任何代码，并且不会影响服务器性能。</p><p>实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录。</p><p>先下载nginx，然后将nginx目录下的nginx.conf修改如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// proxy服务器</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.domain1.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://www.domain2.com:8080;  #反向代理</span><br><span class="line">        proxy_cookie_domain www.domain2.com www.domain1.com; #修改cookie里域名</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line"></span><br><span class="line">        # 当用webpack-dev-server等中间件代理接口访问nignx时，此时无浏览器参与，故没有同源限制，下面的跨域配置可不启用</span><br><span class="line">        add_header Access-Control-Allow-Origin http://www.domain1.com;  #当前端只跨域不带cookie时，可为*</span><br><span class="line">        add_header Access-Control-Allow-Credentials true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后通过命令行<code>nginx -s reload</code>启动nginx</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.html</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 前端开关：浏览器是否读写cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 访问nginx中的代理服务器</span></span><br><span class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'http://www.domain1.com:81/?user=admin'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.send(); js</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"><span class="keyword">var</span> qs = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> params = qs.parse(req.url.substring(<span class="number">2</span>));</span><br><span class="line">    <span class="comment">// 向前台写cookie</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">'Set-Cookie'</span>: <span class="string">'l=a123456;Path=/;Domain=www.domain2.com;HttpOnly'</span>   <span class="comment">// HttpOnly:脚本无法读取</span></span><br><span class="line">    &#125;);</span><br><span class="line">    res.write(<span class="built_in">JSON</span>.stringify(params));</span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(<span class="string">'8080'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server is running at port 8080...'</span>);</span><br></pre></td></tr></table></figure><h2 id="window-name-iframe"><a href="#window-name-iframe" class="headerlink" title="window.name + iframe"></a>window.name + iframe</h2><p>window.name属性的独特之处：name值在不同的页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的 name 值（2MB）。</p><p>其中a.html和b.html是同域的，都是<code>http://localhost:3000</code>;而c.html是<code>http://localhost:4000</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// a.html(http://localhost:3000/b.html)</span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://localhost:4000/c.html"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">onload</span>=<span class="string">"load()"</span> <span class="attr">id</span>=<span class="string">"iframe"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> first = <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// onload事件会触发2次，第1次加载跨域页，并留存数据于window.name</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(first)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 第1次onload(跨域页)成功后，切换到同域代理页面</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> iframe = <span class="built_in">document</span>.getElementById(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="javascript">        iframe.src = <span class="string">'http://localhost:3000/b.html'</span>;</span></span><br><span class="line"><span class="javascript">        first = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">      &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 第2次onload(同域b.html页)成功后，读取同域window.name中数据</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(iframe.contentWindow.name);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>b.html为中间代理页，与a.html同域，内容为空。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// c.html(http://localhost:4000/c.html)</span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="built_in">window</span>.name = <span class="string">'我不爱你'</span>  </span></span><br><span class="line"><span class="undefined"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>通过iframe的src属性由外域转向本地域，跨域数据即由iframe的window.name从外域传递到本地域。这个就巧妙地绕过了浏览器的跨域访问限制，但同时它又是安全操作。</p><h2 id="location-hash-iframe"><a href="#location-hash-iframe" class="headerlink" title="location.hash + iframe"></a>location.hash + iframe</h2><p>实现原理： a.html欲与c.html跨域相互通信，通过中间页b.html来实现。 三个页面，不同域之间利用iframe的location.hash传值，相同域之间直接js访问来通信。</p><p>具体实现步骤：一开始a.html给c.html传一个hash值，然后c.html收到hash值后，再把hash值传递给b.html，最后b.html将结果放到a.html的hash值中。<br>同样的，a.html和b.html是同域的，都是<code>http://localhost:3000</code>;而c.html是<code>http://localhost:4000</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// a.html</span><br><span class="line"> <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://localhost:4000/c.html#iloveyou"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="built_in">window</span>.onhashchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//检测hash的变化</span></span></span><br><span class="line"><span class="javascript">     <span class="built_in">console</span>.log(location.hash);</span></span><br><span class="line"><span class="undefined">   &#125;</span></span><br><span class="line"><span class="undefined"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// b.html</span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="built_in">window</span>.parent.parent.location.hash = location.hash </span></span><br><span class="line"><span class="javascript">   <span class="comment">//b.html将结果放到a.html的hash值中，b.html可通过parent.parent访问a.html页面</span></span></span><br><span class="line"><span class="undefined"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// c.html</span></span><br><span class="line"><span class="built_in">console</span>.log(location.hash);</span><br><span class="line"> <span class="keyword">let</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line"> iframe.src = <span class="string">'http://localhost:3000/b.html#idontloveyou'</span>;</span><br><span class="line"> <span class="built_in">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><h2 id="document-domain-iframe"><a href="#document-domain-iframe" class="headerlink" title="document.domain + iframe"></a>document.domain + iframe</h2><p><strong>该方式只能用于二级域名相同的情况下，比如 a.test.com 和 b.test.com 适用于该方式。</strong></p><p>只需要给页面添加<code>document.domain =&#39;test.com&#39;</code> 表示二级域名都相同就可以实现跨域。</p><p>实现原理：两个页面都通过js强制设置<code>document.domain</code>为基础主域，就实现了同域。</p><p>我们看个例子：页面<code>a.zf1.cn:3000/a.html</code>获取页面<code>b.zf1.cn:3000/b.html</code>中a的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// a.html</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> helloa</span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://b.zf1.cn:3000/b.html"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">onload</span>=<span class="string">"load()"</span> <span class="attr">id</span>=<span class="string">"frame"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.domain = <span class="string">'zf1.cn'</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(frame.contentWindow.a);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/ b.html</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   hellob</span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">     <span class="built_in">document</span>.domain = <span class="string">'zf1.cn'</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> a = <span class="number">100</span>;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案</li><li>JSONP只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</li><li>不管是Node中间件代理还是nginx反向代理，主要是通过同源策略对服务器不加限制。</li><li>日常工作中，用得比较多的跨域方案是cors和nginx反向代理</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/04/cors.html</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage</a></p><p><a href="https://segmentfault.com/a/1190000011145364" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011145364</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前端在与后端进行数据交互时经常会碰到跨域请求，这里在此探讨一下。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hackycy.github.io/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://hackycy.github.io/tags/HTML/"/>
    
      <category term="跨域" scheme="http://hackycy.github.io/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>IOS中的Web开发</title>
    <link href="http://hackycy.github.io/2019/03/25/IOS%E4%B8%AD%E7%9A%84Web%E5%BC%80%E5%8F%91/"/>
    <id>http://hackycy.github.io/2019/03/25/IOS中的Web开发/</id>
    <published>2019-03-25T14:19:19.000Z</published>
    <updated>2019-04-07T18:08:43.216Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>移动开发领域近年来已经逐渐告别了野蛮生长的时期，进入了相对成熟的时代。而一直以来 Native 和 Web 的争论从未停止，通过开发者孜孜不倦的努力，Web 的效率和 Native 的体验也一直在寻求着平衡。本文聚焦 iOS 开发和 Web 开发的交叉点，希望能通过简要的介绍，帮助开发者一窥 Hybrid 和大前端的构想。</p></blockquote><a id="more"></a><p><img src="intro.jpg" alt=""></p><h1 id="IOS中web容器与加载"><a href="#IOS中web容器与加载" class="headerlink" title="IOS中web容器与加载"></a>IOS中web容器与加载</h1><h2 id="1、IOS中的Web容器"><a href="#1、IOS中的Web容器" class="headerlink" title="1、IOS中的Web容器"></a>1、IOS中的Web容器</h2><p>目前IOS系统为开发者提供三种方式来展示Web内容</p><h3 id="UIWebView"><a href="#UIWebView" class="headerlink" title="UIWebView"></a>UIWebView</h3><p>UIWebView 从 iOS2 开始就作为 App 内展示 Web 内容的容器，但是长久以来一直遭受开发者的诟病；系统级的内存泄露、极高内存峰值、较差的稳定性、Touch Delay 以及 Javascript 的运行性能及通信限制等等。在 iOS12 以后已经标记为 Deprecated 不再维护。</p><h3 id="WKWebView"><a href="#WKWebView" class="headerlink" title="WKWebView"></a>WKWebView</h3><p>在 iOS 8 中，Apple 引入了新一代的 WebKit framework，同时提供了 WKWebView 用来替代传统的 UIWebView。它更加的稳定、拥有 60fps 滚动刷新率、丰富的手势、KVO、高效的 Web 和 Native 通信，默认进度条等等功能，而最重要的，是使用了和 safari 相同的 Nitro 引擎极大提升了 Javascript 的运行速度。WKWebView 独立的进程管理，也降低了内存占用及 Crash 对主 App 的影响。</p><h3 id="SFSafariViewController"><a href="#SFSafariViewController" class="headerlink" title="SFSafariViewController"></a>SFSafariViewController</h3><p>在 iOS 9 中，Apple 引入了 SFSafariViewController。其特点就是在 App 内可以打开一个高度标准化的、和 Safari 一样界面和特性的页面。同时 SFSafariViewController 支持和 Safari 共享 Cookie 和表单数据等等。</p><h3 id="Web容器选型"><a href="#Web容器选型" class="headerlink" title="Web容器选型"></a>Web容器选型</h3><p>对于 SFSafariViewController：由于其标准化程度之高，使之界面和交互逻辑无法和 App 统一，基于 App 的整体体验的考虑，一般都使用在相对独立的功能和模块中，最常见的就是在 App 内打开 App Store 或者广告、游戏推广的页面。</p><p>对于 UIWebView/WKWebView：如果说之前由于 NSURLProtocol 的问题，好多 App 都在继续使用 UIWebView，那么随着 App 放弃维护 UIWebView（iOS12），全部的 App 应该会陆续的切换到 WKWebView 中来。当然，最初 WKWebView 也为开发者们带来了一些难题，但是随着系统的升级与业务逻辑的适配也逐步的修复，后文会列举几个最为关注的技术点。</p><p>UIWebView/WKWebView 对主 App 内存的影响：<br><img src="memory.jpg" alt=""></p><h2 id="2、WebKit-框架与使用"><a href="#2、WebKit-框架与使用" class="headerlink" title="2、WebKit 框架与使用"></a>2、WebKit 框架与使用</h2><h3 id="WebKit-framework"><a href="#WebKit-framework" class="headerlink" title="WebKit.framework"></a>WebKit.framework</h3><p>WebKit 是一个开源的 Web 浏览器引擎。每当谈到 WebKit，开发者常常迷惑于它和 WebKit2、Safari、iOS 中的 framework、以及 Chromium 等浏览器的关系。</p><p>广义的 WebKit 其实就是指 WebCore，它主要包含了 HTML 和 CSS 的解析、布局和定位这类渲染 HTML 的功能逻辑。而狭义的 WebKit 就是在 WebCore 的基础上，不同平台封装 Javascript 引擎、网络层、GPU 相关的技术（WebGL、视频）、绘制渲染技术以及各个平台对应的接口，形成我们可以用的 WebView 或浏览器，也就是所谓的 WebKit Ports。</p><p><img src="webkit.jpg" alt=""></p><p>比如在 Safari 中 JS 的引擎使用 JavascriptCore，而 Chromium 中使用 V8；渲染方面 Safari 使用 CoreGraphics，而 Chromium 中使用 Skia；网络方面 Safari 使用 CFNetwork，而 Chromium 中使用 Chromium stack 等等。而 WebKit2 是相对于狭义上的 WebKit 架构而言，主要变化是在 API 层支持多进程，分离了 UI 和 Web 接口的进程，使之通过 IPC 来进行通讯。</p><p>对于 iOS 中的 WebKit.framework 就是在 WebCore、底层桥接、JSCore 引擎等核心模块的基础上，针对 iOS 平台的项目封装。它基于新的 WKWebView，提供了一系列浏览特性的设置，以及简单方便的加载回调。而具体类及使用，开发者可以查阅官方文档:</p><blockquote><p><a href="https://developer.apple.com/documentation/webkit" target="_blank" rel="noopener">https://developer.apple.com/documentation/webkit</a></p></blockquote><p><img src="webkit2.jpg" alt=""></p><h3 id="Web-容器使用流程与关键节点"><a href="#Web-容器使用流程与关键节点" class="headerlink" title="Web 容器使用流程与关键节点"></a>Web 容器使用流程与关键节点</h3><p>对于大部分日常使用来说，开发者需要关注的就是 WKWebView 的创建、配置、加载、以及系统回调的接收。</p><p><img src="webrongqi.jpg" alt=""></p><p>对于 Web 开发者，业务逻辑一般通过基于 Web 页面中 Dom 渲染的关键节点来处理。而对于 iOS 开发者，WKWebView 提供的的注册、加载和回调时机，没有明确的与 Web 加载的关键节点相关联。准确的理解和处理两个维度的加载顺序，选择合理的业务逻辑处理时机，才可以实现准确而高效的应用。</p><p><img src="webrongqi2.jpg" alt=""></p><h3 id="WKWebView-常见问题"><a href="#WKWebView-常见问题" class="headerlink" title="WKWebView 常见问题"></a>WKWebView 常见问题</h3><p>使用 WKWebView 带来的另外一个好处，就是我们可以通过源码理解部分加载逻辑，为 Crash 提供一些思路，或者使用一些私有方法处理复杂业务逻辑。</p><p><strong>NSURLProtocol</strong></p><p>WKWebView 最为显著的改变，就是不支持 NSURLProtocol。为了兼容旧的业务逻辑，一部分 App 通过 WKBrowsingContextController 中的非公开方法实现了 NSURLProtocol。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WKBrowsingContextController</span></span><br><span class="line"> + (<span class="keyword">void</span>)registerSchemeForCustomProtocol:(<span class="built_in">NSString</span> *)scheme <span class="built_in">WK_API_DEPRECATED_WITH_REPLACEMENT</span>(<span class="string">"WKURLSchemeHandler"</span>, macos(<span class="number">10.10</span>, <span class="built_in">WK_MAC_TBA</span>), ios(<span class="number">8.0</span>, <span class="built_in">WK_IOS_TBA</span>));</span><br></pre></td></tr></table></figure><p>在 iOS 11 中，系统增加了 setURLSchemeHandler 函数用来拦截自定义的 Scheme。但是不同于 UIWebView，新的函数只能拦截自定义的 Scheme(SchemeRegistry.cpp)，对使用最多的 HTTP/HTTPS 依然不能有效的拦截。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//SchemeRegistry</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">const</span> StringVectorFunction functions[] &#123;</span><br><span class="line">     builtinSecureSchemes,                <span class="comment">// about;data...</span></span><br><span class="line">     builtinSchemesWithUniqueOrigins,     <span class="comment">// javascript...</span></span><br><span class="line">     builtinEmptyDocumentSchemes,</span><br><span class="line">     builtinCanDisplayOnlyIfCanRequestSchemes,</span><br><span class="line">     builtinCORSEnabledSchemes,           <span class="comment">//http;https</span></span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><p><strong>白屏</strong></p><p>通常 WKWebView 白屏的原因主要分两种，一种是由于 Web 的进程 Crash（多见于内部进程通信）；一种就是 WebView 渲染时的错误（Debug 一切正常只是没有对应的内容）。对于白屏的检测，前者在 iOS9 之后系统提供了对应 Crash 的回调函数，同时业界也有通过判断 URL/Title 是否为空的方式作为辅助；后者业界通过视图树对比，判断 SubView 是否包含 WKCompsitingView，以及通过随机点截图等方式作为白屏判断的依据。</p><p>其他 WKWebView 的系统级问题如 Cookie、POST 参数、异步 Javascript 等等一系列的问题，可以通过业务逻辑的调整重新适配。</p><p>由于 WebKit 源码等开放性，我们也可以利用私有方法来简化代码逻辑、实现复杂的产品需求。例如在 WKWebViewPrivate 中可以获得各种页面信息、直接取到 UserAgent、 在 WKBackForwardListPrivate 中可以清理掉全部的跳转历史、以及在 WKContentViewInteraction 中替换方法实现自定义的 MenuItem 等等。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WKWebView</span> (<span class="title">WKPrivate</span>)</span></span><br><span class="line"> <span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *_userAgent <span class="built_in">WK_API_AVAILABLE</span>(macosx(<span class="number">10.11</span>), ios(<span class="number">9.0</span>));</span><br><span class="line"> ...</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">@interface</span> <span class="title">WKBackForwardList</span> (<span class="title">WKPrivate</span>)</span></span><br><span class="line"> - (<span class="keyword">void</span>)_removeAllItems;</span><br><span class="line"> ...</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">@interface</span> <span class="title">WKContentView</span> (<span class="title">WKInteraction</span>)</span></span><br><span class="line"> - (<span class="built_in">BOOL</span>)canPerformActionForWebView:(SEL)action withSender:(<span class="keyword">id</span>)sender;</span><br></pre></td></tr></table></figure><h2 id="3、App-中的应用场景"><a href="#3、App-中的应用场景" class="headerlink" title="3、App 中的应用场景"></a>3、App 中的应用场景</h2><p>WKWebView 系统提供了四个用于加载渲染 Web 的函数。这四个函数从加载的类型上可以分为两类：加载 URL &amp; 加载 HTML\Data。所以基于此也延伸出两种不同的业务场景：加载 URL 的页面直出类和加载数据的模板渲染类，同时两种类型各自也有不同的优化重点及方向。</p><h3 id="页面直出类"><a href="#页面直出类" class="headerlink" title="页面直出类"></a>页面直出类</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 根据 URL 直接展示 Web 页面</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">WKNavigation</span> *)loadRequest:(<span class="built_in">NSURLRequest</span> *)request;</span><br></pre></td></tr></table></figure><p>通常各类 App 中的 Web 页面加载都是通过加载 URL 的方式，比如嵌入的运营活动页面、广告页面等等。</p><h3 id="模板渲染类"><a href="#模板渲染类" class="headerlink" title="模板渲染类"></a>模板渲染类</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据模板 &amp; 数据渲染 Web 页面</span></span><br><span class="line">  - (<span class="keyword">nullable</span> <span class="built_in">WKNavigation</span> *)loadHTMLString:(<span class="built_in">NSString</span> *)string baseURL:(<span class="keyword">nullable</span> <span class="built_in">NSURL</span> *)baseURL;</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>需要使用 WebView 展示，且交互逻辑较多的页面，最常见的就是资讯类 App 的内容展示页。</p><h1 id="iOS-中-Web-与-Native-的通信"><a href="#iOS-中-Web-与-Native-的通信" class="headerlink" title="iOS 中 Web 与 Native 的通信"></a>iOS 中 Web 与 Native 的通信</h1><p>单纯的使用 Web 容器加载页面已经不能满足复杂的功能，开发者希望数据可以在 Native 和 Web 之间通信传递来实现复杂的功能，而 Javascript 就是通信的媒介。对于有 WebView 的情况，虽然 WKWebView 提供了系统级的方法，但是大部分 App 仍然使用基于 URLScheme 的 WebViewBridge 用以兼容 UIWebView。而脱离了 WebView 容器，系统提供了 JavaScriptCore 的 framework，它也为之后蓬勃发展的跨平台和热修复技术提供了可能。</p><h2 id="1-基于-WebView-的通信"><a href="#1-基于-WebView-的通信" class="headerlink" title="1. 基于 WebView 的通信"></a>1. 基于 WebView 的通信</h2><p>基于 WebView 的通信主要有两个 途径，一个是通过系统或私有方法，获取 WebView 当中的 JSContext，使用系统封装的基于 JSCore 的函数通信。另一类就是通过创建自定义 Scheme 的 iframe Dom，客户端在回调中进行拦截实现。</p><h3 id="UIWebView-amp-WKWebView-系统级"><a href="#UIWebView-amp-WKWebView-系统级" class="headerlink" title="UIWebView &amp; WKWebView 系统级"></a>UIWebView &amp; WKWebView 系统级</h3><p>在 UIWebView 时代没有提供系统级的函数进行 Web 与 Native 的交互，绝大部分 App 都是通过 WebViewJavascriptBridge（下节介绍）来进行的通信。但是由于 JavascriptCore 的存在，对于 UIWebView 来说只要有效的获取到内部的 JSContext，也可以达到目的。目前已知有效的几个私有方法获取 Context 的方法如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过系统废弃函数获取 context</span></span><br><span class="line">  - (<span class="keyword">void</span>)webView:(WebView *)webView didCreateJavaScriptContext:(JSContext *)context forFrame:(WebFrame *)frame;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 valueForKeyPath 获取 context</span></span><br><span class="line">  <span class="keyword">self</span>.jsContext = [_webView valueForKeyPath:<span class="string">@"documentView.webView.mainFrame.javaScriptContext"</span>];</span><br></pre></td></tr></table></figure><p>在 WKWebView 中提供了系统级的 Web 和 Native 通讯机制，通过 Message Handler 的封装使开发效率有了很大的提升。同时系统封装了 JavaScript 对象和 Objective-C 对象的转换逻辑，也进降低了使用的门槛。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js 端发送消息</span></span><br><span class="line">  window.webkit.messageHandlers.&#123;NAME&#125;.postMessage()</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Native 在回调中接收</span></span><br><span class="line">  - (<span class="keyword">void</span>)userContentController:(<span class="built_in">WKUserContentController</span> *)userContentController didReceiveScriptMessage:(<span class="built_in">WKScriptMessage</span> *)message;</span><br></pre></td></tr></table></figure><h3 id="拦截自定义-Scheme-请求-WebViewJavascriptBridge"><a href="#拦截自定义-Scheme-请求-WebViewJavascriptBridge" class="headerlink" title="拦截自定义 Scheme 请求 - WebViewJavascriptBridge"></a>拦截自定义 Scheme 请求 - WebViewJavascriptBridge</h3><p>由于私有方法的稳定性与审核风险，开发者不愿意使用上文提到的 UIWebView 获取 JSContext 的方式进行通信，所以通常都采用基于 iframe 和自定义 Scheme 的 JavascriptBridge 进行通信。虽然在之后的 WKWebView 提供了系统函数，但是大部分 App 都需要兼容 UIWebView 与 WKWebView，所以目前的使用范围仍然十分广泛。</p><p>在 Github 中类似的开源框架有很多，但是无外乎都是 Web 侧根据固定的格式创建包含通信信息的 Request，之后创建隐式 iFrame 节点请求；Native 侧在相应的 WebView 回调中解析 Request 的 Scheme，之后按照格式解析数据并处理。</p><p>而对于数据传递和回调处理的问题，在兼容两种 WebView、持续的更新的 WebViewJavascriptBridge 中，iFrame request 没有直接传递数据，而是 Web 和 Native 侧维护共同的参数或回调 Queue，Native 通过 Request 中 Scheme 的解析触发对 Queue 里数据的读取。</p><p><img src="jsandnative.jpg" alt=""></p><h2 id="脱离-WebView-的通信-JavaScriptCore"><a href="#脱离-WebView-的通信-JavaScriptCore" class="headerlink" title="脱离 WebView 的通信 JavaScriptCore"></a>脱离 WebView 的通信 JavaScriptCore</h2><h3 id="JavascriptCore"><a href="#JavascriptCore" class="headerlink" title="JavascriptCore"></a>JavascriptCore</h3><p>JavascriptCore 一直作为 WebKit 中内置的 JS 引擎使用，在 iOS7 之后，Apple 对原有的 C/C++ 代码进行了 OC 的封装，成系统级的 framework 供开发者使用。作为一个引擎来讲，JavascriptCore 的词法、语法分析，以及多层次的 JIT 编译技术都是值得深入挖掘和学习的方向，由于篇幅的限制暂且不做深入的讨论。</p><p><img src="jscore.jpg" alt=""></p><h3 id="JavascriptCore-framework"><a href="#JavascriptCore-framework" class="headerlink" title="JavascriptCore.framework"></a>JavascriptCore.framework</h3><p>虽然 JavascriptCore.framework 只暴露了较少的头文件和系统函数，但却提供了在 App 中脱离 WebView 执行 Javascript 的环境和能力。</p><p>JSVirtualMachine：提供了 JS 执行的底层资源及内存。虽然 Java 与 Javascript 没有一点关系，但是同样作为虚拟机，JSVM 和 JVM 做了一部分类似的事情。每个 JSVirtualMachine 独占线程，拥有独立的空间和管理，但是可以包含多个 JSContext。JSContext：提供了 JS 运行的上下文环境和接口。可以不准确的理解为，就是创建了一个 Javascript 中的 Window 对象。JSValue：提供了 OC 和 JS 间数据类型的封装和转换 Type Conversions。除了基本的数据类型，需要注意 OC 中的 Block 转换为 JS 中的 function，Class 转换为 Constructor 等等。</p><p>JSManagedValue：Javascript 使用 GC 机制管理内存，而 OC 采用引用计数的方式管理内存。所以在 JavascriptCore 使用过程中，难免会遇到循环引用以及提前释放的问题。JSManagedValue 解决了在两种环境中的内存管理问题。JSExport：提供了类、属性和实例方法的调用接口。内部实现是在 ProtoType &amp; Constructor 中实现对应的属性和方法。</p><p><img src="jscore2.jpg" alt=""></p><h3 id="使用-JavascriptCore-进行通信"><a href="#使用-JavascriptCore-进行通信" class="headerlink" title="使用 JavascriptCore 进行通信"></a>使用 JavascriptCore 进行通信</h3><p>Native - Web: 通过 JavascriptCore，Native 可以直接在 Context 中执行 JS 语句，和 Web 侧进行通信和交互。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSValue *value = [<span class="keyword">self</span>.jsContext evaluateScript:<span class="string">@"document.cookie"</span>];</span><br></pre></td></tr></table></figure><p>Web - Native: 对于 Web 侧向 Native 的通信，JavascriptCore 提供 两种 方式，注册 Block &amp; Export 协议。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Native</span></span><br><span class="line">  <span class="keyword">self</span>.jsContext[<span class="string">@"addMethod"</span>] = ^ <span class="built_in">NSInteger</span>(<span class="built_in">NSInteger</span> a, <span class="built_in">NSInteger</span> b) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//JS</span></span><br><span class="line">  console.log(addMethod(<span class="number">1</span>, <span class="number">2</span>));    <span class="comment">//3</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//Native</span></span><br><span class="line">  <span class="class"><span class="keyword">@protocol</span> <span class="title">testJSExportProtocol</span> &lt;<span class="title">JSExport</span>&gt;</span></span><br><span class="line">  <span class="keyword">@property</span> (<span class="keyword">readonly</span>) <span class="built_in">NSString</span> *string;</span><br><span class="line">  ...</span><br><span class="line">  <span class="class"><span class="keyword">@interface</span> <span class="title">OCClass</span> : <span class="title">NSObject</span> &lt;<span class="title">testJSExportProtocol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//JS</span></span><br><span class="line">  var OCClass = new OCClass();</span><br><span class="line">  console.log(OCClass.string);</span><br></pre></td></tr></table></figure><p>对于 JavascriptCore 粗浅的理解，可以认为使用 Block 方法，内部是将 Block 保存到保存到一个 Web 环境中的全局的 Object 中，例如 window。而使用 JSExport 方法，则是在 Web 环境中 Object 的 prototype 中创建属性、实例方法；在 constructor 对象中创建类方法，从而实现 Web 中的调用。</p><h2 id="App-中的应用场景"><a href="#App-中的应用场景" class="headerlink" title="App 中的应用场景"></a>App 中的应用场景</h2><p>对于基于 WebView 的通信，主要用于 App 向 H5 页面中注入的 Javascript Open Api，如提供 Native 的拍照、音视频、定位；以及 App 内的登录、分享等等功能。<br>对于 JavaScriptCore，则催生了动态化、跨平台以及热修复等一系列技术的蓬勃发展。</p><h1 id="跨平台与热修复"><a href="#跨平台与热修复" class="headerlink" title="跨平台与热修复"></a>跨平台与热修复</h1><p>近几年来国内外移动端各种方案如雨后春笋般涌现，“Write once, run anywhere”不再是开发者的向往。剥离跨平台技术在 Web 侧 DSL、virtualDom 等方面的优化，以及 Native 侧 Runtime 的应用与封装，对于两端通信的核心，依然是 JavascriptCore。</p><p>而不同于国外开发者对跨平台技术的积极探索，国内开发者也对热修复技术产生了极大的热情。同样作为 Native 和 Web 的交叉 - JavascriptCore，依然承担着整个技术结构中的通信任务。</p><h2 id="1-基于-Web-的热修复技术"><a href="#1-基于-Web-的热修复技术" class="headerlink" title="1. 基于 Web 的热修复技术"></a>1. 基于 Web 的热修复技术</h2><p>对于国内的 iOS 开发者来说，审核周期、敏感业务、支付分成以及 bug 修复都催生了热修复方向的不断探索。在苹果加强审核之前，几乎所有大型的 App 都把热修复当成了 iOS 开发的基础能力，最近在《移动开发还有救么》中也详细的介绍了相关黑科技的前世今生。在所有 iOS 热修复的方案中，基于 Javascript、同时也是影响最大的就是 JSPatch。</p><p>基于上文的分析，对于脱离 WebView 的 Native 和 Web 间的通信，我们只能使用 JavascriptCore。而在 JavascriptCore 中提供了两种方式用于通信，即 Context 注册 Block 的回调，以及 JSExport。对于热修复的场景来说，我们不可能把潜在需要修复的函数都一一使用协议进行注册，更不能对新增方法和删除方法等进行处理，所以在 Native 和 Web 通信这个维度，我们只能采用 Context 注册 Block 的方式。</p><p>确定了通信采用 Block 回调的方式后，热修复就面临着如何在 JS 中调用类以及类的方法问题。由于没有使用 JSExport 等方式，JS 是无法找到相应类等属性和方法，在 JSPathc 中，通过简单的字符串替换，将所有方法都替换成通用函数（__c），然后就可以将相关信息传递给 Native，进而使用 runtime 接口调用方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 替换全部方法调用</span></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">NSString</span> *_replaceStr = <span class="string">@".__c(\"$1\")("</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用方法</span></span><br><span class="line">  __c: function(methodName) &#123;</span><br><span class="line">      ...</span><br><span class="line">      <span class="keyword">return</span> function()&#123;</span><br><span class="line">          ...</span><br><span class="line">          var ret = instance ? _OC_callI(instance, selectorName, args, isSuper):</span><br><span class="line">                                _OC_callC(clsName, selectorName, args)</span><br><span class="line">          <span class="keyword">return</span> _formatOCToJS(ret)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>当然对于 JSPatch 以及其他热修复的项目来说，Web 和 Native 通信只是整个框架中的一个技术点，更多的实现原理和细节由于篇幅的关系暂且不做介绍。</p><h2 id="2-基于-Web-的跨平台技术"><a href="#2-基于-Web-的跨平台技术" class="headerlink" title="2. 基于 Web 的跨平台技术"></a>2. 基于 Web 的跨平台技术</h2><p>随着 Google 开源了基于 Dart 语言的 Flutter，跨平台的技术又进入了一个新的发展阶段。对于传统的跨平台技术来讲，各个公司以 JavascriptCore 作为通信桥梁，围绕着 DSL 的解析、方法表的注册、模块注册通信、参数传递的设计以及 OC Runtime 的运用等不同方向，封装成了一个又一个跨平台的项目。</p><p><img src="rexiufu.jpg" alt=""></p><p>而在其中，以 Javascript 作为前端 DSL 的跨平台技术方案里，FaceBook 的 react-native 以及阿里 (目前托管给了 Apache) 的 Weex 最为流行。在网络上两者的比较文章有很多，集中在学习成本、框架生态、代码侵入、性能以及包大小等, 各个业务可以根据自己的重点选择合理的技术结构。</p><p>而不管是 react-native 还是 Weex,Web 和 Native 的通信桥梁仍然是 JavascriptCore。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//weex 举例</span></span><br><span class="line">JSValue* (^callNativeBlock)(JSValue *, JSValue *, JSValue *) = ^JSValue*(JSValue *instance, JSValue *tasks, JSValue *callback)&#123;</span><br><span class="line">    ...</span><br><span class="line">  <span class="keyword">return</span> [JSValue valueWithInt32:(int32_t)callNative(instanceId, tasksArray, callbackId) inContext:[JSContext currentContext]];</span><br><span class="line">&#125;;</span><br><span class="line">_jsContext[<span class="string">@"callNative"</span>] = callNativeBlock;</span><br></pre></td></tr></table></figure><h1 id="iOS-中-Web-相关优化策略"><a href="#iOS-中-Web-相关优化策略" class="headerlink" title="iOS 中 Web 相关优化策略"></a>iOS 中 Web 相关优化策略</h1><p>随着 Web 技术的不断升级以及 App 动态性业务需求的增多，越来越多的 Web 页面加入到了 iOS App 当中。与之对应的，首屏展示速度——这个对于移动客户端 Web 的最重要体验优化，也成为了移动客户端中 Web 业务最重要的优化方向。</p><p>这一章节更为详细的设计与实现，请移步 iOS 新闻类 App 内容页技术探索 (<a href="https://dequan1331.github.io/hybrid-page-kit.html)。" target="_blank" rel="noopener">https://dequan1331.github.io/hybrid-page-kit.html)。</a></p><h2 id="1-不同业务场景的优化策略"><a href="#1-不同业务场景的优化策略" class="headerlink" title="1. 不同业务场景的优化策略"></a>1. 不同业务场景的优化策略</h2><p>对于单纯的 Web 页面来说，业界早已有了合理的优化方向以及成熟的优化方案，而对于移动客户端中的 Web 来说，开发者在进行单一的 Web 优化同时，还可以通过优化 Web 容器以及 Web 页面中数据加载方式等多个途径做出优化。</p><p>所以对于 iOS 开发中的优化来说，就是通过 Native 和 Web 两个维度的优化关键渲染路径，保证 WebView 优先渲染完毕。由此我们梳理了常规 Web 页面整体的加载顺序，从中找出关键渲染路径，继而逐个分析、优化。</p><p><img src="youhua.jpg" alt=""></p><h2 id="2-Web-维度的优化"><a href="#2-Web-维度的优化" class="headerlink" title="2. Web 维度的优化"></a>2. Web 维度的优化</h2><h3 id="通用-Web-优化"><a href="#通用-Web-优化" class="headerlink" title="通用 Web 优化"></a>通用 Web 优化</h3><p>对于 Web 的通用优化方案，一般来说在网络层面，可以通过 DNS 和 CDN 技术减少网络延迟、通过各种 HTTP 缓存技术减少网络请求次数、通过资源压缩和合并减少请求内容等。在渲染层面可以通过精简和优化业务代码、按需加载、防止阻塞、调整加载顺序优化等等。对于这个老生常谈的问题，业内已经有十分成熟和完整的总结，例如《Best Practices for Speeding Up Your Web Site》，已经有了很好的整理和总结。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>脱离较为通用的优化，在对代码侵入宽容度较高的场景中，开发者对 Web 优化有着更为激进的做法。例如在 VasSonic 中，除了 Web 容器复用、数据模板分离、预拉取和通用的优化方式外，还通过自定义 VasSonic 标签将 HTML 页面进行划分，分段进行缓存控制，以达到更高的优化效果。</p><h2 id="3-Native-维度的优化"><a href="#3-Native-维度的优化" class="headerlink" title="3. Native 维度的优化"></a>3. Native 维度的优化</h2><h3 id="容器复用和预热"><a href="#容器复用和预热" class="headerlink" title="容器复用和预热"></a>容器复用和预热</h3><p>WKWebView 虽然 JIT 大幅优化了 JS 的执行速度，但是单纯的加载渲染 HTML，WKWebView 比 UIWebView 慢了很多。根据渲染的不同阶段分别对耗时进行测试，同时对比 UIWebView，我们发现 WKWebView 在初始化及渲染开始前的耗时较多。</p><p><img src="loadingtime.jpg" alt=""></p><p>针对这种情况，业界主流的做法就是复用 &amp; 预热。预热即时在 App 启动时创建一个 WKWebView，使其内部部分逻辑预热已提升加载速度。而复用又分为两种，较为复杂的是处理边界条件已达到真正的复用，还有一种较为 Triky 的办法就是常驻一个空 WKWebView 在内存。</p><p>HybridPageKit 提供了易于集成的完整 WKWebView 重用机制实现, 开发者可以无需关注复用细节，无缝的体验更为高效的 WKWebView。</p><h3 id="Native-并行资源请求-amp-离线包"><a href="#Native-并行资源请求-amp-离线包" class="headerlink" title="Native 并行资源请求 &amp; 离线包"></a>Native 并行资源请求 &amp; 离线包</h3><p>由于 Web 页面内请求流程不可控以及网络环境的影响，对于 Web 的加载来说，网络请求一直是优化的重点。开发者较为常用的做法是使用 Native 并行代理数据请求，替代 Web 内核的资源加载。在客户端初始化页面的同时，并行开始网络请求数据；当 Web 页面渲染时向 Native 获取其代理请求的数据。</p><p>而将并行加载和预加载做到极致的优化，就是离线包的使用。将常用的需要下载资源（HTML 模板、JS 文件、CSS 文件、占位图片）打包，App 选择合适的时机全部下载到本地，当 Web 页面渲染时向 Native 获取其数据。</p><p>通过离线包的使用，Web 页面可以并行（提前）加载页面资源，同时摆脱了网络的影响，提高了页面的加载速度和成功率。当然离线包作为资源动态更新的一个方式，合理的下载时机、增量更新、加密和校验等方面都是需要进行设计和思考的方向，后文会简单介绍。</p><h3 id="复杂-Dom-节点-Native-化实现"><a href="#复杂-Dom-节点-Native-化实现" class="headerlink" title="复杂 Dom 节点 Native 化实现"></a>复杂 Dom 节点 Native 化实现</h3><p>当并行请求资源，客户端代理数据请求的技术方案逐渐成熟时，由于 WKWebView 的限制，开发者不得不面对业务调整和适配。其中保留原有代理逻辑、采用 LocalServer 的方式最为普遍。但是由于 WKWebView 的进程间通信、LocalServer Socket 建立与连接、资源的重复编解码都影响了代理请求的效率。</p><p><img src="dom.jpg" alt=""></p><p>所以对于一些资讯类 App，通常采用 Dom 节点占位、Native 渲染实现的方式进行优化，如图片、地图、音视频等模块。这样不但能减少通信和请求的建立、提供更加友好的交互、也能并行的进行 View 的渲染和处理，同时减少 Web 页面的业务逻辑。</p><p>HybridPageKit 中就提供封装好的功能框架，开发者可以简单的替换 Dom 节点为 NativeView。</p><h3 id="按优先级划分业务逻辑"><a href="#按优先级划分业务逻辑" class="headerlink" title="按优先级划分业务逻辑"></a>按优先级划分业务逻辑</h3><p>从 App 的维度上看，一个 Web 页面从入口点击到渲染完成，或多或少都会有 Native 的业务逻辑并行执行。所以这个角度的优化关键渲染路径，就是优先保证 WebView 以及其他在首屏直接展示的 Native 模块优先渲染。所以承载 Web 页面的 Native 容器，可以根据业务逻辑的优先级，在保证 WebView 模块展示之后，选择合适的时机进行数据加载、视图渲染等。这样就能保证在 Native 的维度上，关键路径优先渲染。</p><p><img src="youxianji.jpg" alt=""></p><h2 id="4-优化整体流程"><a href="#4-优化整体流程" class="headerlink" title="4. 优化整体流程"></a>4. 优化整体流程</h2><p>所以整体上对于客户端来说，我们可以从 Native 维度（容器和数据加载）以及 Web 维度两个方向提升加载速度，按照页面的加载流程，整体的优化方向如下：</p><p><img src="liucheng.jpg" alt=""></p><h1 id="iOS-中-Web-相关延伸业务"><a href="#iOS-中-Web-相关延伸业务" class="headerlink" title="iOS 中 Web 相关延伸业务"></a>iOS 中 Web 相关延伸业务</h1><h2 id="1-模板引擎"><a href="#1-模板引擎" class="headerlink" title="1. 模板引擎"></a>1. 模板引擎</h2><p>为了达到并行加载数据以及并行处理复杂的展示逻辑，对于非直出类型的 Web 页面，绝大部分 App 都采用数据和模板分离下发的方式。而这样的技术架构，导致在客户端内需要增加替换对应 DSL 的模板标签，形成最终的 HTML 的业务逻辑。简单的字符串替换逻辑不但低效，还无法做到合理的组件化管理，以及组件合理的与 Native 交互，而模板引擎相关技术会使这种逻辑和表现分离的业务场景实现的更加简洁和优雅。</p><p>基于模板引擎与数据分离，客户端可以根据数据并行创建子业务模块，同时在子业务模块中处理和 Native 交互的部分如图片裁剪适配、点击跳转等等，生成 HTML 代码片段。之后基于模板进行替换生成完整的页面。这样不但减少了大量的字符串替换逻辑，同时业务也得到了合理拆分。</p><p><img src="template.jpg" alt=""></p><p>模板引擎的本质就是字符串的解析和替换拼接。在 Web 端不同的使用场景有很多不同语法的引擎类型，而在客户端较为流行的，有使用较为复杂的 MGTemplateEngine，它类似于 Smarty，支持部分模板逻辑。也有基于 mustache，Logic-less 的 GRMustache 可供选择。</p><h2 id="2-资源动态更新和管理"><a href="#2-资源动态更新和管理" class="headerlink" title="2. 资源动态更新和管理"></a>2. 资源动态更新和管理</h2><p>无论是离线包、本地注入的 JS、CSS 文件、以及本地化 Web 中的默认图片，目的都是通过提前下载，替换网络请求为本地读取来优化 Web 的加载体验和成功率。而对于这些资源的管理，开发者需要从下载与更新，以及 Web 中的访问这两个方面进行设计优化。</p><h3 id="下载与更新"><a href="#下载与更新" class="headerlink" title="下载与更新"></a>下载与更新</h3><p>下载与重试：对于资源或是离线包的下载，选择合适的时机、失败重载时机、失败重载次数都要根据业务灵活调整。通常为了增加成功率和及时更新，在冷启动、前后台切换、关键的操作节点，或者采用定时轮循的方式，都需要进行资源版本号或 MD5 的判断，用以触发下载逻辑。当然对于服务端来说，合理的灰度控制，也是保证业务稳定的重要途径。</p><p>签名校验：对于动态下载的资源，我们都需要将原文件的签名进行校验，防止在传输过程中被篡改。对于单项加密的办法就是双端对数据进行 MD5 的加密，之后客户端校验 MD5 是否符合预期；而双向加密可以采用 DES 等加密算法，客户端使用公钥对资源验证使用。</p><p>增量更新：为了减少资源和离线包的重复下载，业内大部分使用离线包的场景都采用了增量更新的方式。即客户端在触发请求资源时，带上本地已存在资源的标示，服务端根据标示和最新资源做对比，之后只提供新增或修改的 Patch 供客户端下载。</p><h3 id="基于-LocalServer-的访问"><a href="#基于-LocalServer-的访问" class="headerlink" title="基于 LocalServer 的访问"></a>基于 LocalServer 的访问</h3><p>在完成资源的下载与更新后，如何将 Web 请求重定向到本地，大部分 App 都依赖于 NSURLProtocol。上文提到在 WKWebView 中虽然可以使用私有函数实现（或者 iOS11+ 提供系统函数），但是仍然有许多问题。</p><p>目前业界一部分 App，都采用了集成 LocalServer 的方式，接管部分 Web 请求，从而达到访问本地资源的目的。同时集成了 LocalServer，通过将本地资源封装成 Response，利用 HTTP 的缓存技术，进一步的优化了读取的时间和性能，实现层次化的缓存结构。而使用了本地资源的 HTTP 缓存，就需要考虑缓存的控制和过期时间。通常可以通过在 URL 上增加本地文件的修改时间、或本地文件的 MD5 来确保缓存的有效性。</p><p><img src="localserver.jpg" alt=""></p><h3 id="GCDWebServer-浅析"><a href="#GCDWebServer-浅析" class="headerlink" title="GCDWebServer 浅析"></a>GCDWebServer 浅析</h3><p>排除 Socket 类型，业界流行的 Objc 版针对 HTTP 开源的 WebServer，不外乎年久失修的 CocoaHTTPServer 以及 GCDWebServer。GCDWebServer 是一个基于 GCD 的轻量级服务器，简单的四个模块 - Server / Connection / Request / Reponse，以及通过维护 LIFO 的 Handler 队列传入业务逻辑生成响应。在排除了基于 RFC 的 Request/Response 协议设计之外，关键的代码和流程如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GCDWebServer 端口绑定</span></span><br><span class="line">  bind(listeningSocket, address, length)</span><br><span class="line">  listen(listeningSocket, (<span class="keyword">int</span>)maxPendingConnections)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//GCDWebServer 绑定 Socket 端口并接收数据源</span></span><br><span class="line">  dispatch_source_t source = dispatch_source_create(DISPATCH_SOURCE_TYPE_READ, listeningSocket, <span class="number">0</span>, dispatch_get_global_queue(_dispatchQueuePriority, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">//GCDWebServer 接收数据并创建 Connection</span></span><br><span class="line">  dispatch_source_set_event_handler(source, ^&#123;</span><br><span class="line">      ...</span><br><span class="line">     GCDWebServerConnection* connection = [(GCDWebServerConnection*)[<span class="keyword">self</span>-&gt;_connectionClass alloc] initWithServer:<span class="keyword">self</span> localAddress:localAddress remoteAddress:remoteAddress socket:socket]; </span><br><span class="line"></span><br><span class="line">  <span class="comment">//GCDWebServerConnection 读取数据</span></span><br><span class="line">  dispatch_read(_socket, length, dispatch_get_global_queue(_server.dispatchQueuePriority, <span class="number">0</span>), ^(dispatch_data_t buffer, <span class="keyword">int</span> error) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//GCDWebServerConnection 处理 GCDWebServerMatchBlock 和 GCDWebServerAsyncProcessBlock</span></span><br><span class="line">  <span class="keyword">self</span>-&gt;_request = <span class="keyword">self</span>-&gt;_handler.matchBlock(requestMethod, requestURL, requestHeaders, requestPath, requestQuery);</span><br><span class="line">  ...</span><br><span class="line">  _handler.asyncProcessBlock(request, [completion <span class="keyword">copy</span>]);</span><br></pre></td></tr></table></figure><p>在 LocalServer 的使用上，也要注意端口的选择 ports used by Apple，以及前后台切换时 suspendInBackground 的设置和业务处理。</p><h2 id="3-Javascript-Open-Api"><a href="#3-Javascript-Open-Api" class="headerlink" title="3.Javascript Open Api"></a>3.Javascript Open Api</h2><p>随着 App 业务的不断发展，单纯的 Web 加载与渲染无法满足复杂的交互逻辑，如拍照、音视频、蓝牙、定位等，同时 App 内也需要统一的登录态，统一的分享逻辑以及支付逻辑等。所以针对第三方的 Web 页面，Native 需要注册相应的 Javascript 接口供 Web 使用。</p><p>对于 Api 需要提供的能力、接口设计和文档规范，不同的业务逻辑和团队代码风格会有不同的定义，微信 JS-SDK 说明文档 就是一个很好的例子。而脱离 Javascript Open Api 对外的接口设计和封装，在内部的实现上也有一些通用的关键因素，这里简单列举几个：</p><h3 id="注入方式和时机"><a href="#注入方式和时机" class="headerlink" title="注入方式和时机"></a>注入方式和时机</h3><p>对于 Javascript 文件的注入，最简单的就是将 JS 文件打包到项目中，使用 WKWebView 提供的系统函数进行注入。这种方式无需网络加载，可以合理的选择注入时机，但是无法动态的进行修改和调整。而对于这部分业务需求需要经常调整的 App 来说，也可以把文件存储到 CDN，通过模板替换或者和 Web 合作者约定，在 Web 的 HTML 中通过 URL 的方式进行加载，这种的方式虽然动态化程度较高，但是需要合作方的配合，同时对于 JS Api 也不能做到拆分的注入。</p><p>针对上面的两种方式的优点不足，一个较为合理的方式是 Javascript 文件采用本地注入的方式，同时建立资源的动态更新系统（上文）。这样一方面支持了动态更新，同时也无需合作方的配合，对于不同的业务场景也可以拆分不同的 Api 进行注入，保证安全。</p><h3 id="安全控制"><a href="#安全控制" class="headerlink" title="安全控制"></a>安全控制</h3><p>对于 Javascript Open Api 设计实现的另一个重要方面，就是安全性的控制。由于完整的 Api 需要支持 Native 登录、Cookies 等较为敏感的信息获取，同时也支持一些对 UI 和体验影响较多的功能如页面跳转、分享等，所以 App 需要一套权限分级的逻辑控制 Web 相关的接口调用，保证体验和安全。</p><p>常规的做法就是对 Javascript Open Api 建立分级的管理，不同权限的 Web 页面只能调用各自权限内的接口。客户端通过 Domain 进行分级，同时支持动态拉取权限 Domain 白名单，灵活的配置 Web 页面的权限。在此基础上 App 内部也可以通过业务逻辑的划分，在 Native 层面使用不同的容器加载页面，而容器根据业务逻辑的不同，注入不同的 JS 文件进行 Api 权限控制。</p><p><img src="safe.jpg" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/dequan1331/HybridPageKit" target="_blank" rel="noopener">https://github.com/dequan1331/HybridPageKit</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;移动开发领域近年来已经逐渐告别了野蛮生长的时期，进入了相对成熟的时代。而一直以来 Native 和 Web 的争论从未停止，通过开发者孜孜不倦的努力，Web 的效率和 Native 的体验也一直在寻求着平衡。本文聚焦 iOS 开发和 Web 开发的交叉点，希望能通过简要的介绍，帮助开发者一窥 Hybrid 和大前端的构想。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Ios" scheme="http://hackycy.github.io/categories/Ios/"/>
    
    
      <category term="Ios" scheme="http://hackycy.github.io/tags/Ios/"/>
    
  </entry>
  
  <entry>
    <title>Android Jetpack架构组件介绍</title>
    <link href="http://hackycy.github.io/2019/03/24/Android-Jetpack%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    <id>http://hackycy.github.io/2019/03/24/Android-Jetpack架构组件介绍/</id>
    <published>2019-03-24T14:42:08.000Z</published>
    <updated>2019-03-24T15:25:41.651Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>Google 为了帮助 Android 开发者更快更好地开发 App，推出了一系列组件，这些组件被打包成了一个整体，称作<code>Android Jetpack</code>，它包含的组件如下图所示：</strong><br><a id="more"></a><br><img src="jetpackintro.jpg" alt=""></p><p>老的 <code>support</code> 包被整合进了 <code>Jetpack</code>，例如上图 <code>Foundation</code> 模块的 AppCompat，整合进去之后，包名做了一下修改，全部以 <code>androidx</code> 开头。Android Studio 提供的迁移工具<code>（Refactor &gt; Migrate to AndroidX）</code>可以将源码中的旧包名替换成新的，但是如果 Maven 依赖的产物还未迁移到 <code>AndroidX</code>的话，还需要配置一个工具—— <code>Jetifier</code>，只需要在 <code>build.gradle</code> 中加上两行配置即可：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android.useAndroidX=<span class="keyword">true</span></span><br><span class="line">android.enableJetifier=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><blockquote><p>Jetfier 会在编译阶段直接修改依赖产物的字节码，简单粗暴。</p></blockquote><h1 id="架构大图"><a href="#架构大图" class="headerlink" title="架构大图"></a>架构大图</h1><p>Jetpack 不属于 Android Framework，不是 Android 开发的必需品，它只是应用层开发的一种辅助手段，帮我们解决了一些常见问题，比如版本兼容、API 易用性、生命周期管理等。其中 Architecture 部分的组件（Android Architecture Components，以下简称 AAC）组合起来形成了一套完整的架构解决方案，在没有更好的方案被发明出来之前，我们姑且把 AAC 当做 Android 架构领域的最佳实践，它的出现一定程度上避免了很多不必要的轮子。</p><p>官方给出的架构指导非常明确地表达出了每个架构组件的位置：<br><img src="jiagou.jpg" alt=""></p><p>这张图背后隐含了三大设计思想：</p><ul><li>关注点分离<code>（SOC / Separation Of Concerns）</code></li><li>数据驱动UI<code>（Reactive）</code></li><li>唯一真相源<code>（SSOC / Single Source Of Truth）</code></li></ul><p>SOC 具体到工程实践中就是分层合理，单层的职责越明确，对上下游的依赖越清晰就意味着它的结构更稳定，也<br>更可测（testable）。一个 App 从全局来看，可以划分为三部分：首先是 <code>UI Controller</code> 层，包含 <code>Activity</code> 和 <code>Fragment</code>；其次是 <code>ViewModel</code> 层，既可以做 <code>MVVM</code> 的 <code>VM</code>、<code>MVP</code> 的 <code>P</code>，也可以做 UI 的数据适配，这一层可以实现数据驱动 UI；最后是 <code>Repository</code> 层，它作为 SSOC，是一个 Facade 模式，对上层屏蔽了数据的来源，可以来自 local，也是来自 remote，数据持久化策略向上透明。</p><p>一张架构蓝图，三大设计原则，接下来深入细节，看看组件之间如何配合才能实现这个架构。</p><h1 id="Lifecycle"><a href="#Lifecycle" class="headerlink" title="Lifecycle"></a>Lifecycle</h1><p>与 React/Vue 或者 iOS 相比，Android 的生命周期都比较复杂，如果要监听生命周期，一般情况下只能覆写 Activity / Fragment 的回调方法（onCreate、onResume、onPause、onDestroy 等），样板代码少不了，可维护性也变差。</p><p>如果要对生命周期进行简化，可以抽象成一个图，点表示状态，线表示事件：</p><p><img src="androidlifecycle.jpg" alt=""></p><p>Lifecycle 负责处理这些点（states）和线（events），Activity / Fragment 是 LifecycleOwner，监听者则是 LifecycleObserver，一个非常清晰的观察者模式。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObserver</span> : <span class="type">LifecycleObserver &#123;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnLifecycleEvent(Lifecycle.Event.ON_RESUME)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">connectListener</span><span class="params">()</span></span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnLifecycleEvent(Lifecycle.Event.ON_PAUSE)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">disconnectListener</span><span class="params">()</span></span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我们的组件需要强绑定声明周期，那么只需要借助 Lifecycle 去监听生命周期的状态和事件即可，再也不用覆写各种回调方法了。下面将要讲到的 LiveData 和 ViewModel 都是 Lifecycle-Aware Components，它们都用到了 Lifecycle。</p><p>Android 生命周期管理不当带来的最大问题就是内存泄露，举一个我们经常遇到的场景：一个异步任务（比如网络请求）持有了 UI 元素的引用，只要任务没有执行完，所有与这个 UI 元素有强引用关系的元素都没法被 GC，如果这样的场景多发生几次，很可能会引起 OOM。</p><p>为了异步对象引用的问题，最早我们使用 AsyncTask，任务执行在 worker thread，执行结果在主线程上发起回调。AsyncTask 的致命缺点是不支持流式数据（stream），而且回调嵌套太深（callback hell），与软件质量衡量指标之一的 maintainable 背道而驰，不好用自然就会慢慢被淘汰。</p><p>后来我们开始使用 RxJava，响应式编程，声明式写法，再借助 retrolambda 这种 backport，即使当年 Android 只支持到 JDK7，我们依然可以利用各种 operator 写出非常简洁的代码，“filter map 我闭~着眼”。RxJava 不但完美解决了线程调度的问题，还为我们提供了 OO 之外的抽象——作用在流上的 lambda，基于函数的抽象。但是，即便完美如斯，生命周期的问题依然无法回避，因为 Java 天生的局限性，一个 lambda 无论伪造地再像高阶函数，它本质上还是一个匿名内部类，这个匿名内部类依然持有对 outer class 实例的引用。于是我们必须通过 CompositeDisposable 来管理订阅关系，发起异步操作时记录订阅，离开页面时取消订阅，仍然需要覆写 onDestory 或者 onPause 。</p><p>如果我们以 Repository 层为界把架构蓝图分为上下两部分的话，上面的部分是数据展示，下面的部分是数据获取，数据获取部分因为要请求 Remote 数据，必然会依赖到线程调度，而数据展示必然运行在 UI 线程，与生命周期强相关，这个时候就需要 LiveData 登场了。</p><h1 id="LiveData"><a href="#LiveData" class="headerlink" title="LiveData"></a>LiveData</h1><p>LiveData 也是一个观察者模型，但是它是一个与 Lifecycle 绑定了的 Subject，也就是说，只有当 UI 组件处于 ACTIVE 状态时，它的 Observer 才能收到消息，否则会自动切断订阅关系，不用再像 RxJava 那样通过 <code>CompositeDisposable</code> 来手动处理。</p><p>LiveData 的数据类似 EventBus 的 sticky event，不会被消费掉，只要有数据，它的 observer 就会收到通知。如果我们要把 LiveData 用作事件总线，还需要做一些定制，Github 上搜 SingleLiveEvent 可以找到源码实现。</p><p>我们没法直接修改 LiveData 的 value，因为它是不可变的（immutable），可变（mutable）版本是 <code>MutableLiveData</code>，通过调用 <code>setValue</code>（主线程）或 <code>postValue</code>（非主线程）可以修改它的 value。如果我们对外暴露一个 LiveData，但是不希望外部可以改变它的值，可以用如下技巧实现：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> _waveCode = MutableLiveData&lt;String&gt;()</span><br><span class="line"><span class="keyword">val</span> waveCode: LiveData&lt;String&gt; = _waveCode</span><br></pre></td></tr></table></figure><blockquote><p>内部用 MutableLiveData ，可以修改值，对外暴露成 LiveData 类型，只能获取值，不能修改值</p></blockquote><p>LiveData 有一个实现了中介者模式的子类 —— MediatorLiveData，它可以把多个 LiveData 整合成一个，只要任何一个 LiveData 有数据变化，它的观察者就会收到消息：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> liveData1 = ...</span><br><span class="line"><span class="keyword">val</span> liveData2 = ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> liveDataMerger = MediatorLiveData&lt;&gt;();</span><br><span class="line">liveDataMerger.addSource(liveData1) &#123; value -&gt; liveDataMerger.setValue(value))</span><br><span class="line">liveDataMerger.addSource(liveData2) &#123; value -&gt; liveDataMerger.setValue(value))</span><br></pre></td></tr></table></figure><p>综上，我们汇总一下 LiveData 的使用场景：</p><ul><li>LiveData - immutable 版本</li><li>MutableLiveData - mutable 版本</li><li>MediatorLiveData - 可汇总多个数据源</li><li>SingleLiveEvent - 事件总线</li></ul><p>LiveData 只存储最新的数据，虽然用法类似 RxJava2 的 Flowable，但是它不支持背压（backpressure），所以不是一个流（stream），利用 LiveDataReactiveStreams 我们可以实现 Flowable 和 LiveData 的互换。</p><p>如果把异步获取到的数据封装成 Flowable，通过 <code>toLiveData</code> 方法转换成 LiveData，既利用了 RxJava 的线程模型，还消除了 Flowable 与 UI Controller 生命周期的耦合关系，借助 Data Binding 再把 LiveData 绑定到 xml UI 元素上，数据驱动 UI，妥妥的响应式。于是一幅如下模样的数据流向图就被勾勒了出来：</p><p><img src="livedata.jpg" alt=""></p><p>图中右上角的 Local Data 是 AAC 提供的另一个强大武器 —— ORM 框架 Room。</p><h1 id="Room"><a href="#Room" class="headerlink" title="Room"></a>Room</h1><p>数据库作为数据持久层，其重要性不言而喻，当设备处于离线状态时，数据库可用于缓存数据；当多个 App 需要共享数据时，数据库可以作为数据源，但是基于原生 API 徒手写 CRUD 实在是痛苦，虽然 Github 上出现了不少 ORM 框架，但是它们的易用性也不敢让人恭维，直到 Room 出来之后，Android 程序员终于可以像 mybatis 那样轻松地操纵数据库了。</p><p>Room 是 SQLite 之上的应用抽象层，而 SQLite 是一个位于 Android Framework 层的内存型数据库。虽然 Realm 也是一个优秀的数据库，但是它并没有内置于 Android 系统，所会增大 apk 的体积，使用 Room 则没有这方面烦恼。</p><p>Room 的结构抽象得非常简单，数据对象（表名 + 字段）用 <code>@Entity</code> 注解来定义，数据访问用 @Dao 来注解，db 本身则用 <code>@Database</code> 来定义，如果要支持复杂类型，可以定义 <code>@TypeConverters</code>，然后在编译阶段，apt 会根据这些注解生成代码。Room 与 App 其他部分的交互如下图所示：</p><p><img src="room.jpg" alt=""></p><p>Entity 是一个数据实体，表示一条记录，它的用法如下：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity(tableName = <span class="meta-string">"actors"</span>)</span></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Actor</span></span>(</span><br><span class="line">        <span class="meta">@PrimaryKey</span> <span class="meta">@ColumnInfo(name = <span class="meta-string">"id"</span>)</span></span><br><span class="line">        <span class="keyword">val</span> actorId: String,</span><br><span class="line">        <span class="keyword">val</span> name: String,</span><br><span class="line">        <span class="keyword">val</span> birthday: Date?,</span><br><span class="line">        <span class="keyword">val</span> pictureUrl: String</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>Actor</code> 是一个用 <code>@Entity</code> 注解的 data class，它会生成一个名字是 <code>actors</code> 的表，注意到有一个字段是 <code>@Date?</code> ，但是 SQLite 本身不支持这种复杂类型（complex type），所以我们还需要写一个可以转换成基础类型的转换器：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Converters</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TypeConverter</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">timestampToDate</span><span class="params">(value: <span class="type">Long</span>?)</span></span> = value?.let &#123; Date(it) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TypeConverter</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">dateToTimestamp</span><span class="params">(date: <span class="type">Date</span>?)</span></span> = date?.time</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转换器通过 <code>@TypeConverters</code> 可作用于 <code>class</code>、<code>field</code>、<code>method</code>、<code>parameter</code>，分别代表不同的作用域。比如作用在 <code>@Database</code> 类的上，那么它的作用域就是 db 中出现的所有 <code>@Dao</code> 和 <code>@Entity</code>。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Database(entities = [Actor::class], version = 1, exportSchema = false)</span></span><br><span class="line"><span class="meta">@TypeConverters(Converters::class)</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AppDatabase</span> : <span class="type">RoomDatabase</span></span>() &#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">actorDao</span><span class="params">()</span></span>: ActorDao</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@Query</code> 中的 SQL 语句可以直接引用方法参数，而且它的返回值可以是 <code>LiveData</code> 类型，也支持 <code>Flowable</code> 类型，也就是说，Room 原生支持响应式，这是对数据驱动最有利的支持，也是 Room 区别于其他 ORM 框架的显著特征。</p><p>至此，我们可以确定，无论数据来自 Remote 还是来自本地 DB，架构蓝图中的 Repository 对 ViewModel 提供的数据可以永远是 LiveData 类型，接下来我们看一下 ViewModel 的妙用。</p><h1 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h1><p>ViewModel 是一个多面手，因为它的生命周期比较长，可以跨越因为配置变动（configuration changed，比如屏幕翻转）引起的 Activity 重建，因此 ViewModel 不能持有对 Activity / Fragment 的引用。</p><p><img src="viewmodel.jpg" alt=""></p><p>如果 ViewModel 中要用到 context 怎么办呢？没关系，框架提供了一个 ViewModel 的子类 <code>AndroidViewModel</code> ，它在构造时需要传入 <code>Application</code> 实例。</p><p>既然 ViewModel 与 UI Controller 无关，当然可以用作 MVP 的 Presenter 层提供 LiveData 给 View 层，因为 LiveData 绑定了 Lifecycle，所以不存在内存泄露的问题。除此之外，ViewModel 也可以用做 MVVM 模式的 VM 层，利用 Data Binding 直接把 ViewModel 的 LiveData 属性绑定到 xml 元素上，xml 中声明式的写法避免了很多样板代码，数据驱动 UI 的最后一步，我们只需要关注数据的变化即可，UI 的状态会自动发生变化。</p><p>ViewModel 配合 Data Binding 的用法与 React 非常相似，ViewModel 实例相当于 state，xml 文件就好比 <code>render</code> 函数，只要 <code>state</code> 数据发生变化，<code>render</code> 就会重新渲染 UI，但是 data binding 还有更强大的一点，它支持双向绑定。举个例子，UI 需要展示一个评论框，允许展示评论，也允许用户修改，那么我们可以直接把 <code>EditText</code> 双向绑定到一个 LiveData 之上，只要用户有输入，我们就可以收到通知，完全不需要通过 Kotlin/Java 来操控 UI：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextInputEditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"@=&#123;viewModel.commentText&#125;"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>注意，如果要在 xml 中使用 LiveData，需要把 lifecycle owner 赋给 binding：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> binding: MainBinding = DataBindingUtil.setContentView(<span class="keyword">this</span>, R.layout.main)</span><br><span class="line"><span class="comment">// Specify the current activity as the lifecycle owner.</span></span><br><span class="line">binding.setLifecycleOwner(<span class="keyword">this</span>)</span><br></pre></td></tr></table></figure><p>因为 ViewModel 拿到的数据是 Repository 给的，可能不适用于 UI 元素，所以 ViewModel 还承担了数据适配的工作，有时候我们需要汇总 repository 的多个返回值一次性给到 UI，那么就可以使用 LiveData 的“操作符” <code>Transformations.switchMap</code>，用法可以认为等同于 Rx 的 flatMap；如果只想对 LiveData 的 value 做一些映射，可以使用 <code>Transformations.map</code>，目前 Transformations 只有这两个操作符，因为不管 Kotlin 还是 Java8，都提供了很多声明式的操作符，对流的支持都比较友好，而 <code>LiveData</code>本身不是一个流，所以这两个操作符足矣。</p><p>除了数据适配之外，ViewModel 还有一个强大的用法 —— Fragment 之间共享数据，这样 ViewModel 又扮演了 FLUX 模式中的 store 这一角色，是多个页面（fragment）之间唯一的数据出口。</p><p><img src="viewmodel2.jpg" alt=""></p><p>ViewModel 的用法也非常简单，通过 <code>ViewModelProviders.of</code> 可以获取 ViewModel 实例：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> viewModel = ViewModelProviders.of(requireActivity(), factory)</span><br><span class="line">        .<span class="keyword">get</span>(ActorViewModel::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br></pre></td></tr></table></figure><p>一通操作猛如虎之后，UI controller 层变得薄如蝉翼，它只做了一件事情，把数据从左手（ViewModel）倒给了右手（使用了 Data Binding 的 xml）。</p><p>如果把 ViewModel 作为 SSOC（唯一真相源），多个 Fragment 之间共享数据，再利用 SingleLiveEvent 做总线，一个 Activity 配多个 Fragment 的写法就避免了 Activity 之间通过 Intent 传递数据的繁琐。但是 Fragment 的堆栈管理一直是一个让人头疼的问题，AAC 的 Navigation 不但完美解决了这个问题，而且还提供可视化的路由，只需拖拽一下就能生成类型安全的跳转逻辑。</p><h1 id="Navigation"><a href="#Navigation" class="headerlink" title="Navigation"></a>Navigation</h1><p>Navigation 用一个图（graph）来表示页面间的路由关系，图的节点（node）表示页面，边（edge）表示跳转关系。例如下图 8 个页面的跳转关系，一目了然：</p><p><img src="navigation.jpg" alt=""></p><p>页面与页面之间的连线叫 action，它可以配置进离场动画（Animations），也可以配置出栈行为（Pop Behavior），还支持 Single Top 的启动选项（Launch Options）。进离场动画和启动选项很好理解，出栈行为是一个比较强大的功能，action 箭头所指的方向表示目标页面入栈，箭头的反方向则表示目标页面出栈，而出栈的行为在 Navigation 编辑器中完全可控，我们可以指定要出栈到哪个页面，甚至可以指定目标页面是否也需要出栈：</p><p><img src="navigation2.jpg" alt=""></p><p>针对页面节点，还可以定义它要接收的参数（arguments），支持默认值，从此 Fragment 之间的参数传递变得非常直观，非常安全。</p><p>看一下具体用法，首先在跳转发起页面，通过 apt 生成的跳转函数传入参数：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> actorId = getSelectedActorId()</span><br><span class="line"><span class="keyword">val</span> direction = ActorListFragmentDirections.showDetail(actorId)</span><br><span class="line">findNavController().navigate(direction)</span><br></pre></td></tr></table></figure><p>然后利用目标页面生成的 <code>*Args</code> 获取参数：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后利用目标页面生成的 *Args 获取参数：</span><br></pre></td></tr></table></figure><blockquote><p>这里的 navArgs 是一个扩展函数，利用了 Kotlin 的 ReadWriteProperty。</p></blockquote><p>几行代码就搞定了页面之间的跳转，而且还是可视化！从没有想过 Android 的页面跳转竟会变得如何简单，但是 Navigation 的方案并不是原创，iOS 的 Storyboard 很早就支持拖拽生成路由。当年 Android 推出 ConstraintLayout 之时，我们都认为是参考了 Storyboard 的页面拖拽，现在再配上 Navigation，从页面到跳转，一个完整的拖拽链路就形成了。平台虽然有差异化，但是使用场景一致的前提下，解决方案也就殊途同归了。</p><p>了解完了与生命周期有关的组件，接下来我们来看细节。</p><h1 id="Paging"><a href="#Paging" class="headerlink" title="Paging"></a>Paging</h1><p>UI 没有办法一次性展示所有的数据，端上的系统资源（电量、内存）也有限制，不可能把所有数据都加载到内存中；而且大批量请求数据不但浪费带宽，在某些网络情况（弱网、慢网）下还会导致请求失败，所以分页是很多情景下的刚需。Github 上有各式各样的解决方案，这一次，Google 直接推出了官方的分页组件——Paging。</p><p>Paging 将分页逻辑拆解为三部分：</p><ul><li>数据源 <code>DataSource</code></li><li>数据块 <code>PagedList</code> </li><li>数据展示 <code>PagedListAdapter</code></li></ul><p>DataSource 的数据来源于后端服务或者本地数据库，并且用三个子类来表示三种分页模式：</p><ul><li><strong>PageKeyedDataSource</strong> - 单页数据以 page key 为标识，例如当前页的 Response 中包含了下一页的 url，这个 url 就是 page key。</li><li><strong>ItemKeyedDataSource</strong> - 单页数据以 item key 为标识，比如下一页的请求要带当前页最后一个 item 的 id，这个 itemId 就是 item key。</li><li><strong>PositionalDataSource</strong> - 单页数据以位置为标识，这种模式比较常见，Room 只支持这一种，因为数据库查询以 OFFSET 和 LIMIT 做分页。</li></ul><p>PageKeyedDataSource 和 ItemKeyedDataSource 适用于内存型数据，比如直接从后端获取后需要展示的数据。PositionalDataSource 适用于本地 Room 数据或者使用 Room 做缓存的 Cache 数据。</p><p>数据流向的关系图如下所示：</p><p><img src="paging.jpg" alt=""></p><blockquote><p><code>LivePagedListBuilder</code> 利用 <code>DataSource.Factory</code> 和 <code>PageList.Config</code> 创建 <code>LiveData</code>，<code>UI Controller</code> 拿到数据之后交给 <code>PagedListAdapter</code> 展示到 <code>RecyclerView</code>。</p></blockquote><p>上图表达了数据的流向，如果从 UI 层往回看，页面展示的数据存储在 PagedList 中，PagedList 只是 DataSource 的数据块（chunk），当 PagedList 需要更多数据时，DataSource 就会给更多，当 DataSource 一无所有时便会触发 <code>BoundaryCallback</code> 获取更多数据，直到数据全部展示完毕。</p><p>LivePagedListBuilder 会将 <code>PagedList</code> 包装成 <code>LiveData&lt;PagedList&gt;</code> 给到下游，它在整个数据交互链路中的位置如下图所示：</p><p><img src="paging2.jpg" alt=""></p><blockquote><p>Repository 拿到 Dao 的 DataSource.Factory 之后，调用它的 toLiveData 方法并传入 PagedList.Config，然后生成一个分页的 LiveData<pagedlist> 交给 ViewModel 层。</pagedlist></p></blockquote><p>Paging 加上生命周期相关的架构组件解决了数据存储、数据流转和数据展示的问题。除此之外，AAC 还包括一个强大的异步任务执行器 WorkManager，它解决了任务执行的 <strong>可靠性</strong>，无论 App 退出还是设备重启，交给 WorkerManager 的任务都会被执行。</p><h1 id="WorkManager"><a href="#WorkManager" class="headerlink" title="WorkManager"></a>WorkManager</h1><p>WorkManager 虽然解决了任务执行可靠性的问题，但是它无法精确控制任务的执行时间，因为 WorkManager 要根据 OS 资源来选择执行任务。Android 自身提供了很多方案来解决后台任务执行的问题，可以根据下图的决策路径选择不同的组件：</p><p><img src="workmanager.jpg" alt=""></p><p>WorkManager 整体上可分为四部分：任务类型、任务构建、任务监控和任务控制。</p><h2 id="一、任务类型"><a href="#一、任务类型" class="headerlink" title="一、任务类型"></a>一、任务类型</h2><p>WorkManager 提供了一次性任务和周期性任务两种任务类型：</p><ul><li>OneTimeWorkRequest —— 一次性任务</li><li>PeriodicTimeWorkRequest —— 周期性任务</li></ul><h2 id="二、任务构建"><a href="#二、任务构建" class="headerlink" title="二、任务构建"></a>二、任务构建</h2><p>一是执行条件，二是执行顺序。</p><ul><li><code>Constraints</code> —— 通过 <code>Constraints.Builder</code>构建任务执行的条件（网络类型、电量、设备空间等）</li><li>WorkContinuation —— 可以指定任务的执行顺序，例如可以按照 PERT 图的顺序执行任务：<br><img src="workmanager2.jpg" alt=""></li></ul><h2 id="三、任务监控"><a href="#三、任务监控" class="headerlink" title="三、任务监控"></a>三、任务监控</h2><p>通过回调来获知任务的当前状态：</p><p><img src="workmanager3.jpg" alt=""></p><h2 id="四、任务控制"><a href="#四、任务控制" class="headerlink" title="四、任务控制"></a>四、任务控制</h2><p>包括加入队列，取消任务，其中 UniqueWork 提供了多种加入队列的策略（REPLACE、KEEP、APPEND）：</p><ul><li>cancelWorkById(UUID) —— 通过 ID 取消单个任务</li><li>cancelAllWorkByTag(String) —— 通过 Tag 取消所有任务</li><li>cancelUniqueWork(String) —— 通过名字取消唯一任务</li></ul><p>除此之外，WorkerManager 还提供了四种不同线程模型的 Worker：</p><ul><li>Worker —— 基于默认后台线程</li><li>CoroutineWorker —— 基于 Kotlin 的协程</li><li>RxWorker —— 基于 RxJava2</li><li>ListenableWorker —— 基于回调的异步</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Google 官方架构组件 AAC 为我们提供了太多通用问题的解决方案，使用场景包括数据持久化、异步任务调度、生命周期管理，UI 分页、UI 导航，当然还有强大的 MVVM 框架 Data Binding，这些架构组件不但使代码变得清晰易读，而且独立于 Android SDK 向下兼容，AAC 使我们更加聚焦产品，专注于解决问题，而不是花太多的时间重复造轮子。</p><h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p><a href="https://developer.android.google.cn/jetpack/androidx/migrate" target="_blank" rel="noopener">https://developer.android.google.cn/jetpack/androidx/migrate</a></p><p><a href="https://developer.android.google.cn/jetpack/" target="_blank" rel="noopener">https://developer.android.google.cn/jetpack/</a></p><p><a href="https://developer.android.google.cn/jetpack/docs/guide" target="_blank" rel="noopener">https://developer.android.google.cn/jetpack/docs/guide</a></p><p><a href="https://proandroiddev.com/advanced-data-binding-binding-to-livedata-one-and-two-way-binding-dae1cd68530f" target="_blank" rel="noopener">https://proandroiddev.com/advanced-data-binding-binding-to-livedata-one-and-two-way-binding-dae1cd68530f</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Google 为了帮助 Android 开发者更快更好地开发 App，推出了一系列组件，这些组件被打包成了一个整体，称作&lt;code&gt;Android Jetpack&lt;/code&gt;，它包含的组件如下图所示：&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Mysql优化小技巧</title>
    <link href="http://hackycy.github.io/2019/03/24/Mysql%E4%BC%98%E5%8C%96%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://hackycy.github.io/2019/03/24/Mysql优化小技巧/</id>
    <published>2019-03-24T13:52:13.000Z</published>
    <updated>2019-04-15T03:17:04.120Z</updated>
    
    <content type="html"><![CDATA[<p>程序嵌入SQL语句优化小技巧</p><a id="more"></a><h1 id="1、比较运算符能用’-’就不用’-lt-gt-’"><a href="#1、比较运算符能用’-’就不用’-lt-gt-’" class="headerlink" title="1、比较运算符能用’=’就不用’&lt;&gt;’"></a>1、比较运算符能用’=’就不用’&lt;&gt;’</h1><p>‘=’增加了索引的使用几率</p><h1 id="2、明知只有一条查询结果，那请使用’LIMIT-1’"><a href="#2、明知只有一条查询结果，那请使用’LIMIT-1’" class="headerlink" title="2、明知只有一条查询结果，那请使用’LIMIT 1’"></a>2、明知只有一条查询结果，那请使用’LIMIT 1’</h1><p>‘LIMIT 1’可以避免全表扫描，找到对应结果就不会再继续扫描了</p><h1 id="3、为列选择合适的数据类型"><a href="#3、为列选择合适的数据类型" class="headerlink" title="3、为列选择合适的数据类型"></a>3、为列选择合适的数据类型</h1><p>能用<code>TINYINT</code>就不用<code>SMALLLINT</code>,能用<code>SMALLINT</code>就不用<code>INT</code>，内存消耗越小越好</p><h1 id="4、将大的DELETE，UPDATE或者INSERT查询变成多个小查询"><a href="#4、将大的DELETE，UPDATE或者INSERT查询变成多个小查询" class="headerlink" title="4、将大的DELETE，UPDATE或者INSERT查询变成多个小查询"></a>4、将大的DELETE，UPDATE或者INSERT查询变成多个小查询</h1><p>为了达到更好的性能以及更好的数据控制，可以将它们变成多个小查询</p><p><img src="moresql.png" alt=""></p><h1 id="5、如果结果集允许重复的话，使用UNION-ALL代替UNION"><a href="#5、如果结果集允许重复的话，使用UNION-ALL代替UNION" class="headerlink" title="5、如果结果集允许重复的话，使用UNION ALL代替UNION"></a>5、如果结果集允许重复的话，使用UNION ALL代替UNION</h1><p>因为UNION ALL不去重复，效率高于UNION</p><h1 id="6、为获得相同结果集的多次执行，请保持SQL语句前后一致"><a href="#6、为获得相同结果集的多次执行，请保持SQL语句前后一致" class="headerlink" title="6、为获得相同结果集的多次执行，请保持SQL语句前后一致"></a>6、为获得相同结果集的多次执行，请保持SQL语句前后一致</h1><p>目的是为了充分利用查询缓冲，比如根据地域或者产品id查询产品价格，第一次使用了<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> price <span class="keyword">FROM</span> <span class="keyword">order</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">123456</span> <span class="keyword">and</span> region = <span class="string">'BEIJING'</span>;</span><br></pre></td></tr></table></figure></p><p>那么第二次同样的查询，请保持以上语句的一致性，比如不要将where语句里面的id和region位置调换顺序。</p><h1 id="7、避免使用’SELECT-’"><a href="#7、避免使用’SELECT-’" class="headerlink" title="7、避免使用’SELECT *’"></a>7、避免使用’SELECT *’</h1><p>如果不查询表中所有的列，尽量避免使用<code>SELECT *</code>，因为这样会进行全表扫描，不能有效利用索引，增大了数据库服务器的负担，以及它与应用程序客户端之间的网络IO开销。</p><h1 id="8、WHERE子句里面的列尽量被索引"><a href="#8、WHERE子句里面的列尽量被索引" class="headerlink" title="8、WHERE子句里面的列尽量被索引"></a>8、WHERE子句里面的列尽量被索引</h1><p>只是’尽量’，并不是说所有的列。因地制宜，根据实际情况进行调整，索引太多也会降低性能。</p><h1 id="9、JOIN子句里面的列尽量被索引"><a href="#9、JOIN子句里面的列尽量被索引" class="headerlink" title="9、JOIN子句里面的列尽量被索引"></a>9、JOIN子句里面的列尽量被索引</h1><p>同样只是’尽量’</p><h1 id="10、ORDER-BY的列尽量被索引"><a href="#10、ORDER-BY的列尽量被索引" class="headerlink" title="10、ORDER BY的列尽量被索引"></a>10、ORDER BY的列尽量被索引</h1><p>性能会更好</p><h1 id="11、使用LIMIT实现分页逻辑"><a href="#11、使用LIMIT实现分页逻辑" class="headerlink" title="11、使用LIMIT实现分页逻辑"></a>11、使用LIMIT实现分页逻辑</h1><p>提高性能，减少不必要数据库和应用的网络传输</p><h1 id="12、使用EXPLAIN关键字去查看执行计划"><a href="#12、使用EXPLAIN关键字去查看执行计划" class="headerlink" title="12、使用EXPLAIN关键字去查看执行计划"></a>12、使用EXPLAIN关键字去查看执行计划</h1><p>EXPLAIN可以检查索引使用情况以及扫描的行。</p><h1 id="13、不要在MySQL中使用UTF-8"><a href="#13、不要在MySQL中使用UTF-8" class="headerlink" title="13、不要在MySQL中使用UTF-8"></a>13、不要在MySQL中使用UTF-8</h1><p>1.MySQL的“utf8mb4”是真正的“UTF-8”。<br>2.MySQL的“utf8”是一种“专属的编码”，它能够编码的Unicode字符并不多。</p><p>使用“utf8”的MySQL和MariaDB用户都应该改用“utf8mb4”，永远都不要再使用“utf8”。</p><p>原理介绍：<a href="https://mp.weixin.qq.com/s/dN0OMvcUT--MQdsRVwDtCA" target="_blank" rel="noopener">链接</a></p><h1 id="more"><a href="#more" class="headerlink" title="more"></a>more</h1><p>SQL调优方法还有很多种，同样的查询结果可以有很多种查询方式，最好的方法就是测试！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;程序嵌入SQL语句优化小技巧&lt;/p&gt;
    
    </summary>
    
      <category term="DBA" scheme="http://hackycy.github.io/categories/DBA/"/>
    
    
      <category term="Mysql" scheme="http://hackycy.github.io/tags/Mysql/"/>
    
  </entry>
  
</feed>
