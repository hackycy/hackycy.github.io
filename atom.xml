<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小小源Bの博客</title>
  
  <subtitle>zj&amp;ycy</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hackycy.github.io/"/>
  <updated>2019-05-28T03:43:11.531Z</updated>
  <id>http://hackycy.github.io/</id>
  
  <author>
    <name>hackycy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android UI适配指南</title>
    <link href="http://hackycy.github.io/2019/05/22/Android-UI%E9%80%82%E9%85%8D%E6%8C%87%E5%8D%97/"/>
    <id>http://hackycy.github.io/2019/05/22/Android-UI适配指南/</id>
    <published>2019-05-22T08:30:36.000Z</published>
    <updated>2019-05-28T03:43:11.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在Android开发中，由于Android碎片化严重，屏幕分辨率千奇百怪，而想要在各种分辨率的设备上显示基本一致的效果，适配成本越来越高。虽然Android官方提供了dp单位来适配，但其在各种奇怪分辨率下表现却不尽如人意。</p><a id="more"></a><p><img src="fenbutu.png" alt=""></p><p><strong>Android屏幕分辨率分布图</strong></p><p><img src="afenbutu.png" alt=""></p><p><strong>对比IOS屏幕分辨率分布图</strong></p><p><img src="ifenbutu.png" alt=""></p><p>所以Android的屏幕适配已经为重中之重的话题。</p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>屏幕尺寸、屏幕分辨率、屏幕像素密度</p><p>屏幕尺寸：屏幕对角线长度，单位是英寸，我们常说的多少多少寸，比如4.7存手机、5.7存手机，指的就是这个。</p><p>屏幕分辨率：如 1920×1080，是指在手机屏幕的像素点的个数，单位是px，1px = 1 像素点，一般是纵向像素 × 横向像素，意味着高有 1920 个像素点，宽有 1080 个像素点。</p><p>屏幕像素密度：是指每英寸上的像素点数，单位是 dpi（dotper inch）。像素密度和屏幕尺寸和屏幕分辨率有关，它是由对角线的像素点数除以屏幕的大小得到的，关系如下：</p><p><img src="dpicalc.png" alt=""></p><p>单一变化条件下，屏幕尺寸越小、分辨率越高，像素密度越大，反之越小。</p><blockquote><p>与PPI的概念和计算方式是相同的</p></blockquote><ul><li><p>dp：是Android 特有的，意为密度无关像素，Google 发布的 BASELINE（基准线）为 160，以此为基准。</p></li><li><p>dip：Density Independent Pixels，同dp一个意思，目前废弃了，一般都写dp。</p></li><li><p>dpi：像素密度是屏幕上单位面积内的像素数，称为dpi（每英寸的点数）。 它与分辨率不同，后者是屏幕上像素的总数。</p></li><li><p>sp：Scale-IndependentPixels的缩写，可以根据文字大小首选项自动进行缩放。Google推荐我们使用12sp以上的大小，通常可以使用12sp，14sp，18sp，22sp，为避免精度损失，建议最好不要使用奇数和小数。</p></li><li><p>px：就是我们常说的像素</p></li><li><p>density：就这个单词本身直接翻译的意思而言，其也代表“密度”。但需要注意的是，在Android中，其实并非如此。注意我们这里指的是，通过代码<code>context.getResources().getDisplayMetrics().density</code>获取的“density”值。而通过该方法获取到的该值，实际上是等价于“dpi / 160”的一个结果值。</p></li></ul><h1 id="dp直接适配"><a href="#dp直接适配" class="headerlink" title="dp直接适配"></a>dp直接适配</h1><p>dp的概念是谷歌官方提出的适配的一种方式。</p><p>在android中的dp在渲染前会将dp转为px，计算公式：</p><ul><li>px = density * dp;</li><li>density = dpi / 160;</li><li>px = dp * (dpi / 160);</li></ul><p>而dpi是根据屏幕真实的分辨率和尺寸来计算的，每个设备都可能不一样的。</p><p>而因为Android碎片化非常严重的原因就导致了dpi的值非常乱，根本没有规律可循，即使dp适配可以做到80%的适配，但是效果还是差强人意。</p><p>我们用案例来看一下对比：</p><p><img src="avd.png" alt=""></p><p>这里创建了两个个模拟器，同样的分辨率<code>480 * 800</code>两种类别的设备，同样的放一张图片，布局代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/iv_adapterimg"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/img"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"300dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="p480dpshipei.png" alt=""></p><p>同样的代码，设置为300dp，但是两台机型却表现得不尽人意。这里就要涉及到上面一些公式的概念进行换算了，因为最终都会转换成px，我们来换算一下：</p><p><strong>480*800 5.1寸机型下</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpi = √(480^2 * 800^2)/ 5.1 = 182.93</span><br><span class="line">px = 300 * (183 / 160) = 342</span><br></pre></td></tr></table></figure><p>其余相同计算方式，对照表格：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">480*800/5.1</th><th style="text-align:center">480*800/4</th></tr></thead><tbody><tr><td style="text-align:center">dpi</td><td style="text-align:center">182.93</td><td style="text-align:center">233.24</td></tr><tr><td style="text-align:center">density</td><td style="text-align:center">1.14</td><td style="text-align:center">1.46</td></tr><tr><td style="text-align:center">px</td><td style="text-align:center">342</td><td style="text-align:center">438</td></tr></tbody></table><blockquote><p>上述计算结果均为保留小数点后两位</p></blockquote><p>但是计算的结果真的是这样吗，我们使用代码来获取一下控件的高和宽</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ImageView iv_adapterimg;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        iv_adapterimg = findViewById(R.id.iv_adapterimg);</span><br><span class="line"></span><br><span class="line">        iv_adapterimg.getViewTreeObserver().addOnPreDrawListener(<span class="keyword">new</span> ViewTreeObserver.OnPreDrawListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPreDraw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Log.e(<span class="string">"logImageViewInfo"</span>, <span class="string">"Height: "</span> + iv_adapterimg.getHeight() + <span class="string">" / Width: "</span> + iv_adapterimg.getWidth());</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        logDisplayInfo();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">logDisplayInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String TAG = <span class="string">"logDisplayInfo"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通常我们在使用DisplayMetrics时，都是直接获取内部变量来使用。所以下面直接列出各个内部变量。</span></span><br><span class="line"></span><br><span class="line">        DisplayMetrics dm = <span class="keyword">new</span> DisplayMetrics();</span><br><span class="line">        getWindowManager().getDefaultDisplay().getMetrics(dm);</span><br><span class="line"></span><br><span class="line">        Log.e(TAG, <span class="string">"当前设备的系统dpi: "</span> + dm.densityDpi);</span><br><span class="line">        Log.e(TAG, <span class="string">"当前设备的density: "</span> + dm.density);</span><br><span class="line">        Log.e(TAG, <span class="string">"物理屏幕上 Y 轴方向每英寸的像素: "</span> + dm.ydpi);</span><br><span class="line">        Log.e(TAG, <span class="string">"物理屏幕上 X 轴方向每英寸的像素: "</span> + dm.xdpi);</span><br><span class="line">        Log.e(TAG, <span class="string">"屏幕高度的像素数量: "</span> + dm.heightPixels);</span><br><span class="line">        Log.e(TAG, <span class="string">"屏幕宽度的像素数量: "</span> + dm.widthPixels);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们查看一下Log输出：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">480*800/5.1</th><th style="text-align:center">480*800/4</th></tr></thead><tbody><tr><td style="text-align:center">Imageview height</td><td style="text-align:center">300</td><td style="text-align:center">450</td></tr><tr><td style="text-align:center">imageview width</td><td style="text-align:center">300</td><td style="text-align:center">450</td></tr><tr><td style="text-align:center">density</td><td style="text-align:center">1.0</td><td style="text-align:center">1.5</td></tr><tr><td style="text-align:center">dpi</td><td style="text-align:center">160</td><td style="text-align:center">240</td></tr><tr><td style="text-align:center">ydpi</td><td style="text-align:center">160.0</td><td style="text-align:center">240.0</td></tr><tr><td style="text-align:center">xdpi</td><td style="text-align:center">160.0</td><td style="text-align:center">240.0</td></tr><tr><td style="text-align:center">heightPixels</td><td style="text-align:center">800</td><td style="text-align:center">800</td></tr><tr><td style="text-align:center">widthPixels</td><td style="text-align:center">480</td><td style="text-align:center">480</td></tr></tbody></table><p>那么这为什么和我们计算的不一样呢，这里就要设计到系统dpi和物理dpi了，我们需要深究到其源码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//platform_frameworks_base/core/java/android/util/DisplayMetrics.java</span></span><br><span class="line"><span class="keyword">package</span> android.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.UnsupportedAppUsage;</span><br><span class="line"><span class="keyword">import</span> android.os.SystemProperties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A structure describing general information about a display, such as its</span></span><br><span class="line"><span class="comment"> * size, density, and font scaling.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;To access the DisplayMetrics members, initialize an object like this:&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt; DisplayMetrics metrics = new DisplayMetrics();</span></span><br><span class="line"><span class="comment"> * getWindowManager().getDefaultDisplay().getMetrics(metrics);&lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DisplayMetrics</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The device's current density.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * This value reflects any changes made to the device density. To obtain</span></span><br><span class="line"><span class="comment">     * the device's stable density, use &#123;<span class="doctag">@link</span> #DENSITY_DEVICE_STABLE&#125;.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span> This value should not be used.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@deprecated</span> Use &#123;<span class="doctag">@link</span> #DENSITY_DEVICE_STABLE&#125; to obtain the stable</span></span><br><span class="line"><span class="comment">     *             device density or &#123;<span class="doctag">@link</span> #densityDpi&#125; to obtain the current</span></span><br><span class="line"><span class="comment">     *             density for a specific display.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> DENSITY_DEVICE = getDeviceDensity();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The device's stable density.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * This value is constant at run time and may not reflect the current</span></span><br><span class="line"><span class="comment">     * display density. To obtain the current density for a specific display,</span></span><br><span class="line"><span class="comment">     * use &#123;<span class="doctag">@link</span> #densityDpi&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_DEVICE_STABLE = getDeviceDensity();</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getDeviceDensity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// qemu.sf.lcd_density can be used to override ro.sf.lcd_density</span></span><br><span class="line">        <span class="comment">// when running in the emulator, allowing for dynamic configurations.</span></span><br><span class="line">        <span class="comment">// The reason for this is that ro.sf.lcd_density is write-once and is</span></span><br><span class="line">        <span class="comment">// set by the init process when it parses build.prop before anything else.</span></span><br><span class="line">        <span class="keyword">return</span> SystemProperties.getInt(<span class="string">"qemu.sf.lcd_density"</span>,</span><br><span class="line">                SystemProperties.getInt(<span class="string">"ro.sf.lcd_density"</span>, DENSITY_DEFAULT));</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>深究其方法是一个native方法，在代码注释中提到的init的方法，深究源头</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> DisplayHardware::init(<span class="keyword">uint32_t</span> dpy)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">///....省略</span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">/* Read density from build-specific ro.sf.lcd_density property</span></span><br><span class="line"><span class="comment">     * except if it is overridden by qemu.sf.lcd_density.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (property_get(<span class="string">"qemu.sf.lcd_density"</span>, property, <span class="literal">NULL</span>) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (property_get(<span class="string">"ro.sf.lcd_density"</span>, property, <span class="literal">NULL</span>) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            LOGW(<span class="string">"ro.sf.lcd_density not defined, using 160 dpi by default."</span>);</span><br><span class="line">            <span class="built_in">strcpy</span>(property, <span class="string">"160"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/* for the emulator case, reset the dpi values too */</span></span><br><span class="line">        mDpiX = mDpiY = atoi(property);</span><br><span class="line">    &#125;</span><br><span class="line">    mDensity = atoi(property) * (<span class="number">1.0f</span>/<span class="number">160.0f</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//....省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看其源码可以看出density的值是通过获取<code>ro.sf.lcd_density</code>配置的值，如果没有默认使用<code>DENSITY_DEFAULT</code>，其默认值有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_LOW = <span class="number">120</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_MEDIUM = <span class="number">160</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_TV = <span class="number">213</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_HIGH = <span class="number">240</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_260 = <span class="number">260</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_280 = <span class="number">280</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_300 = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_XHIGH = <span class="number">320</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_340 = <span class="number">340</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_360 = <span class="number">360</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_400 = <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_420 = <span class="number">420</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_440 = <span class="number">440</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_XXHIGH = <span class="number">480</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_560 = <span class="number">560</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_600 = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_XXXHIGH = <span class="number">640</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DENSITY_DEFAULT = DENSITY_MEDIUM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DENSITY_DEFAULT_SCALE = <span class="number">1.0f</span> / DENSITY_DEFAULT;</span><br></pre></td></tr></table></figure><p>那么问题来了，<code>ro.sf.lcd_density</code>的值在哪里找到，其配置文件路径在手机的<code>/system/build.prop</code>文件中。</p><p>可以使用adb命令来将文件进行导出。但是要注意的是，avd模拟器下该文件没有<code>ro.sf.lcd_density</code>该配置项。但是可以在<code>emulator根目录下/config.ini</code>中的<code>hw.lcd.density</code>可以找到配置的值。</p><p>4寸模拟器下<code>config.ini</code>的<code>hw.lcd.density</code>值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hw.lcd.density=240</span><br></pre></td></tr></table></figure><p>我们将4寸的模拟器的配置文件修改成160后查看打印日志:</p><p><img src="hw_log.png" alt=""></p><p>可以查看到日志的输出和上面原来的输出发生了改变，改成了自己配置的值。但是该选项只是avd模拟器环境下，真机或者一些游戏模拟器环境下都是在<code>/system/build.prop</code>配置文件中<code>ro.sf.lcd_density</code>的值。一般该值都是出厂时就编译好的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ro.sf.lcd_density=240</span><br></pre></td></tr></table></figure><blockquote><p>这是MUMU中读取<code>/system/build.prop</code>文件的读取的值，这里没有root的真机，无法演示真机环境，但原理相同。但是可以测试一下真机环境下，DPI是根据配置读取的，而非真实通过物理分辨率求出来的从而验证上述的结论。这里以三星s8手机为例，主屏分辨率2960*1440，尺寸5.8，求出dpi约为3.5，而依靠上述代码输出的值为4.5。</p></blockquote><p>所以dp都是使用系统定义的dpi来进行换算的。而非是说单纯的使用物理分辨率和尺寸来计算的。但依然如此，Android的碎片化还是让dp直接适配还是无法让人满意，尽管dp适配可以解决小部分的适配问题。</p><h1 id="宽高限定符适配"><a href="#宽高限定符适配" class="headerlink" title="宽高限定符适配"></a>宽高限定符适配</h1><p>为了高效的实现UI开发，出现了新的适配方案，我把它称作宽高限定符适配。简单说，就是穷举市面上所有的Android手机的宽高像素值：</p><p><img src="genvalue.png" alt=""></p><p>然后我们根据一个基准，为基准的意思就是,比如设计图的尺寸为<code>480 * 800</code>的分辨率，有个300*300px的ImageView，则</p><ul><li>宽度为480，将任何分辨率的宽度分为480份，每一份1px，取值为x1-x480。</li><li>高度为800，将任何分辨率的高度分为800份，每一份1px，取值为y1-y800。</li></ul><p>则对于540 * 860的分辨率来说</p><p><img src="layxcalc.png" alt=""></p><p>可以看到x1 = 540 / 基准 = 540 / 480 = 1.12 ;而其他分辨率的计算方式相同。</p><p>看一下使用该方式适配的对比结果，同样适用dp适配所使用的布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/img"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"@dimen/x300"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"@dimen/y300"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改了ImageView的宽和高，适配结果为下图</p><p><img src="valueshipei.png" alt=""></p><p>再看看不同机型分辨率下的表现</p><p><img src="valueshipei2.png" alt=""></p><p>可以看到对比于使用dp方案来适配的结果要完美上许多。通过dimens引用去寻找该分辨率的文件夹下面对应的值。这样基本可以解决我们的适配问题。</p><p>那么重点来了，既然可以适配，但为什么很少人使用该方案呢，这就涉及到该方案的一个致命的缺点：那就是需要精准命中才能适配。如果values限定符下的分辨率没有对应上手机，则就只能用默认的values下的dimens文件了。如果使用默认尺寸，而又不同于设计稿的尺寸，就可以会发生UI变形。简单的说容错率太低了。</p><blockquote><p>生成的values文件夹下以哪个为基准也需要同样的拷贝一份基准值去默认values文件夹下作为默认值。</p></blockquote><p><strong>那么如何生成上述所说的文件夹呢，这里使用鸿洋大神给出的一份自动生成代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenerateValueFiles</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> baseW;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> baseH;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String dirStr = <span class="string">"./res"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String WTemplate = <span class="string">"&lt;dimen name=\"x&#123;0&#125;\"&gt;&#123;1&#125;px&lt;/dimen&gt;\n"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String HTemplate = <span class="string">"&lt;dimen name=\"y&#123;0&#125;\"&gt;&#123;1&#125;px&lt;/dimen&gt;\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;0&#125;-HEIGHT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String VALUE_TEMPLATE = <span class="string">"values-&#123;0&#125;x&#123;1&#125;"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 需要适配的分辨率,格式为width,height;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUPPORT_DIMESION = <span class="string">"320,480;480,800;480,854;540,960;600,1024;720,1184;720,1196;720,1280;768,1024;800,1280;1080,1812;1080,1920;1440,2560;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String supportStr = SUPPORT_DIMESION;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GenerateValueFiles</span><span class="params">(<span class="keyword">int</span> baseX, <span class="keyword">int</span> baseY, String supportStr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.baseW = baseX;</span><br><span class="line">        <span class="keyword">this</span>.baseH = baseY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.supportStr.contains(baseX + <span class="string">","</span> + baseY)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.supportStr += baseX + <span class="string">","</span> + baseY + <span class="string">";"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.supportStr += validateInput(supportStr);</span><br><span class="line"></span><br><span class="line">        System.out.println(supportStr);</span><br><span class="line"></span><br><span class="line">        File dir = <span class="keyword">new</span> File(dirStr);</span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            dir.mkdir();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(dir.getAbsoluteFile());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> supportStr</span></span><br><span class="line"><span class="comment">     *            w,h_...w,h;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">validateInput</span><span class="params">(String supportStr)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        String[] vals = supportStr.split(<span class="string">"_"</span>);</span><br><span class="line">        <span class="keyword">int</span> w = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> h = -<span class="number">1</span>;</span><br><span class="line">        String[] wh;</span><br><span class="line">        <span class="keyword">for</span> (String val : vals) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (val == <span class="keyword">null</span> || val.trim().length() == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                wh = val.split(<span class="string">","</span>);</span><br><span class="line">                w = Integer.parseInt(wh[<span class="number">0</span>]);</span><br><span class="line">                h = Integer.parseInt(wh[<span class="number">1</span>]);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                System.out.println(<span class="string">"skip invalidate params : w,h = "</span> + val);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(w + <span class="string">","</span> + h + <span class="string">";"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String[] vals = supportStr.split(<span class="string">";"</span>);</span><br><span class="line">        <span class="keyword">for</span> (String val : vals) &#123;</span><br><span class="line">            String[] wh = val.split(<span class="string">","</span>);</span><br><span class="line">            generateXmlFile(Integer.parseInt(wh[<span class="number">0</span>]), Integer.parseInt(wh[<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">generateXmlFile</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        StringBuffer sbForWidth = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sbForWidth.append(<span class="string">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"</span>);</span><br><span class="line">        sbForWidth.append(<span class="string">"&lt;resources&gt;"</span>);</span><br><span class="line">        <span class="keyword">float</span> cellw = w * <span class="number">1.0f</span> / baseW;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"width : "</span> + w + <span class="string">","</span> + baseW + <span class="string">","</span> + cellw);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; baseW; i++) &#123;</span><br><span class="line">            sbForWidth.append(WTemplate.replace(<span class="string">"&#123;0&#125;"</span>, i + <span class="string">""</span>).replace(<span class="string">"&#123;1&#125;"</span>,</span><br><span class="line">                    change(cellw * i) + <span class="string">""</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        sbForWidth.append(WTemplate.replace(<span class="string">"&#123;0&#125;"</span>, baseW + <span class="string">""</span>).replace(<span class="string">"&#123;1&#125;"</span>,</span><br><span class="line">                w + <span class="string">""</span>));</span><br><span class="line">        sbForWidth.append(<span class="string">"&lt;/resources&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        StringBuffer sbForHeight = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sbForHeight.append(<span class="string">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"</span>);</span><br><span class="line">        sbForHeight.append(<span class="string">"&lt;resources&gt;"</span>);</span><br><span class="line">        <span class="keyword">float</span> cellh = h *<span class="number">1.0f</span>/ baseH;</span><br><span class="line">        System.out.println(<span class="string">"height : "</span>+ h + <span class="string">","</span> + baseH + <span class="string">","</span> + cellh);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; baseH; i++) &#123;</span><br><span class="line">            sbForHeight.append(HTemplate.replace(<span class="string">"&#123;0&#125;"</span>, i + <span class="string">""</span>).replace(<span class="string">"&#123;1&#125;"</span>,</span><br><span class="line">                    change(cellh * i) + <span class="string">""</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        sbForHeight.append(HTemplate.replace(<span class="string">"&#123;0&#125;"</span>, baseH + <span class="string">""</span>).replace(<span class="string">"&#123;1&#125;"</span>,</span><br><span class="line">                h + <span class="string">""</span>));</span><br><span class="line">        sbForHeight.append(<span class="string">"&lt;/resources&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        File fileDir = <span class="keyword">new</span> File(dirStr + File.separator</span><br><span class="line">                + VALUE_TEMPLATE.replace(<span class="string">"&#123;0&#125;"</span>, h + <span class="string">""</span>)<span class="comment">//</span></span><br><span class="line">                .replace(<span class="string">"&#123;1&#125;"</span>, w + <span class="string">""</span>));</span><br><span class="line">        fileDir.mkdir();</span><br><span class="line"></span><br><span class="line">        File layxFile = <span class="keyword">new</span> File(fileDir.getAbsolutePath(), <span class="string">"lay_x.xml"</span>);</span><br><span class="line">        File layyFile = <span class="keyword">new</span> File(fileDir.getAbsolutePath(), <span class="string">"lay_y.xml"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            PrintWriter pw = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> FileOutputStream(layxFile));</span><br><span class="line">            pw.print(sbForWidth.toString());</span><br><span class="line">            pw.close();</span><br><span class="line">            pw = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> FileOutputStream(layyFile));</span><br><span class="line">            pw.print(sbForHeight.toString());</span><br><span class="line">            pw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">change</span><span class="params">(<span class="keyword">float</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = (<span class="keyword">int</span>) (a * <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">return</span> temp / <span class="number">100f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//基准分辨率</span></span><br><span class="line">        <span class="keyword">int</span> baseW = <span class="number">480</span>;</span><br><span class="line">        <span class="keyword">int</span> baseH = <span class="number">800</span>;</span><br><span class="line">        String addition = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (args.length &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                baseW = Integer.parseInt(args[<span class="number">0</span>]);</span><br><span class="line">                baseH = Integer.parseInt(args[<span class="number">1</span>]);</span><br><span class="line">                addition = args[<span class="number">2</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (args.length &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">                baseW = Integer.parseInt(args[<span class="number">0</span>]);</span><br><span class="line">                baseH = Integer.parseInt(args[<span class="number">1</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (args.length &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                addition = args[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line"></span><br><span class="line">            System.err</span><br><span class="line">                    .println(<span class="string">"right input params : java -jar xxx.jar width height w,h_w,h_..._w,h;"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.exit(-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> GenerateValueFiles(baseW, baseH, addition).generate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对于主流的分辨率我已经集成到了我们的程序中，当然对于特殊的，你可以通过参数指定。关于屏幕分辨率信息，可以通过该网站查询：<a href="http://screensiz.es/phone" target="_blank" rel="noopener">http://screensiz.es/phone</a></p></blockquote><h1 id="AndroidAutoLayout库适配"><a href="#AndroidAutoLayout库适配" class="headerlink" title="AndroidAutoLayout库适配"></a>AndroidAutoLayout库适配</h1><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FhongyangAndroid%2FAndroidAutoLayout" target="_blank" rel="noopener">鸿洋大佬的适配方案</a>的项目也来自于宽高限定符方案的启发。虽然该框架已经停止维护，但是许多老项目也在使用该方案。因为集成简单，并且不需要使用dp单位，而是定义好设计稿的尺寸后使用px单位即可完成适配。</p><p><strong>使用方法：</strong></p><ul><li>Android Studio</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.zhy:autolayout:1.4.5'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>AndroidManifest注册<code>设计稿</code>尺寸</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"design_width"</span> <span class="attr">android:value</span>=<span class="string">"768"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">meta-data</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"design_height"</span> <span class="attr">android:value</span>=<span class="string">"1280"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">meta-data</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>集成<code>AutoLayoutActivity</code></li></ul><p>然后就可以在布局文件按照设计稿的尺寸来使用具体的像素值了。比如，设计稿上是96*96,那么我们可以直接写96px，APP运行时，框架会帮助我们根据不同手机的具体尺寸按比例伸缩。这是比宽高限定符更好的方案，因为解决了宽高限定符的容错率问题。</p><p>但是框架要在运行时会在onMeasure里面做变换，自定义的控件可能会被影响或限制，可能有些特定的控件，需要单独适配，这里面可能存在的暗坑是不可预见的。因为这是由框架来完成，并非系统完成。并且该库作者已经放弃维护了。</p><h1 id="smallestWidth适配"><a href="#smallestWidth适配" class="headerlink" title="smallestWidth适配"></a>smallestWidth适配</h1><p>smallestWidth适配也叫做sw限定符适配。值得是Android会识别屏幕可用宽度和高度的最小尺寸的dp值，然后再根据识别的结果去资源文件中寻找对应的限定符的文件夹下的资源文件。</p><p>这种机制上和上文提到的宽高限定符适配原理上是一样的。都是通过系统特定的规则选择对应的文件。</p><p><img src="genswvalue.png" alt=""></p><p>例如，比如一台手机的dpi为480，横向分辨率为1080px，根据公式px = dp(dpi/160)，横向的dp值是360dp。则系统就会自动去寻找<code>value-sw360dp</code>的文件夹以及对应的资源文件。</p><blockquote><p>理论条件下物理dp等于系统dp</p></blockquote><p>而该方案对比与宽高限定符适配方案最大的区别也是优点就是，该方案有更好的容错率。比如上述例子中，如果系统找不到<code>value-sw350dp</code>文件夹，则系统会向下寻找，比如找到离一个360最近的<code>value-sw320dp</code>文件夹。那么系统就会选择该文件下的资源文件。</p><p>例如设计稿同样为<code>480 * 800</code>,同样有一个<code>300 * 300</code>px的ImageView，例如在values-sw360dp文件夹下的dimen应该如何编写呢？360dp则意味着手机最小宽度为360dp，我们将360dp分成480份，每一个设计稿中的像素大概代表着手机的0.75dp。那么一个<code>300 * 300</code>px对应的dimen引用则为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"base_dpi"</span>&gt;</span>360dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line">  //....</span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_0"</span>&gt;</span>0.00dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_1"</span>&gt;</span>0.75dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_300"</span>&gt;</span>225.00dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line">  //...</span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>而这种dimens引用，在不同的<code>values-sw&lt;N&gt;</code>dp文件夹下的数值是不同的，比如values-sw400dp和values-sw420dp</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//400dp</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"base_dpi"</span>&gt;</span>400dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_0"</span>&gt;</span>0.00dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_1"</span>&gt;</span>0.83dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_2"</span>&gt;</span>1.67dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_3"</span>&gt;</span>2.50dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_4"</span>&gt;</span>3.33dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">//420dp</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"base_dpi"</span>&gt;</span>420dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_0"</span>&gt;</span>0.00dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_1"</span>&gt;</span>0.88dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_2"</span>&gt;</span>1.75dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_3"</span>&gt;</span>2.63dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"qb_px_4"</span>&gt;</span>3.50dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>计算完后，那么对应的布局文件编写代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/iv_adapterimg"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/img"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"@dimen/qb_px_300"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"@dimen/qb_px_300"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行一下来看看适配的效果：</p><p><img src="swvalueshipei.png" alt=""></p><p>smallestWidth的适配机制由系统保证，我们只需要针对这套规则生成对应的资源文件即可，不会出现什么难以解决的问题，也根本不会影响我们的业务逻辑代码，而且只要我们生成的资源文件分布合理，，即使对应的smallestWidth值没有找到完全对应的资源文件，它也能向下兼容，寻找最接近的资源文件。</p><p>当然该方案也有他的缺点，生成的文件夹越多，也就意味着生成的dimens文件的覆盖范围和尺寸范围越大，apk的安装包也会增加，宽高限定符适配方案也同样有着该缺点。</p><blockquote><p>smallestWidth适配方案有一个小问题，那就是它是在Android 3.2 以后引入的，Google的本意是用它来适配平板的布局文件（但是实际上显然用于diemns适配的效果更好），不过目前所有的项目应该最低支持版本应该都是4.0了（糗事百科这么老的项目最低都是4.0哦），所以，这问题其实也不重要了。</p></blockquote><p>当然，计算的方式肯定也不会是自己一点计算再编写， 附上生成的代码文件。<a href="https://github.com/ladingwu/dimens_sw" target="_blank" rel="noopener">代码链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenerateSWValueFiles</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 适配手机dp列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> DimenTypes &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//适配Android 3.2以上   大部分手机的sw值集中在  300-460之间</span></span><br><span class="line">        DP_sw__300(<span class="number">300</span>),  <span class="comment">// values-sw300</span></span><br><span class="line">        DP_sw__310(<span class="number">310</span>),</span><br><span class="line">        DP_sw__320(<span class="number">320</span>),</span><br><span class="line">        DP_sw__330(<span class="number">330</span>),</span><br><span class="line">        DP_sw__340(<span class="number">340</span>),</span><br><span class="line">        DP_sw__350(<span class="number">350</span>),</span><br><span class="line">        DP_sw__360(<span class="number">360</span>),</span><br><span class="line">        DP_sw__370(<span class="number">370</span>),</span><br><span class="line">        DP_sw__380(<span class="number">380</span>),</span><br><span class="line">        DP_sw__390(<span class="number">390</span>),</span><br><span class="line">        DP_sw__410(<span class="number">410</span>),</span><br><span class="line">        DP_sw__420(<span class="number">420</span>),</span><br><span class="line">        DP_sw__430(<span class="number">430</span>),</span><br><span class="line">        DP_sw__440(<span class="number">440</span>),</span><br><span class="line">        DP_sw__450(<span class="number">450</span>),</span><br><span class="line">        DP_sw__460(<span class="number">460</span>),</span><br><span class="line">        DP_sw__470(<span class="number">470</span>),</span><br><span class="line">        DP_sw__480(<span class="number">480</span>),</span><br><span class="line">        DP_sw__490(<span class="number">490</span>),</span><br><span class="line"></span><br><span class="line">        DP_sw__400(<span class="number">400</span>);</span><br><span class="line">        <span class="comment">// 想生成多少自己以此类推</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 屏幕最小宽度</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> swWidthDp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        DimenTypes(<span class="keyword">int</span> swWidthDp) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.swWidthDp = swWidthDp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSwWidthDp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> swWidthDp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSwWidthDp</span><span class="params">(<span class="keyword">int</span> swWidthDp)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.swWidthDp = swWidthDp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成SW工具类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MakeUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_HEADER = <span class="string">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_RESOURCE_START = <span class="string">"&lt;resources&gt;\r\n"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_RESOURCE_END = <span class="string">"&lt;/resources&gt;\r\n"</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_DIMEN_TEMPLETE = <span class="string">"&lt;dimen name=\"qb_%1$spx_%2$d\"&gt;%3$.2fdp&lt;/dimen&gt;\r\n"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_BASE_DPI = <span class="string">"&lt;dimen name=\"base_dpi\"&gt;%ddp&lt;/dimen&gt;\r\n"</span>;</span><br><span class="line">        <span class="keyword">private</span>  <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">720</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 生成的文件名</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_NAME = <span class="string">"lay_sw.xml"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">px2dip</span><span class="params">(<span class="keyword">float</span> pxValue, <span class="keyword">int</span> sw,<span class="keyword">int</span> designWidth)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">float</span> dpValue =   (pxValue/(<span class="keyword">float</span>)designWidth) * sw;</span><br><span class="line">            BigDecimal bigDecimal = <span class="keyword">new</span> BigDecimal(dpValue);</span><br><span class="line">            <span class="keyword">float</span> finDp = bigDecimal.setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP).floatValue();</span><br><span class="line">            <span class="keyword">return</span> finDp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 生成所有的尺寸数据</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">makeAllDimens</span><span class="params">(DimenTypes type, <span class="keyword">int</span> designWidth)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">float</span> dpValue;</span><br><span class="line">            String temp;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sb.append(XML_HEADER);</span><br><span class="line">                sb.append(XML_RESOURCE_START);</span><br><span class="line">                <span class="comment">//备份生成的相关信息</span></span><br><span class="line">                temp = String.format(XML_BASE_DPI, type.getSwWidthDp());</span><br><span class="line">                sb.append(temp);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= MAX_SIZE; i++) &#123;</span><br><span class="line"></span><br><span class="line">                    dpValue = px2dip((<span class="keyword">float</span>) i,type.getSwWidthDp(),designWidth);</span><br><span class="line">                    temp = String.format(XML_DIMEN_TEMPLETE,<span class="string">""</span>, i, dpValue);</span><br><span class="line">                    sb.append(temp);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                sb.append(XML_RESOURCE_END);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 生成的目标文件夹</span></span><br><span class="line"><span class="comment">         * 只需传宽进来就行</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> type 枚举类型</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> buildDir 生成的目标文件夹</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">makeAll</span><span class="params">(<span class="keyword">int</span> designWidth, DimenTypes type, String buildDir)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//生成规则</span></span><br><span class="line">                <span class="keyword">final</span> String folderName;</span><br><span class="line">                <span class="keyword">if</span> (type.getSwWidthDp() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//适配Android 3.2+</span></span><br><span class="line">                    folderName = <span class="string">"values-sw"</span> + type.getSwWidthDp() + <span class="string">"dp"</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//生成目标目录</span></span><br><span class="line">                File file = <span class="keyword">new</span> File(buildDir + File.separator + folderName);</span><br><span class="line">                <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                    file.mkdirs();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//生成values文件</span></span><br><span class="line">                FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file.getAbsolutePath() + File.separator + XML_NAME);</span><br><span class="line">                fos.write(makeAllDimens(type,designWidth).getBytes());</span><br><span class="line">                fos.flush();</span><br><span class="line">                fos.close();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设计稿尺寸(将自己设计师的设计稿的宽度填入)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DESIGN_WIDTH = <span class="number">480</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设计稿的高度  （将自己设计师的设计稿的高度填入）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DESIGN_HEIGHT = <span class="number">800</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//generater</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> smallest = DESIGN_WIDTH &gt; DESIGN_HEIGHT ? DESIGN_HEIGHT : DESIGN_WIDTH;  <span class="comment">//     求得最小宽度</span></span><br><span class="line">        DimenTypes[] values = DimenTypes.values();</span><br><span class="line">        <span class="keyword">for</span> (DimenTypes value : values) &#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(<span class="string">"dimens"</span>); <span class="comment">//当前项目路径</span></span><br><span class="line">            MakeUtils.makeAll(smallest, value, file.getAbsolutePath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>主流dp也可以查询相关网站</p></blockquote><h1 id="今日头条适配方案"><a href="#今日头条适配方案" class="headerlink" title="今日头条适配方案"></a>今日头条适配方案</h1><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fd9QCoBP6kV9VSWvVldVVwA" target="_blank" rel="noopener">文章链接</a></p><p>该方案的思想来源就是修改density的值，强行把所有不同分辨率的手机的宽度改成一个统一的值。</p><p>上文提到dp适配的<code>DisplayMetrics</code>中的相关变量：</p><ul><li>DisplayMetrics#density 就是上述的density</li><li>DisplayMetrics#densityDpi 就是上述的dpi</li><li>DisplayMetrics#scaledDensity 字体的缩放因子，正常情况下和density相等，但是调节系统字体大小后会改变这个值</li></ul><p><strong>那么是不是所有的dp和px的转换都是通过 DisplayMetrics 中相关的值来计算的呢？</strong></p><p>首先来看看布局文件中dp的转换，最终都是调用 <code>TypedValue#applyDimension(int unit, float value, DisplayMetrics metrics)</code>来进行转换:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">applyDimension</span><span class="params">(<span class="keyword">int</span> unit, <span class="keyword">float</span> value,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       DisplayMetrics metrics)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (unit) &#123;</span><br><span class="line">        <span class="keyword">case</span> COMPLEX_UNIT_PX:</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        <span class="keyword">case</span> COMPLEX_UNIT_DIP:</span><br><span class="line">            <span class="keyword">return</span> value * metrics.density;</span><br><span class="line">        <span class="keyword">case</span> COMPLEX_UNIT_SP:</span><br><span class="line">            <span class="keyword">return</span> value * metrics.scaledDensity;</span><br><span class="line">        <span class="keyword">case</span> COMPLEX_UNIT_PT:</span><br><span class="line">            <span class="keyword">return</span> value * metrics.xdpi * (<span class="number">1.0f</span>/<span class="number">72</span>);</span><br><span class="line">        <span class="keyword">case</span> COMPLEX_UNIT_IN:</span><br><span class="line">            <span class="keyword">return</span> value * metrics.xdpi;</span><br><span class="line">        <span class="keyword">case</span> COMPLEX_UNIT_MM:</span><br><span class="line">            <span class="keyword">return</span> value * metrics.xdpi * (<span class="number">1.0f</span>/<span class="number">25.4f</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里用到的DisplayMetrics正是从Resources中获得的。</p><p>再看看图片的decode，<code>BitmapFactory#decodeResourceStream</code>方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">decodeResourceStream</span><span class="params">(@Nullable Resources res, @Nullable TypedValue value,</span></span></span><br><span class="line"><span class="function"><span class="params">            @Nullable InputStream is, @Nullable Rect pad, @Nullable Options opts)</span> </span>&#123;</span><br><span class="line">        validate(opts);</span><br><span class="line">        <span class="keyword">if</span> (opts == <span class="keyword">null</span>) &#123;</span><br><span class="line">            opts = <span class="keyword">new</span> Options();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (opts.inDensity == <span class="number">0</span> &amp;&amp; value != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> density = value.density;</span><br><span class="line">            <span class="keyword">if</span> (density == TypedValue.DENSITY_DEFAULT) &#123;</span><br><span class="line">                opts.inDensity = DisplayMetrics.DENSITY_DEFAULT;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (density != TypedValue.DENSITY_NONE) &#123;</span><br><span class="line">                opts.inDensity = density;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (opts.inTargetDensity == <span class="number">0</span> &amp;&amp; res != <span class="keyword">null</span>) &#123;</span><br><span class="line">            opts.inTargetDensity = res.getDisplayMetrics().densityDpi;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> decodeStream(is, pad, opts);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>当然还有些其他dp转换的场景，基本都是通过 DisplayMetrics 来计算的，这里不再详述。因此，想要满足上述需求，我们只需要修改 DisplayMetrics 中和 dp 转换相关的变量即可。</p><p>通过该原理得到的适配方案：</p><p>比如，设计稿的宽度是480px，那么开发代码时会把目标dp值设置为480dp，在不同设备中，动态修改density的值，从而保证手机像素宽度/density这个值始终是360dp。这样来保证UI在不同设备上表现一致。</p><p>今日头条屏幕适配方案的核心原理在于，根据以下公式算出 <strong>density</strong></p><p><strong>当前设备屏幕总宽度（单位为像素）/ 设计图总宽度（单位为 dp) = density</strong></p><p>今日头条方案代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Application;</span><br><span class="line"><span class="keyword">import</span> android.content.ComponentCallbacks;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Configuration;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">float</span> sNoncompatDensity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">float</span> sNoncompatScaledDensity;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setCustomDensity</span><span class="params">(@NonNull Activity activity, @NonNull <span class="keyword">final</span> Application application)</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> DisplayMetrics appDisplayMetrics = application.getResources().getDisplayMetrics();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( sNoncompatDensity == <span class="number">0</span>) &#123;</span><br><span class="line">            sNoncompatDensity = appDisplayMetrics.density;</span><br><span class="line">            sNoncompatScaledDensity = appDisplayMetrics.scaledDensity;</span><br><span class="line">            application.registerComponentCallbacks(<span class="keyword">new</span> ComponentCallbacks() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(newConfig != <span class="keyword">null</span> &amp;&amp; newConfig.fontScale &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        sNoncompatScaledDensity = application.getResources().getDisplayMetrics().scaledDensity;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLowMemory</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> targetDensity = (<span class="keyword">float</span>) (appDisplayMetrics.widthPixels / <span class="number">480.0</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> targetDensityDPI = (<span class="keyword">int</span>) (targetDensity * <span class="number">160</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> targetScaledDensity = targetDensity * (sNoncompatScaledDensity / sNoncompatDensity);</span><br><span class="line"></span><br><span class="line">        appDisplayMetrics.density  = targetDensity;</span><br><span class="line">        appDisplayMetrics.densityDpi = targetDensityDPI;</span><br><span class="line">        appDisplayMetrics.scaledDensity = targetScaledDensity;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DisplayMetrics activityDisplayMetrics = activity.getResources().getDisplayMetrics();</span><br><span class="line">        activityDisplayMetrics.density  = targetDensity;</span><br><span class="line">        activityDisplayMetrics.densityDpi = targetDensityDPI;</span><br><span class="line">        activityDisplayMetrics.scaledDensity = targetScaledDensity;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在activity#onCreate方法中调用即可，在setContentView之前。运行看看适配的效果：</p><p><img src="toutiaoshipei.png" alt=""></p><blockquote><p>以设计图宽480dp去适配的，如果要以高维度适配，可以再扩展下代码即可</p></blockquote><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol><li>使用成本非常低，操作非常简单，使用该方案后在页面布局时不需要额外的代码和操作，这点可以说完虐其他屏幕适配方案</li><li>侵入性非常低，该方案和项目完全解耦，在项目布局时不会依赖哪怕一行该方案的代码，而且使用的还是 <strong>Android</strong> 官方的 <strong>API</strong>，意味着当你遇到什么问题无法解决，想切换为其他屏幕适配方案时，基本不需要更改之前的代码，整个切换过程几乎在瞬间完成，会少很多麻烦，节约很多时间，试错成本接近于 0</li><li>可适配三方库的控件和系统的控件(不止是是 <strong>Activity</strong> 和 <strong>Fragment</strong>，<strong>Dialog</strong>、<strong>Toast</strong> 等所有系统控件都可以适配)，由于修改的 <strong>density</strong> 在整个项目中是全局的，所以只要一次修改，项目中的所有地方都会受益</li><li>不会有任何性能的损耗</li></ol><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>暂时没发现其他什么很明显的缺点，已知的缺点有一个，那就是第三个优点，它既是这个方案的优点也同样是缺点，但是就这一个缺点也是非常致命的</p><p>只需要修改一次 <strong>density</strong>，项目中的所有地方都会自动适配，这个看似解放了双手，减少了很多操作，但是实际上反应了一个缺点，那就是只能一刀切的将整个项目进行适配，但适配范围是不可控的</p><p>这样不是很好吗？这样本来是很好的，但是应用到这个方案是就不好了，因为我上面的原理也分析了，这个方案依赖于设计图尺寸，但是项目中的系统控件、三方库控件、等非我们项目自身设计的控件，它们的设计图尺寸并不会和我们项目自身的设计图尺寸一样</p><p>当这个适配方案不分类型，将所有控件都强行使用我们项目自身的设计图尺寸进行适配时，这时就会出现问题，<strong>当某个系统控件或三方库控件的设计图尺寸和和我们项目自身的设计图尺寸差距非常大时，这个问题就越严重</strong></p><blockquote><p>这里是JessYan总结的优缺点，个人很赞同。</p></blockquote><h1 id="AndroidAutoSIze"><a href="#AndroidAutoSIze" class="headerlink" title="AndroidAutoSIze"></a>AndroidAutoSIze</h1><p>一个基于今日头条方案的开源库，一个极低成本的 Android 屏幕适配方案.</p><p>如果项目没有什么特殊要求，两个步骤即可完成适配：</p><p><strong>添加依赖</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">'me.jessyan:autosize:1.1.2'</span></span><br></pre></td></tr></table></figure><p><strong>请在 AndroidManifest 中填写全局设计图尺寸 (单位 dp)</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span>&gt;</span>            </span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"design_width_in_dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"360"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"design_height_in_dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"640"</span>/&gt;</span>           </span><br><span class="line">     <span class="tag">&lt;/<span class="name">application</span>&gt;</span>           </span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/JessYanCoding/AndroidAutoSize/blob/master/README-zh.md" target="_blank" rel="noopener">Github</a>，更多详细集成文档建议查看github链接。github中有很详细的用法以及使用的问题。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>适配就是根据设计图来达到某一个维度上显示一致，不能够说使用适配就可以不使用wrap_content等，比如一个页面时上下滑动的，我们只需要保持设备在宽的维度上保持显示一致即可。而如果一个不支持上下滑动的页面，只需要保持设备在高的维度上保持显示一致。</p><p>如何适配，如何选择适配的方案还是要结合自己业务的需求。因为开发就是要追求高效和稳定。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/ghost_Programmer/article/details/50042805" target="_blank" rel="noopener">https://blog.csdn.net/ghost_Programmer/article/details/50042805</a></p><p><a href="https://juejin.im/post/5ae9cc3a5188253dc612842b" target="_blank" rel="noopener">https://juejin.im/post/5ae9cc3a5188253dc612842b</a></p><p><a href="https://blog.csdn.net/lmj623565791/article/details/45460089" target="_blank" rel="noopener">https://blog.csdn.net/lmj623565791/article/details/45460089</a></p><p><a href="https://juejin.im/post/5b7a29736fb9a019d53e7ee2" target="_blank" rel="noopener">https://juejin.im/post/5b7a29736fb9a019d53e7ee2</a></p><p><a href="https://mp.weixin.qq.com/s/SDHL26XgIjjlK-RLd_SSCw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/SDHL26XgIjjlK-RLd_SSCw</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在Android开发中，由于Android碎片化严重，屏幕分辨率千奇百怪，而想要在各种分辨率的设备上显示基本一致的效果，适配成本越来越高。虽然Android官方提供了dp单位来适配，但其在各种奇怪分辨率下表现却不尽如人意。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android屏幕适配" scheme="http://hackycy.github.io/tags/Android%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Idea For Mac快捷键</title>
    <link href="http://hackycy.github.io/2019/05/13/Idea-For-Mac%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://hackycy.github.io/2019/05/13/Idea-For-Mac快捷键/</id>
    <published>2019-05-13T09:54:58.000Z</published>
    <updated>2019-05-13T09:56:09.034Z</updated>
    
    <content type="html"><![CDATA[<p>IntelliJ IDEA For Mac 快捷键</p><a id="more"></a><h4 id="Mac键盘符号和修饰键说明"><a href="#Mac键盘符号和修饰键说明" class="headerlink" title="Mac键盘符号和修饰键说明"></a>Mac键盘符号和修饰键说明</h4><ul><li><code>⌘</code> Command</li><li><code>⇧</code> Shift</li><li><code>⌥</code> Option</li><li><code>⌃</code> Control</li><li><code>↩︎</code> Return/Enter</li><li><code>⌫</code> Delete</li><li><code>⌦</code> 向前删除键（Fn+Delete）</li><li><code>↑</code> 上箭头</li><li><code>↓</code> 下箭头</li><li><code>←</code> 左箭头</li><li><code>→</code> 右箭头</li><li><code>⇞</code> Page Up（Fn+↑）</li><li><code>⇟</code> Page Down（Fn+↓）</li><li><code>Home</code> Fn + ←</li><li><code>End</code> Fn + →</li><li><code>⇥</code> 右制表符（Tab键）</li><li><code>⇤</code> 左制表符（Shift+Tab）</li><li><code>⎋</code> Escape (Esc)</li></ul><h4 id="一、Editing（编辑）"><a href="#一、Editing（编辑）" class="headerlink" title="一、Editing（编辑）"></a>一、Editing（编辑）</h4><ul><li><code>Control + Space</code> 基本的代码补全（补全任何类、方法、变量）</li><li><code>Control + Shift + Space</code> 智能代码补全（过滤器方法列表和变量的预期类型）</li><li><code>Command + Shift + Enter</code> 自动结束代码，行末自动添加分号</li><li><code>Command + P</code> 显示方法的参数信息</li><li><code>Control + J</code> 快速查看文档</li><li><code>Shift + F1</code> 查看外部文档（在某些代码上会触发打开浏览器显示相关文档）</li><li><code>Command + 鼠标放在代码上</code> 显示代码简要信息</li><li><code>Command + F1</code> 在错误或警告处显示具体描述信息</li><li><code>Command + N, Control + Enter, Control + N</code> 生成代码（getter、setter、构造函数、hashCode/equals,toString）</li><li><code>Control + O</code> 覆盖方法（重写父类方法）</li><li><code>Control + I</code> 实现方法（实现接口中的方法）</li><li><code>Command + Option + T</code> 包围代码（使用if..else, try..catch, for, synchronized等包围选中的代码）</li><li><code>Command + /</code> 注释/取消注释与行注释</li><li><code>Command + Option + /</code> 注释/取消注释与块注释</li><li><code>Option + 方向键上</code> 连续选中代码块</li><li><code>Option + 方向键下</code> 减少当前选中的代码块</li><li><code>Control + Shift + Q</code> 显示上下文信息</li><li><code>Option + Enter</code> 显示意向动作和快速修复代码</li><li><code>Command + Option + L</code> 格式化代码</li><li><code>Control + Option + O</code> 优化import</li><li><code>Control + Option + I</code> 自动缩进线</li><li><code>Tab / Shift + Tab</code> 缩进代码 / 反缩进代码</li><li><code>Command + X</code> 剪切当前行或选定的块到剪贴板</li><li><code>Command + C</code> 复制当前行或选定的块到剪贴板</li><li><code>Command + V</code> 从剪贴板粘贴</li><li><code>Command + Shift + V</code> 从最近的缓冲区粘贴</li><li><code>Command + D</code> 复制当前行或选定的块</li><li><code>Command + Delete</code> 删除当前行或选定的块的行</li><li><code>Control + Shift + J</code> 智能的将代码拼接成一行</li><li><code>Command + Enter</code> 智能的拆分拼接的行</li><li><code>Shift + Enter</code> 开始新的一行</li><li><code>Command + Shift + U</code> 大小写切换</li><li><code>Command + Shift + ] / Command + Shift + [</code> 选择直到代码块结束/开始</li><li><code>Option + Fn + Delete</code> 删除到单词的末尾</li><li><code>Option + Delete</code> 删除到单词的开头</li><li><code>Command + 加号 / Command + 减号</code> 展开 / 折叠代码块</li><li><code>Command + Shift + 加号</code> 展开所以代码块</li><li><code>Command + Shift + 减号</code> 折叠所有代码块</li><li><code>Command + W</code> 关闭活动的编辑器选项卡</li></ul><h4 id="二、Search-Replace（查询-替换）"><a href="#二、Search-Replace（查询-替换）" class="headerlink" title="二、Search/Replace（查询/替换）"></a>二、Search/Replace（查询/替换）</h4><ul><li><code>Double Shift</code> 查询任何东西</li><li><code>Command + F</code> 文件内查找</li><li><code>Command + G</code> 查找模式下，向下查找</li><li><code>Command + Shift + G</code> 查找模式下，向上查找</li><li><code>Command + R</code> 文件内替换</li><li><code>Command + Shift + F</code> 全局查找（根据路径）</li><li><code>Command + Shift + R</code> 全局替换（根据路径）</li><li><code>Command + Shift + S</code> 查询结构（Ultimate Edition 版专用，需要在Keymap中设置）</li><li><code>Command + Shift + M</code> 替换结构（Ultimate Edition 版专用，需要在Keymap中设置）</li></ul><h4 id="三、Usage-Search（使用查询）"><a href="#三、Usage-Search（使用查询）" class="headerlink" title="三、Usage Search（使用查询）"></a>三、Usage Search（使用查询）</h4><ul><li><code>Option + F7 / Command + F7</code> 在文件中查找用法 / 在类中查找用法</li><li><code>Command + Shift + F7</code> 在文件中突出显示的用法</li><li><code>Command + Option + F7</code> 显示用法</li></ul><h4 id="四、Compile-and-Run（编译和运行）"><a href="#四、Compile-and-Run（编译和运行）" class="headerlink" title="四、Compile and Run（编译和运行）"></a>四、Compile and Run（编译和运行）</h4><ul><li><code>Command + F9</code> 编译Project</li><li><code>Command + Shift + F9</code> 编译选择的文件、包或模块</li><li><code>Control + Option + R</code> 弹出 Run 的可选择菜单</li><li><code>Control + Option + D</code> 弹出 Debug 的可选择菜单</li><li><code>Control + R</code> 运行</li><li><code>Control + D</code> 调试</li><li><code>Control + Shift + R, Control + Shift + D</code> 从编辑器运行上下文环境配置</li></ul><h4 id="五、Debugging（调试）"><a href="#五、Debugging（调试）" class="headerlink" title="五、Debugging（调试）"></a>五、Debugging（调试）</h4><ul><li><code>F8</code> 进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</li><li><code>F7</code> 进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</li><li><code>Shift + F7</code> 智能步入，断点所在行上有多个方法调用，会弹出进入哪个方法</li><li><code>Shift + F8</code> 跳出</li><li><code>Option + F9</code> 运行到光标处，如果光标前有其他断点会进入到该断点</li><li><code>Option + F8</code> 计算表达式（可以更改变量值使其生效）</li><li><code>Command + Option + R</code> 恢复程序运行，如果该断点下面代码还有断点则停在下一个断点上</li><li><code>Command + F8</code> 切换断点（若光标当前行有断点则取消断点，没有则加上断点）</li><li><code>Command + Shift + F8</code> 查看断点信息</li></ul><h4 id="六、Navigation（导航）"><a href="#六、Navigation（导航）" class="headerlink" title="六、Navigation（导航）"></a>六、Navigation（导航）</h4><ul><li><code>Command + O</code> 查找类文件</li><li><code>Command + Shift + O</code> 查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠<code>/</code></li><li><code>Command + Option + O</code> 前往指定的变量 / 方法</li><li><code>Control + 方向键左 / Control + 方向键右</code> 左右切换打开的编辑tab页</li><li><code>F12</code> 返回到前一个工具窗口</li><li><code>Esc</code> 从工具窗口进入代码文件窗口</li><li><code>Shift + Esc</code> 隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口</li><li><code>Command + Shift + F4</code> 关闭活动run/messages/find/… tab</li><li><code>Command + L</code> 在当前文件跳转到某一行的指定处</li><li><code>Command + E</code> 显示最近打开的文件记录列表</li><li><code>Option + 方向键左 / Option + 方向键右</code> 光标跳转到当前单词 / 中文句的左 / 右侧开头位置</li><li><code>Command + Option + 方向键左 / Command + Option + 方向键右</code> 退回 / 前进到上一个操作的地方</li><li><code>Command + Shift + Delete</code> 跳转到最后一个编辑的地方</li><li><code>Option + F1</code> 显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的Finder)</li><li><code>Command + B / Command + 鼠标点击</code> 进入光标所在的方法/变量的接口或是定义处</li><li><code>Command + Option + B</code> 跳转到实现处，在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</li><li><code>Option + Space, Command + Y</code> 快速打开光标所在方法、类的定义</li><li><code>Control + Shift + B</code> 跳转到类型声明处</li><li><code>Command + U</code> 前往当前光标所在方法的父类的方法 / 接口定义</li><li><code>Control + 方向键下 / Control + 方向键上</code> 当前光标跳转到当前文件的前一个/后一个方法名位置</li><li><code>Command + ] / Command + [</code> 移动光标到当前所在代码的花括号开始/结束位置</li><li><code>Command + F12</code> 弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）</li><li><code>Control + H</code> 显示当前类的层次结构</li><li><code>Command + Shift + H</code> 显示方法层次结构</li><li><code>Control + Option + H</code> 显示调用层次结构</li><li><code>F2 / Shift + F2</code> 跳转到下一个/上一个突出错误或警告的位置</li><li><code>F4 / Command + 方向键下</code> 编辑/查看代码源</li><li><code>Option + Home</code> 显示到当前文件的导航条</li><li><code>F3</code>选中文件/文件夹/代码行，添加/取消书签</li><li><code>Option + F3</code> 选中文件/文件夹/代码行，使用助记符添加/取消书签</li><li><code>Control + 0...Control + 9</code> 定位到对应数值的书签位置</li><li><code>Command + F3</code> 显示所有书签</li></ul><h4 id="七、Refactoring（重构）"><a href="#七、Refactoring（重构）" class="headerlink" title="七、Refactoring（重构）"></a>七、Refactoring（重构）</h4><ul><li><code>F5</code> 复制文件到指定目录</li><li><code>F6</code> 移动文件到指定目录</li><li><code>Command + Delete</code> 在文件上为安全删除文件，弹出确认框</li><li><code>Shift + F6</code> 重命名文件</li><li><code>Command + F6</code> 更改签名</li><li><code>Command + Option + N</code> 一致性</li><li><code>Command + Option + M</code> 将选中的代码提取为方法</li><li><code>Command + Option + V</code> 提取变量</li><li><code>Command + Option + F</code> 提取字段</li><li><code>Command + Option + C</code> 提取常量</li><li><code>Command + Option + P</code> 提取参数</li></ul><h4 id="八、VCS-Local-History（版本控制-本地历史记录）"><a href="#八、VCS-Local-History（版本控制-本地历史记录）" class="headerlink" title="八、VCS/Local History（版本控制/本地历史记录）"></a>八、VCS/Local History（版本控制/本地历史记录）</h4><ul><li><code>Command + K</code> 提交代码到版本控制器</li><li><code>Command + T</code> 从版本控制器更新代码</li><li><code>Option + Shift + C</code> 查看最近的变更记录</li><li><code>Control + C</code> 快速弹出版本控制器操作面板</li></ul><h4 id="九、Live-Templates（动态代码模板）"><a href="#九、Live-Templates（动态代码模板）" class="headerlink" title="九、Live Templates（动态代码模板）"></a>九、Live Templates（动态代码模板）</h4><ul><li><code>Command + Option + J</code> 弹出模板选择窗口，将选定的代码使用动态模板包住</li><li><code>Command + J</code> 插入自定义动态代码模板</li></ul><h4 id="十、General（通用）"><a href="#十、General（通用）" class="headerlink" title="十、General（通用）"></a>十、General（通用）</h4><ul><li><code>Command + 1...Command + 9</code> 打开相应编号的工具窗口</li><li><code>Command + S</code> 保存所有</li><li><code>Command + Option + Y</code> 同步、刷新</li><li><code>Control + Command + F</code> 切换全屏模式</li><li><code>Command + Shift + F12</code> 切换最大化编辑器</li><li><code>Option + Shift + F</code> 添加到收藏夹</li><li><code>Option + Shift + I</code> 检查当前文件与当前的配置文件</li><li>Control + ` 快速切换当前的scheme（切换主题、代码样式等）</li><li><code>Command + ,</code> 打开IDEA系统设置</li><li><code>Command + ;</code> 打开项目结构对话框</li><li><code>Shift + Command + A</code> 查找动作（可设置相关选项）</li><li><code>Control + Shift + Tab</code> 编辑窗口标签和工具窗口之间切换（如果在切换的过程加按上delete，则是关闭对应选中的窗口）</li></ul><h4 id="十一、Other（一些官方文档上没有体现的快捷键）"><a href="#十一、Other（一些官方文档上没有体现的快捷键）" class="headerlink" title="十一、Other（一些官方文档上没有体现的快捷键）"></a>十一、Other（一些官方文档上没有体现的快捷键）</h4><ul><li><code>Command + Shift +8</code> 竖编辑模式</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IntelliJ IDEA For Mac 快捷键&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://hackycy.github.io/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="IDEA" scheme="http://hackycy.github.io/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB安装和使用</title>
    <link href="http://hackycy.github.io/2019/05/11/MongoDB%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>http://hackycy.github.io/2019/05/11/MongoDB安装和使用/</id>
    <published>2019-05-11T15:38:48.000Z</published>
    <updated>2019-05-11T17:32:13.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MongoDB简介"><a href="#MongoDB简介" class="headerlink" title="MongoDB简介"></a>MongoDB简介</h1><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><a id="more"></a><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul><li>MongoDB的提供了一个面向文档存储，操作起来比较简单和容易。</li><li>你可以在MongoDB记录中设置任何属性的索引 (如：FirstName=”Sameer”,Address=”8 Gandhi Road”)来实现更快的排序。</li><li>你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。</li><li>如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。</li><li>Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</li><li>MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</li><li>Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。</li><li>Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。</li><li>Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</li><li>GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。</li><li>MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</li><li>MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</li><li>MongoDB安装简单。</li></ul><h1 id="安装MongoDB-Community-Edition"><a href="#安装MongoDB-Community-Edition" class="headerlink" title="安装MongoDB Community Edition"></a>安装MongoDB Community Edition</h1><p>本文只介绍Mac安装，其余安装方法请查阅：<a href="https://docs.mongodb.com/manual/administration/install-community/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/administration/install-community/</a></p><p>使用Homebrew安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap mongodb/brew</span><br><span class="line">$ brew install mongodb-community@4.0</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To have launchd start mongodb/brew/mongodb-community now and restart at login:</span><br><span class="line">  brew services start mongodb/brew/mongodb-community</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">'t want/need a background service you can just run:</span></span><br><span class="line"><span class="string">  mongod --config /usr/local/etc/mongod.conf</span></span><br><span class="line"><span class="string">==&gt; Summary</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/mongodb-community/4.0.9: 20 files, 221.0MB, built in 23 seconds</span></span><br></pre></td></tr></table></figure><p>安装后可查看到后面这段文字，为MongoDB的一些配置文件路径</p><ul><li>the <a href="https://docs.mongodb.com/manual/reference/configuration-options/" target="_blank" rel="noopener">configuration file</a> (<code>/usr/local/etc/mongod.conf</code>)</li><li>the <a href="https://docs.mongodb.com/manual/reference/configuration-options/#systemLog.path" target="_blank" rel="noopener"><code>log directory path</code></a> (<code>/usr/local/var/log/mongodb</code>)</li><li>the <a href="https://docs.mongodb.com/manual/reference/configuration-options/#storage.dbPath" target="_blank" rel="noopener"><code>data directory path</code></a> (<code>/usr/local/var/mongodb</code>)</li></ul><h1 id="MongoDB-数据类型"><a href="#MongoDB-数据类型" class="headerlink" title="MongoDB 数据类型"></a>MongoDB 数据类型</h1><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">String</td><td style="text-align:left">字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。</td></tr><tr><td style="text-align:left">Integer</td><td style="text-align:left">整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td style="text-align:left">Boolean</td><td style="text-align:left">布尔值。用于存储布尔值（真/假）。</td></tr><tr><td style="text-align:left">Double</td><td style="text-align:left">双精度浮点值。用于存储浮点值。</td></tr><tr><td style="text-align:left">Min/Max keys</td><td style="text-align:left">将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td style="text-align:left">Arrays</td><td style="text-align:left">用于将数组或列表或多个值存储为一个键。</td></tr><tr><td style="text-align:left">Timestamp</td><td style="text-align:left">时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td style="text-align:left">Object</td><td style="text-align:left">用于内嵌文档。</td></tr><tr><td style="text-align:left">Null</td><td style="text-align:left">用于创建空值。</td></tr><tr><td style="text-align:left">Symbol</td><td style="text-align:left">符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td style="text-align:left">Date</td><td style="text-align:left">日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td style="text-align:left">Object ID</td><td style="text-align:left">对象 ID。用于创建文档的 ID。</td></tr><tr><td style="text-align:left">Binary Data</td><td style="text-align:left">二进制数据。用于存储二进制数据。</td></tr><tr><td style="text-align:left">Code</td><td style="text-align:left">代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td style="text-align:left">Regular expression</td><td style="text-align:left">正则表达式类型。用于存储正则表达式。</td></tr></tbody></table><h1 id="MongoDB概念"><a href="#MongoDB概念" class="headerlink" title="MongoDB概念"></a>MongoDB概念</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>一个mongodb中可以建立多个数据库。</p><p>MongoDB的默认数据库为”db”，该数据库存储在data目录中。</p><p>MongoDB的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中。</p><p><strong>“show dbs”</strong> 命令可以显示所有数据的列表。</p><p>数据库也通过名字来标识。数据库名可以是满足以下条件的任意UTF-8字符串。</p><ul><li>不能是空字符串（””)。</li><li>不得含有’ ‘（空格)、.、$、/、\和\0 (空宇符)。</li><li>应全部小写。</li><li>最多64字节。</li></ul><p>有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。</p><ul><li><strong>admin</strong>： 从权限的角度来看，这是”root”数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</li><li><strong>local:</strong> 这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合</li><li><strong>config</strong>: 当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。</li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>文档是一个键值(key-value)对(即BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。</p><p>一个简单的文档例子如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"site"</span>:<span class="string">"hackycy.github.io"</span>, <span class="attr">"name"</span>:<span class="string">"博客"</span>&#125;</span><br></pre></td></tr></table></figure><p>关系型数据库和MongoDB的一些区别</p><table><thead><tr><th style="text-align:left">RDBMS</th><th style="text-align:left">MongoDB</th></tr></thead><tbody><tr><td style="text-align:left">数据库</td><td style="text-align:left">数据库</td></tr><tr><td style="text-align:left">表格</td><td style="text-align:left">集合</td></tr><tr><td style="text-align:left">行</td><td style="text-align:left">文档</td></tr><tr><td style="text-align:left">列</td><td style="text-align:left">字段</td></tr><tr><td style="text-align:left">表联合</td><td style="text-align:left">嵌入文档</td></tr><tr><td style="text-align:left">主键</td><td style="text-align:left">主键 (MongoDB 提供了 key 为 _id )</td></tr></tbody></table><p>需要注意的是：</p><ol><li>文档中的键/值对是有序的。</li><li>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。</li><li>MongoDB区分类型和大小写。</li><li>MongoDB的文档不能有重复的键。</li><li>文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。</li></ol><p>文档键命名规范：</p><ul><li>键不能含有\0 (空字符)。这个字符用来表示键的结尾。</li><li>.和$有特别的意义，只有在特定环境下才能使用。</li><li>以下划线”_”开头的键是保留的(不是严格要求的)。</li></ul><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>集合就是 MongoDB 文档组，类似于 RDBMS （关系数据库管理系统：Relational Database Management System)中的表格。</p><p>集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。</p><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><p><a href="https://docs.mongodb.com/manual/crud/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/crud/</a></p><p><a href="http://www.runoob.com/mongodb/mongodb-operators.html" target="_blank" rel="noopener">http://www.runoob.com/mongodb/mongodb-operators.html</a></p><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongod --dbpath <span class="string">"/usr/local/var/mongodb"</span></span><br></pre></td></tr></table></figure><p>mongodb常用启动参数</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">–bind_ip</td><td style="text-align:left">绑定服务IP，若绑定127.0.0.1，则只能本机访问，不指定默认本地所有IP</td></tr><tr><td style="text-align:left">–logpath</td><td style="text-align:left">定义MongoDB日志文件，注意是指定文件不是目录</td></tr><tr><td style="text-align:left">–logappend</td><td style="text-align:left">使用追加的方式写日志</td></tr><tr><td style="text-align:left">–dbpath</td><td style="text-align:left">指定数据库路径</td></tr><tr><td style="text-align:left">–port</td><td style="text-align:left">指定服务端口号，默认端口27017</td></tr><tr><td style="text-align:left">–serviceName</td><td style="text-align:left">指定服务名称</td></tr><tr><td style="text-align:left">–serviceDisplayName</td><td style="text-align:left">指定服务名称，有多个mongodb服务时执行。</td></tr><tr><td style="text-align:left">–install</td><td style="text-align:left">指定作为一个Windows服务安装。</td></tr></tbody></table><h2 id="命令行连接服务器"><a href="#命令行连接服务器" class="headerlink" title="命令行连接服务器"></a>命令行连接服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br></pre></td></tr></table></figure><p>默认连接的是test数据库</p><h2 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs;</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line"><span class="built_in">local</span>   0.000GB</span><br></pre></td></tr></table></figure><h2 id="切换-创建数据库"><a href="#切换-创建数据库" class="headerlink" title="切换/创建数据库"></a>切换/创建数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; use shop;</span><br><span class="line">switched to db shop</span><br><span class="line">&gt; db</span><br><span class="line">shop</span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase()</span><br></pre></td></tr></table></figure><p>删除当前数据库，默认为 test，你可以使用 db 命令查看当前数据库名。</p><h2 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h2><p>语法：<code>db.createCollection(name, options)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createCollection(<span class="string">"users"</span>);</span><br></pre></td></tr></table></figure><h2 id="查询集合"><a href="#查询集合" class="headerlink" title="查询集合"></a>查询集合</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections;</span><br></pre></td></tr></table></figure><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><p>语法：<code>db.集合名.find(条件);</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.find();</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br><span class="line">&gt; db.users.find(&#123;age:&#123;<span class="variable">$gt</span>:21&#125;&#125;);</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br></pre></td></tr></table></figure><ul><li>(&gt;) 大于 - $gt</li><li>(&lt;) 小于 - $lt</li><li>(&gt;=) 大于等于 - $gte</li><li>(&lt;= ) 小于等于 - $lte</li></ul><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><p>语法：<code>db.集合名.save(对象)</code>或者<code>db.集合名.insert(对象)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.save(&#123;name:<span class="string">"jack"</span>, age:20&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;)</span><br><span class="line">&gt; show collections;</span><br><span class="line">users</span><br><span class="line">&gt; db.users.find();</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f5e919ee5a000f483e6e"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 20 &#125;</span><br></pre></td></tr></table></figure><p>mongo默认会给我们加入<code>_id</code>作为该文档对象的唯一标识</p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>语法：<code>db.集合名.remove(条件对象);</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; &gt; db.users.remove(&#123;name:<span class="string">"jack"</span>&#125;);</span><br><span class="line">WriteResult(&#123; <span class="string">"nRemoved"</span> : 1 &#125;)</span><br><span class="line">&gt; db.users.find();</span><br></pre></td></tr></table></figure><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><p>语法：<code>db.集合名.update({匹配条件对象},{$set:{修改后的对象}});</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.save(&#123;name:<span class="string">"jack"</span>, age:20&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;)</span><br><span class="line">&gt; db.users.update(&#123;name:<span class="string">'jack'</span>&#125;,&#123;<span class="variable">$set</span>:&#123;name:<span class="string">'tom'</span>&#125;&#125;);</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : 1, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 1 &#125;)</span><br><span class="line">&gt; db.users.find();</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br></pre></td></tr></table></figure><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><p><strong>skip()</strong></p><p>skip()方法来跳过指定数量的数据，skip方法同样接受一个数字参数作为跳过的记录条数。</p><p>语法：<code>db.集合名.find().skip(Number)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.find();</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br><span class="line">&gt; db.users.find().skip(1);</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br></pre></td></tr></table></figure><p><strong>limit()</strong></p><p>该方法可以读取指定数量的数据记录。</p><p>语法：<code>db.集合名.find().limit(Number)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.find();</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br><span class="line">&gt; db.users.find().<span class="built_in">limit</span>(1);</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br></pre></td></tr></table></figure><blockquote><p>这两个方法可以连用。</p></blockquote><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>使用 sort() 方法对数据进行排序</p><p>语法：<code>db.集合名.find().sort({key:排序方式});</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.find()</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br><span class="line">&gt; db.users.find().sort(&#123;age:-1&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6fe7419ee5a000f483e70"</span>), <span class="string">"name"</span> : <span class="string">"jack"</span>, <span class="string">"age"</span> : 25 &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5cd6f9a519ee5a000f483e6f"</span>), <span class="string">"name"</span> : <span class="string">"tom"</span>, <span class="string">"age"</span> : 20 &#125;</span><br></pre></td></tr></table></figure><blockquote><p>正数代表升序，负数代表降序</p></blockquote><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>聚合(aggregate)主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。有点类似sql语句中的 count(*)。</p><table><thead><tr><th style="text-align:left">表达式</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">$sum</td><td style="text-align:left">计算总和。</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$sum : “$likes”}}}])</td></tr><tr><td style="text-align:left">$avg</td><td style="text-align:left">计算平均值</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$avg : “$likes”}}}])</td></tr><tr><td style="text-align:left">$min</td><td style="text-align:left">获取集合中所有文档对应值得最小值。</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$min : “$likes”}}}])</td></tr><tr><td style="text-align:left">$max</td><td style="text-align:left">获取集合中所有文档对应值得最大值。</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$max : “$likes”}}}])</td></tr><tr><td style="text-align:left">$push</td><td style="text-align:left">在结果文档中插入值到一个数组中。</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, url : {$push: “$url”}}}])</td></tr><tr><td style="text-align:left">$addToSet</td><td style="text-align:left">在结果文档中插入值到一个数组中，但不创建副本。</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, url : {$addToSet : “$url”}}}])</td></tr><tr><td style="text-align:left">$first</td><td style="text-align:left">根据资源文档的排序获取第一个文档数据。</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, first_url : {$first : “$url”}}}])</td></tr><tr><td style="text-align:left">$last</td><td style="text-align:left">根据资源文档的排序获取最后一个文档数据</td><td style="text-align:left">db.mycol.aggregate([{$group : {_id : “$by_user”, last_url : {$last : “$url”}}}])</td></tr></tbody></table><h2 id="管道的概念"><a href="#管道的概念" class="headerlink" title="管道的概念"></a>管道的概念</h2><p>管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数。</p><p>MongoDB的聚合管道将MongoDB文档在一个管道处理完毕后将结果传递给下一个管道处理。管道操作是可以重复的。</p><p>表达式：处理输入文档并输出。表达式是无状态的，只能用于计算当前聚合管道的文档，不能处理其它的文档。</p><p>这里我们介绍一下聚合框架中常用的几个操作：</p><ul><li><code>$project</code>：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。</li><li><code>$match</code>：用于过滤数据，只输出符合条件的文档。<code>$match</code>使用MongoDB的标准查询操作。</li><li><code>$limit</code>：用来限制MongoDB聚合管道返回的文档数。</li><li><code>$skip</code>：在聚合管道中跳过指定数量的文档，并返回余下的文档。</li><li><code>$unwind</code>：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。</li><li><code>$group</code>：将集合中的文档分组，可用于统计结果。</li><li><code>$sort</code>：将输入文档排序后输出。</li><li><code>$geoNear</code>：输出接近某一地理位置的有序文档。</li></ul><p>求当前集合的记录数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.users.find().count();</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>类似于sql语句</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select name, count(*) from users group by name;</span><br></pre></td></tr></table></figure><h1 id="方便练习的基础数据"><a href="#方便练习的基础数据" class="headerlink" title="方便练习的基础数据"></a>方便练习的基础数据</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">db.users.save(&#123;contry:&apos;中国&apos;,name:&apos;小明&apos;,score:77&#125;);</span><br><span class="line">db.users.save(&#123;contry:&apos;中国&apos;,name:&apos;小红&apos;,score:88&#125;);</span><br><span class="line">db.users.save(&#123;contry:&apos;中国&apos;,name:&apos;小张&apos;,score:99&#125;);</span><br><span class="line">db.users.save(&#123;contry:&apos;美国&apos;,name:&apos;jack&apos;,score:45&#125;);</span><br><span class="line">db.users.save(&#123;contry:&apos;美国&apos;,name:&apos;rose&apos;,score:67&#125;);</span><br><span class="line">db.users.save(&#123;contry:&apos;美国&apos;,name:&apos;mick&apos;,score:89&#125;);</span><br><span class="line"></span><br><span class="line">db.orders.insert([</span><br><span class="line">   &#123; &quot;_id&quot; : 1, &quot;item&quot; : &quot;almonds&quot;, &quot;price&quot; : 12, &quot;quantity&quot; : 2 &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 2, &quot;item&quot; : &quot;pecans&quot;, &quot;price&quot; : 20, &quot;quantity&quot; : 1 &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 3  &#125;</span><br><span class="line">]);</span><br><span class="line">db.inventory.insert([</span><br><span class="line">   &#123; &quot;_id&quot; : 1, &quot;sku&quot; : &quot;almonds&quot;, description: &quot;product 1&quot;, &quot;instock&quot; : 120 &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 2, &quot;sku&quot; : &quot;bread&quot;, description: &quot;product 2&quot;, &quot;instock&quot; : 80 &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 3, &quot;sku&quot; : &quot;cashews&quot;, description: &quot;product 3&quot;, &quot;instock&quot; : 60 &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 4, &quot;sku&quot; : &quot;pecans&quot;, description: &quot;product 4&quot;, &quot;instock&quot; : 70 &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 5, &quot;sku&quot;: null, description: &quot;Incomplete&quot; &#125;,</span><br><span class="line">   &#123; &quot;_id&quot; : 6 &#125;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><blockquote><p>使用命令还是很不方便，开发中尽量使用一些界面式的工具，例如Navicat</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MongoDB简介&quot;&gt;&lt;a href=&quot;#MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;MongoDB简介&quot;&gt;&lt;/a&gt;MongoDB简介&lt;/h1&gt;&lt;p&gt;MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。&lt;/p&gt;
&lt;p&gt;在高负载的情况下，添加更多的节点，可以保证服务器性能。&lt;/p&gt;
&lt;p&gt;MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。&lt;/p&gt;
&lt;p&gt;MongoDB 将数据存储为一个文档，数据结构由键值(key=&amp;gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。&lt;/p&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://hackycy.github.io/categories/MongoDB/"/>
    
    
      <category term="MongoDB" scheme="http://hackycy.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Android Manifest权限描述表</title>
    <link href="http://hackycy.github.io/2019/05/11/Android-Manifest%E6%9D%83%E9%99%90%E6%8F%8F%E8%BF%B0%E8%A1%A8/"/>
    <id>http://hackycy.github.io/2019/05/11/Android-Manifest权限描述表/</id>
    <published>2019-05-11T15:24:16.000Z</published>
    <updated>2019-05-11T15:28:05.626Z</updated>
    
    <content type="html"><![CDATA[<p>Android权限描述，方便自己查找。</p><a id="more"></a><table><thead><tr><th style="text-align:center">权限</th><th style="text-align:left">名称</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">android.permission.ACCESS_CHECKIN_PROPERTIES</td><td style="text-align:left">访问登记属性</td><td style="text-align:left">读取或写入登记check-in数据库属性表的权限</td></tr><tr><td style="text-align:center">android.permission.ACCESS_COARSE_LOCATION</td><td style="text-align:left">获取错略位置</td><td style="text-align:left">通过WiFi或移动基站的方式获取用户错略的经纬度信息,定位精度大概误差在30~1500米</td></tr><tr><td style="text-align:center">android.permission.ACCESS_FINE_LOCATION</td><td style="text-align:left">获取精确位置</td><td style="text-align:left">通过GPS芯片接收卫星的定位信息,定位精度达10米以内</td></tr><tr><td style="text-align:center">android.permission.ACCESS_LOCATION_EXTRA_COMMANDS</td><td style="text-align:left">访问定位额外命令</td><td style="text-align:left">允许程序访问额外的定位提供者指令</td></tr><tr><td style="text-align:center">android.permission.ACCESS_MOCK_LOCATION</td><td style="text-align:left">获取模拟定位信息</td><td style="text-align:left">获取模拟定位信息,一般用于帮助开发者调试应用</td></tr><tr><td style="text-align:center">android.permission.ACCESS_NETWORK_STATE</td><td style="text-align:left">获取网络状态</td><td style="text-align:left">获取网络信息状态,如当前的网络连接是否有效</td></tr><tr><td style="text-align:center">android.permission.ACCESS_SURFACE_FLINGER</td><td style="text-align:left">访问Surface Flinger</td><td style="text-align:left">Android平台上底层的图形显示支持,一般用于游戏或照相机预览界面和底层模式的屏幕截图</td></tr><tr><td style="text-align:center">android.permission.ACCESS_WIFI_STATE</td><td style="text-align:left">获取WiFi状态</td><td style="text-align:left">获取当前WiFi接入的状态以及WLAN热点的信息</td></tr><tr><td style="text-align:center">android.permission.ACCOUNT_MANAGER</td><td style="text-align:left">账户管理</td><td style="text-align:left">获取账户验证信息,主要为GMail账户信息,只有系统级进程才能访问的权限</td></tr><tr><td style="text-align:center">android.permission.AUTHENTICATE_ACCOUNTS</td><td style="text-align:left">验证账户</td><td style="text-align:left">允许一个程序通过账户验证方式访问账户管理ACCOUNT_MANAGER相关信息</td></tr><tr><td style="text-align:center">android.permission.BATTERY_STATS</td><td style="text-align:left">电量统计</td><td style="text-align:left">获取电池电量统计信息</td></tr><tr><td style="text-align:center">android.permission.BIND_APPWIDGET</td><td style="text-align:left">绑定小插件</td><td style="text-align:left">允许一个程序告诉appWidget服务需要访问小插件的数据库,只有非常少的应用才用到此权限</td></tr><tr><td style="text-align:center">android.permission.BIND_DEVICE_ADMIN</td><td style="text-align:left">绑定设备管理</td><td style="text-align:left">请求系统管理员接收者receiver,只有系统才能使用</td></tr><tr><td style="text-align:center">android.permission.BIND_INPUT_METHOD</td><td style="text-align:left">绑定输入法</td><td style="text-align:left">请求InputMethodService服务,只有系统才能使用</td></tr><tr><td style="text-align:center">android.permission.BIND_REMOTEVIEWS</td><td style="text-align:left">绑定RemoteView</td><td style="text-align:left">必须通过RemoteViewsService服务来请求,只有系统才能用</td></tr><tr><td style="text-align:center">android.permission.BIND_WALLPAPER</td><td style="text-align:left">绑定壁纸</td><td style="text-align:left">必须通过WallpaperService服务来请求,只有系统才能用</td></tr><tr><td style="text-align:center">android.permission.BLUETOOTH</td><td style="text-align:left">使用蓝牙</td><td style="text-align:left">允许程序连接配对过的蓝牙设备</td></tr><tr><td style="text-align:center">android.permission.BLUETOOTH_ADMIN</td><td style="text-align:left">蓝牙管理</td><td style="text-align:left">允许程序进行发现和配对新的蓝牙设备</td></tr><tr><td style="text-align:center">android.permission.BRICK</td><td style="text-align:left">变成砖头</td><td style="text-align:left">能够禁用手机,非常危险,顾名思义就是让手机变成砖头</td></tr><tr><td style="text-align:center">android.permission.BROADCAST_PACKAGE_REMOVED</td><td style="text-align:left">应用删除时广播</td><td style="text-align:left">当一个应用在删除时触发一个广播</td></tr><tr><td style="text-align:center">android.permission.BROADCAST_SMS</td><td style="text-align:left">收到短信时广播</td><td style="text-align:left">当收到短信时触发一个广播</td></tr><tr><td style="text-align:center">android.permission.BROADCAST_STICKY</td><td style="text-align:left">连续广播</td><td style="text-align:left">允许一个程序收到广播后快速收到下一个广播</td></tr><tr><td style="text-align:center">android.permission.BROADCAST_WAP_PUSH</td><td style="text-align:left">WAP PUSH广播</td><td style="text-align:left">WAP PUSH服务收到后触发一个广播</td></tr><tr><td style="text-align:center">android.permission.CALL_PHONE</td><td style="text-align:left">拨打电话</td><td style="text-align:left">允许程序从非系统拨号器里输入电话号码</td></tr><tr><td style="text-align:center">android.permission.CALL_PRIVILEGED</td><td style="text-align:left">通话权限</td><td style="text-align:left">允许程序拨打电话,替换系统的拨号器界面</td></tr><tr><td style="text-align:center">android.permission.CAMERA</td><td style="text-align:left">拍照权限</td><td style="text-align:left">允许访问摄像头进行拍照</td></tr><tr><td style="text-align:center">android.permission.CHANGE_COMPONENT_ENABLED_STATE</td><td style="text-align:left">改变组件状态</td><td style="text-align:left">改变组件是否启用状态</td></tr><tr><td style="text-align:center">android.permission.CHANGE_CONFIGURATION</td><td style="text-align:left">改变配置</td><td style="text-align:left">允许当前应用改变配置,如定位</td></tr><tr><td style="text-align:center">android.permission.CHANGE_NETWORK_STATE</td><td style="text-align:left">改变网络状态</td><td style="text-align:left">改变网络状态如是否能联网</td></tr><tr><td style="text-align:center">android.permission.CHANGE_WIFI_MULTICAST_STATE</td><td style="text-align:left">改变WiFi多播状态</td><td style="text-align:left">改变WiFi多播状态</td></tr><tr><td style="text-align:center">android.permission.CHANGE_WIFI_STATE</td><td style="text-align:left">改变WiFi状态</td><td style="text-align:left">改变WiFi状态</td></tr><tr><td style="text-align:center">android.permission.CLEAR_APP_CACHE</td><td style="text-align:left">清除应用缓存</td><td style="text-align:left">清除应用缓存</td></tr><tr><td style="text-align:center">android.permission.CLEAR_APP_USER_DATA</td><td style="text-align:left">清除用户数据</td><td style="text-align:left">清除应用的用户数据</td></tr><tr><td style="text-align:center">android.permission.CWJ_GROUP</td><td style="text-align:left">底层访问权限</td><td style="text-align:left">允许CWJ账户组访问底层信息</td></tr><tr><td style="text-align:center">android.permission.CELL_PHONE_MASTER_EX</td><td style="text-align:left">手机优化大师扩展权限</td><td style="text-align:left">手机优化大师扩展权限</td></tr><tr><td style="text-align:center">android.permission.CONTROL_LOCATION_UPDATES</td><td style="text-align:left">控制定位更新</td><td style="text-align:left">允许获得移动网络定位信息改变</td></tr><tr><td style="text-align:center">android.permission.DELETE_CACHE_FILES</td><td style="text-align:left">删除缓存文件</td><td style="text-align:left">允许应用删除缓存文件</td></tr><tr><td style="text-align:center">android.permission.DELETE_PACKAGES</td><td style="text-align:left">删除应用</td><td style="text-align:left">允许程序删除应用</td></tr><tr><td style="text-align:center">android.permission.DEVICE_POWER</td><td style="text-align:left">电源管理</td><td style="text-align:left">允许访问底层电源管理</td></tr><tr><td style="text-align:center">android.permission.DIAGNOSTIC</td><td style="text-align:left">应用诊断</td><td style="text-align:left">允许程序到RW到诊断资源</td></tr><tr><td style="text-align:center">android.permission.DISABLE_KEYGUARD</td><td style="text-align:left">禁用键盘锁</td><td style="text-align:left">允许程序禁用键盘锁</td></tr><tr><td style="text-align:center">android.permission.DUMP</td><td style="text-align:left">转存系统信息</td><td style="text-align:left">允许程序获取系统dump信息从系统服务</td></tr><tr><td style="text-align:center">android.permission.EXPAND_STATUS_BAR</td><td style="text-align:left">状态栏控制</td><td style="text-align:left">允许程序扩展或收缩状态栏</td></tr><tr><td style="text-align:center">android.permission.FACTORY_TEST</td><td style="text-align:left">工厂测试模式</td><td style="text-align:left">允许程序运行工厂测试模式</td></tr><tr><td style="text-align:center">android.permission.FLASHLIGHT</td><td style="text-align:left">使用闪光灯</td><td style="text-align:left">允许访问闪光灯</td></tr><tr><td style="text-align:center">android.permission.FORCE_BACK</td><td style="text-align:left">强制后退</td><td style="text-align:left">允许程序强制使用back后退按键,无论Activity是否在顶层</td></tr><tr><td style="text-align:center">android.permission.GET_ACCOUNTS</td><td style="text-align:left">访问账户Gmail列表</td><td style="text-align:left">访问GMail账户列表</td></tr><tr><td style="text-align:center">android.permission.GET_PACKAGE_SIZE</td><td style="text-align:left">获取应用大小</td><td style="text-align:left">获取应用的文件大小</td></tr><tr><td style="text-align:center">android.permission.GET_TASKS</td><td style="text-align:left">获取任务信息</td><td style="text-align:left">允许程序获取当前或最近运行的应用</td></tr><tr><td style="text-align:center">android.permission.GLOBAL_SEARCH</td><td style="text-align:left">允许全局搜索</td><td style="text-align:left">允许程序使用全局搜索功能</td></tr><tr><td style="text-align:center">android.permission.HARDWARE_TEST</td><td style="text-align:left">硬件测试</td><td style="text-align:left">访问硬件辅助设备,用于硬件测试</td></tr><tr><td style="text-align:center">android.permission.INJECT_EVENTS</td><td style="text-align:left">注射事件</td><td style="text-align:left">允许访问本程序的底层事件,获取按键、轨迹球的事件流</td></tr><tr><td style="text-align:center">android.permission.INSTALL_LOCATION_PROVIDER</td><td style="text-align:left">安装定位提供</td><td style="text-align:left">安装定位提供</td></tr><tr><td style="text-align:center">android.permission.INSTALL_PACKAGES</td><td style="text-align:left">安装应用程序</td><td style="text-align:left">允许程序安装应用</td></tr><tr><td style="text-align:center">android.permission.INTERNAL_SYSTEM_WINDOW</td><td style="text-align:left">内部系统窗口</td><td style="text-align:left">允许程序打开内部窗口,不对第三方应用程序开放此权限</td></tr><tr><td style="text-align:center">android.permission.INTERNET</td><td style="text-align:left">访问网络</td><td style="text-align:left">访问网络连接,可能产生GPRS流量</td></tr><tr><td style="text-align:center">android.permission.KILL_BACKGROUND_PROCESSES</td><td style="text-align:left">结束后台进程</td><td style="text-align:left">允许程序调用killBackgroundProcesses(String).方法结束后台进程</td></tr><tr><td style="text-align:center">android.permission.MANAGE_ACCOUNTS</td><td style="text-align:left">管理账户</td><td style="text-align:left">允许程序管理AccountManager中的账户列表</td></tr><tr><td style="text-align:center">android.permission.MANAGE_APP_TOKENS</td><td style="text-align:left">管理程序引用</td><td style="text-align:left">管理创建、摧毁、Z轴顺序,仅用于系统</td></tr><tr><td style="text-align:center">android.permission.MTWEAK_USER</td><td style="text-align:left">高级权限</td><td style="text-align:left">允许mTweak用户访问高级系统权限</td></tr><tr><td style="text-align:center">android.permission.MTWEAK_FORUM</td><td style="text-align:left">社区权限</td><td style="text-align:left">允许使用mTweak社区权限</td></tr><tr><td style="text-align:center">android.permission.MASTER_CLEAR</td><td style="text-align:left">软格式化</td><td style="text-align:left">允许程序执行软格式化,删除系统配置信息</td></tr><tr><td style="text-align:center">android.permission.MODIFY_AUDIO_SETTINGS</td><td style="text-align:left">修改声音设置</td><td style="text-align:left">修改声音设置信息</td></tr><tr><td style="text-align:center">android.permission.MODIFY_PHONE_STATE</td><td style="text-align:left">修改电话状态</td><td style="text-align:left">修改电话状态,如飞行模式,但不包含替换系统拨号器界面</td></tr><tr><td style="text-align:center">android.permission.MOUNT_FORMAT_FILESYSTEMS</td><td style="text-align:left">格式化文件系统</td><td style="text-align:left">格式化可移动文件系统,比如格式化清空SD卡</td></tr><tr><td style="text-align:center">android.permission.MOUNT_UNMOUNT_FILESYSTEMS</td><td style="text-align:left">挂载文件系统</td><td style="text-align:left">挂载、反挂载外部文件系统</td></tr><tr><td style="text-align:center">android.permission.NFC</td><td style="text-align:left">允许NFC通讯</td><td style="text-align:left">允许程序执行NFC近距离通讯操作,用于移动支持</td></tr><tr><td style="text-align:center">android.permission.PERSISTENT_ACTIVITY</td><td style="text-align:left">永久Activity</td><td style="text-align:left">创建一个永久的Activity,该功能标记为将来将被移除</td></tr><tr><td style="text-align:center">android.permission.PROCESS_OUTGOING_CALLS</td><td style="text-align:left">处理拨出电话</td><td style="text-align:left">允许程序监视,修改或放弃播出电话</td></tr><tr><td style="text-align:center">android.permission.READ_CALENDAR</td><td style="text-align:left">读取日程提醒</td><td style="text-align:left">允许程序读取用户的日程信息</td></tr><tr><td style="text-align:center">android.permission.READ_CONTACTS</td><td style="text-align:left">读取联系人</td><td style="text-align:left">允许应用访问联系人通讯录信息</td></tr><tr><td style="text-align:center">android.permission.READ_FRAME_BUFFER</td><td style="text-align:left">屏幕截图</td><td style="text-align:left">读取帧缓存用于屏幕截图</td></tr><tr><td style="text-align:center">com.android.browser.permission.READ_HISTORY_BOOKMARKS</td><td style="text-align:left">读取收藏夹和历史记录</td><td style="text-align:left">读取浏览器收藏夹和历史记录</td></tr><tr><td style="text-align:center">android.permission.READ_INPUT_STATE</td><td style="text-align:left">读取输入状态</td><td style="text-align:left">读取当前键的输入状态,仅用于系统</td></tr><tr><td style="text-align:center">android.permission.READ_LOGS</td><td style="text-align:left">读取系统日志</td><td style="text-align:left">读取系统底层日志</td></tr><tr><td style="text-align:center">android.permission.READ_PHONE_STATE</td><td style="text-align:left">读取电话状态</td><td style="text-align:left">访问电话状态</td></tr><tr><td style="text-align:center">android.permission.READ_SMS</td><td style="text-align:left">读取短信内容</td><td style="text-align:left">读取短信内容</td></tr><tr><td style="text-align:center">android.permission.READ_SYNC_SETTINGS</td><td style="text-align:left">读取同步设置</td><td style="text-align:left">读取同步设置,读取Google在线同步设置</td></tr><tr><td style="text-align:center">android.permission.READ_SYNC_STATS</td><td style="text-align:left">读取同步状态</td><td style="text-align:left">读取同步状态,获得Google在线同步状态</td></tr><tr><td style="text-align:center">android.permission.REBOOT</td><td style="text-align:left">重启设备</td><td style="text-align:left">允许程序重新启动设备</td></tr><tr><td style="text-align:center">android.permission.RECEIVE_BOOT_COMPLETED</td><td style="text-align:left">开机自动允许</td><td style="text-align:left">允许程序开机自动运行</td></tr><tr><td style="text-align:center">android.permission.RECEIVE_MMS</td><td style="text-align:left">接收彩信</td><td style="text-align:left">接收彩信</td></tr><tr><td style="text-align:center">android.permission.RECEIVE_SMS</td><td style="text-align:left">接收短信</td><td style="text-align:left">接收短信</td></tr><tr><td style="text-align:center">android.permission.RECEIVE_WAP_PUSH</td><td style="text-align:left">接收Wap Push</td><td style="text-align:left">接收WAP PUSH信息</td></tr><tr><td style="text-align:center">android.permission.RECORD_AUDIO</td><td style="text-align:left">录音</td><td style="text-align:left">录制声音通过手机或耳机的麦克</td></tr><tr><td style="text-align:center">android.permission.REORDER_TASKS</td><td style="text-align:left">排序系统任务</td><td style="text-align:left">重新排序系统Z轴运行中的任务</td></tr><tr><td style="text-align:center">android.permission.RESTART_PACKAGES</td><td style="text-align:left">结束系统任务</td><td style="text-align:left">结束任务通过restartPackage(String)方法,该方式将在外来放弃</td></tr><tr><td style="text-align:center">android.permission.SEND_SMS</td><td style="text-align:left">发送短信</td><td style="text-align:left">发送短信</td></tr><tr><td style="text-align:center">android.permission.SET_ACTIVITY_WATCHER</td><td style="text-align:left">设置Activity观察其</td><td style="text-align:left">设置Activity观察器一般用于monkey测试</td></tr><tr><td style="text-align:center">com.android.alarm.permission.SET_ALARM</td><td style="text-align:left">设置闹铃提醒</td><td style="text-align:left">设置闹铃提醒</td></tr><tr><td style="text-align:center">android.permission.SET_ALWAYS_FINISH</td><td style="text-align:left">设置总是退出</td><td style="text-align:left">设置程序在后台是否总是退出</td></tr><tr><td style="text-align:center">android.permission.SET_ANIMATION_SCALE</td><td style="text-align:left">设置动画缩放</td><td style="text-align:left">设置全局动画缩放</td></tr><tr><td style="text-align:center">android.permission.SET_DEBUG_APP</td><td style="text-align:left">设置调试程序</td><td style="text-align:left">设置调试程序,一般用于开发</td></tr><tr><td style="text-align:center">android.permission.SET_ORIENTATION</td><td style="text-align:left">设置屏幕方向</td><td style="text-align:left">设置屏幕方向为横屏或标准方式显示,不用于普通应用</td></tr><tr><td style="text-align:center">android.permission.SET_PREFERRED_APPLICATIONS</td><td style="text-align:left">设置应用参数</td><td style="text-align:left">设置应用的参数,已不再工作具体查看addPackageToPreferred(String)介绍</td></tr><tr><td style="text-align:center">android.permission.SET_PROCESS_LIMIT</td><td style="text-align:left">设置进程限制</td><td style="text-align:left">允许程序设置最大的进程数量的限制</td></tr><tr><td style="text-align:center">android.permission.SET_TIME</td><td style="text-align:left">设置系统时间</td><td style="text-align:left">设置系统时间</td></tr><tr><td style="text-align:center">android.permission.SET_TIME_ZONE</td><td style="text-align:left">设置系统时区</td><td style="text-align:left">设置系统时区</td></tr><tr><td style="text-align:center">android.permission.SET_WALLPAPER</td><td style="text-align:left">设置桌面壁纸</td><td style="text-align:left">设置桌面壁纸</td></tr><tr><td style="text-align:center">android.permission.SET_WALLPAPER_HINTS</td><td style="text-align:left">设置壁纸建议</td><td style="text-align:left">设置壁纸建议</td></tr><tr><td style="text-align:center">android.permission.SIGNAL_PERSISTENT_PROCESSES</td><td style="text-align:left">发送永久进程信号</td><td style="text-align:left">发送一个永久的进程信号</td></tr><tr><td style="text-align:center">android.permission.STATUS_BAR</td><td style="text-align:left">状态栏控制</td><td style="text-align:left">允许程序打开、关闭、禁用状态栏</td></tr><tr><td style="text-align:center">android.permission.SUBSCRIBED_FEEDS_READ</td><td style="text-align:left">访问订阅内容</td><td style="text-align:left">访问订阅信息的数据库</td></tr><tr><td style="text-align:center">android.permission.SUBSCRIBED_FEEDS_WRITE</td><td style="text-align:left">写入订阅内容</td><td style="text-align:left">写入或修改订阅内容的数据库</td></tr><tr><td style="text-align:center">android.permission.SYSTEM_ALERT_WINDOW</td><td style="text-align:left">显示系统窗口</td><td style="text-align:left">显示系统窗口</td></tr><tr><td style="text-align:center">android.permission.UPDATE_DEVICE_STATS</td><td style="text-align:left">更新设备状态</td><td style="text-align:left">更新设备状态</td></tr><tr><td style="text-align:center">android.permission.USE_CREDENTIALS</td><td style="text-align:left">使用证书</td><td style="text-align:left">允许程序请求验证从AccountManager</td></tr><tr><td style="text-align:center">android.permission.USE_SIP</td><td style="text-align:left">使用SIP视频</td><td style="text-align:left">允许程序使用SIP视频服务</td></tr><tr><td style="text-align:center">android.permission.VIBRATE</td><td style="text-align:left">使用振动</td><td style="text-align:left">允许振动</td></tr><tr><td style="text-align:center">android.permission.WAKE_LOCK</td><td style="text-align:left">唤醒锁定</td><td style="text-align:left">允许程序在手机屏幕关闭后后台进程仍然运行</td></tr><tr><td style="text-align:center">android.permission.WRITE_APN_SETTINGS</td><td style="text-align:left">写入GPRS接入点设置</td><td style="text-align:left">写入网络GPRS接入点设置</td></tr><tr><td style="text-align:center">android.permission.WRITE_CALENDAR</td><td style="text-align:left">写入日程提醒</td><td style="text-align:left">写入日程,但不可读取</td></tr><tr><td style="text-align:center">android.permission.WRITE_CONTACTS</td><td style="text-align:left">写入联系人</td><td style="text-align:left">写入联系人,但不可读取</td></tr><tr><td style="text-align:center">android.permission.WRITE_EXTERNAL_STORAGE</td><td style="text-align:left">写入外部存储</td><td style="text-align:left">允许程序写入外部存储,如SD卡上写文件</td></tr><tr><td style="text-align:center">android.permission.WRITE_GSERVICES</td><td style="text-align:left">写入Google地图数据</td><td style="text-align:left">允许程序写入Google Map服务数据</td></tr><tr><td style="text-align:center">com.android.browser.permission.WRITE_HISTORY_BOOKMARKS</td><td style="text-align:left">写入收藏夹和历史记录</td><td style="text-align:left">写入浏览器历史记录或收藏夹,但不可读取</td></tr><tr><td style="text-align:center">android.permission.WRITE_SECURE_SETTINGS</td><td style="text-align:left">读写系统敏感设置</td><td style="text-align:left">允许程序读写系统安全敏感的设置项</td></tr><tr><td style="text-align:center">android.permission.WRITE_SETTINGS</td><td style="text-align:left">读写系统设置</td><td style="text-align:left">允许读写系统设置项</td></tr><tr><td style="text-align:center">android.permission.WRITE_SMS</td><td style="text-align:left">编写短信</td><td style="text-align:left">允许编写短信</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android权限描述，方便自己查找。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>浅析JS中的模块化(CommonJS,AMD,CMD)</title>
    <link href="http://hackycy.github.io/2019/05/07/%E6%B5%85%E6%9E%90JS%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97%E5%8C%96-CommonJS-AMD-CMD/"/>
    <id>http://hackycy.github.io/2019/05/07/浅析JS中的模块化-CommonJS-AMD-CMD/</id>
    <published>2019-05-07T14:27:33.000Z</published>
    <updated>2019-05-09T02:15:59.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>历史上，JavaScript一直都没有模块（module）体系，这就导致了在大项目中无法拆分成互相依赖的小文件，再进行拼装。这对开发复杂的项目形成了巨大的障碍。</p><a id="more"></a><h1 id="模块化概念"><a href="#模块化概念" class="headerlink" title="模块化概念"></a>模块化概念</h1><p>理想情况下，开发者只需要实现核心的业务逻辑，其他都可以加载别人已经写好的模块。</p><p><strong>原始的写法</strong></p><p>模块就是实现某个特定功能的方法，只要把不同的函数或变量放在一起就算是一个模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _count = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">m1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'m1'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">m2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'m2'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// m1();</span></span><br><span class="line"><span class="comment">// m2();</span></span><br><span class="line"><span class="comment">// console.log(_count);</span></span><br></pre></td></tr></table></figure><p>这里的m1,m2方法组成了一个模块，使用的时候直接调用即可。但是这样很明显有一个缺点：“污染”全局变量，没有办法保证模块与模块之间不发生变量名或者方法名冲突，并且模块间与模块间并无法分清是否有直接联系。</p><p><strong>对象写法</strong></p><p>对于原始写法的缺点，将方法或者变量声明在某个对象中，像m1,m2函数都封装在对象体内，需要时再用对象进行调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> module1 = &#123;</span><br><span class="line">    _count: <span class="number">0</span>,</span><br><span class="line">    m1: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'m1'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    m2: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'m2'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// module1.m1();</span></span><br><span class="line"><span class="comment">// module1.m2();</span></span><br><span class="line"><span class="comment">// console.log(module1._count);</span></span><br></pre></td></tr></table></figure><p>但是这样依然会有缺点：暴露出了模块的所有成员，内部状态可以被改写，比如内部_count变量会被外部直接改写。</p><p><strong>立即执行函数写法</strong></p><p>会涉及到闭包的概念，用‘立即执行函数’（Immediately-Invoked Function Expression，IIFE）即可以达到不暴露私有成员的目的。类似于jQuery的封装。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> module1 = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">m1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'m1'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">m2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'m2'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        m1: m1,</span><br><span class="line">        m2: m2,</span><br><span class="line">        getCount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> _count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// module1.m1();</span></span><br><span class="line"><span class="comment">// module1.m2();</span></span><br><span class="line"><span class="comment">// console.log(module1._count); //undefined</span></span><br><span class="line"><span class="comment">// console.log(module1.getCount()); //0</span></span><br></pre></td></tr></table></figure><h1 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h1><p><a href="[http://wiki.commonjs.org/wiki/CommonJS](http://wiki.commonjs.org/wiki/CommonJS">CommonJS</a>) 是以在浏览器环境之外构建 JavaScript 生态系统为目标而产生的项目，比如在服务器和桌面环境中。</p><blockquote><p>2009年，美国程序员Ryan Dahl创造了node.js项目，将javascript语言用于服务器端编程。</p></blockquote><blockquote><p>这标志”Javascript模块化编程”正式诞生。前端的复杂程度有限，没有模块也是可以的，但是在服务器端，一定要有模块，与操作系统和其他应用程序互动，否则根本没法编程。</p></blockquote><blockquote><p>node编程中最重要的思想之一就是模块，而正是这个思想，让JavaScript的大规模工程成为可能。模块化编程在js界流行，也是基于此，随后在浏览器端，requirejs和seajs之类的工具包也出现了，可以说在对应规范下，require统治了ES6之前的所有模块化编程，即使现在，在ES6 module被完全实现之前，还是这样。</p></blockquote><p><img src="commonjs.png" alt=""></p><p>例如在Node中，Node 应用由模块组成，采用 CommonJS 模块规范。</p><p>每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。</p><p>CommonJS规范规定，每个模块内部，<code>module</code>变量代表当前模块。这个变量是一个对象，它的·<code>exports</code>属性（即·<code>module.exports</code>）是对外的接口。加载某个模块，其实是加载该模块的·<code>module.exports</code>属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user.js</span></span><br><span class="line"><span class="keyword">var</span> _count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> expose_num = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> m1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'m1'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> m2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'m2'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> getCount = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports.m1 = m1;</span><br><span class="line"><span class="built_in">module</span>.exports.m2 = m2;</span><br><span class="line"><span class="built_in">module</span>.exports.getCount = getCount;</span><br><span class="line"><span class="built_in">module</span>.exports.expose_num = expose_num;</span><br></pre></td></tr></table></figure><p>上面代码通过<code>module.exports</code>输出变量<code>expose_num</code>和函数<code>m1</code>,<code>m2</code>,<code>getCount</code>。</p><p><code>require</code>方法进行加载模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">const</span> module1 = <span class="built_in">require</span>(<span class="string">'./user.js'</span>);</span><br><span class="line">module1.m1(); <span class="comment">//m1</span></span><br><span class="line">module1.m2(); <span class="comment">//m2</span></span><br><span class="line"><span class="built_in">console</span>.log(module1.getCount()); <span class="comment">//0</span></span><br><span class="line"><span class="built_in">console</span>.log(module1.expose_num); <span class="comment">//100</span></span><br></pre></td></tr></table></figure><p><strong>module.exports属性</strong></p><p><code>module.exports</code>属性表示当前模块对外输出的接口，其他文件加载该模块，实际上就是读取<code>module.exports</code>变量。</p><p><strong>exports变量</strong></p><p>为了方便，Node为每个模块提供一个<code>exports</code>变量，指向<code>module.exports</code>。这等同在每个模块头部，有一行这样的命令。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> exports = <span class="built_in">module</span>.exports;</span><br></pre></td></tr></table></figure><blockquote><p>如果你觉得，<code>exports</code>与<code>module.exports</code>之间的区别很难分清，一个简单的处理方法，就是放弃使用<code>exports</code>，只使用<code>module.exports</code>。</p><p>es6中为<code>export</code>,注意区分。</p></blockquote><p><strong>CommonJS模块的特点如下</strong></p><ul><li>所有代码都运行在模块作用域，不会污染全局作用域。</li><li>模块可以多次加载，但是只会在第一次加载时运行一次，然后运行结果就被缓存了，以后再加载，就直接读取缓存结果。要想让模块再次运行，必须清除缓存。</li><li>模块加载的顺序，按照其在代码中出现的顺序。</li></ul><p>详细学习使用请参考链接：<a href="https://javascript.ruanyifeng.com/nodejs/module.html" target="_blank" rel="noopener">https://javascript.ruanyifeng.com/nodejs/module.html</a></p><h1 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h1><p>有了服务器端的模块化后，很自然客户端也需要进行模块化，最好两者能够兼容，并且在服务器和浏览器都能够运行。也由于一个重大的局限，使得CommonJS规范不适用于浏览器环境上。</p><p><img src="amd.png" alt=""></p><p>就例如上述中CommonJS中的案例代码，在未加载完第一行的<code>require(&#39;./user.js&#39;)</code>代码时，后面的<code>module1.m1()</code>等的方法都会进行等待第一行完成后才可以继续运行。这对服务端来说不是问题，因为所有的模块都存放在本地硬盘，没有网络等其他原因，可以很快的同步加载完成，只需要等待硬盘的读取时间。但是对于浏览器环境，却是一个很大的问题，因为所有的模块都放置于服务端，等待时间不是取决于硬盘，而是取决于网速的快慢，这就导致了可能会导致等待时间过长，导致浏览器出现’假死’状态。</p><p>因此浏览器端的模块不可以采用’同步加载’（synchronous），只能使用’异步加载’（asynchronous）。这就是<a href="[https://github.com/amdjs/amdjs-api/wiki/AMD-(%E4%B8%AD%E6%96%87%E7%89%88">AMD</a>](<a href="https://github.com/amdjs/amdjs-api/wiki/AMD-(中文版))规范的诞生背景。" target="_blank" rel="noopener">https://github.com/amdjs/amdjs-api/wiki/AMD-(中文版))规范的诞生背景。</a></p><blockquote><p>所谓AMD即Asynchronous Module Definition的缩写，意思就是’异步模块定义’。它采用异步方式加载模块，模块的加载不影响后面的语句的运行。所有依赖这个模块的语句，都定义在一个回调函数中，等到加载完成之后，这个回调函数才会运行。</p></blockquote><p>该规范只定义了一个函数 <code>define</code>，它是全局变量。函数的描述为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(id?, dependencies?, factory);</span><br></pre></td></tr></table></figure><ul><li>id：第一个参数，id，是个字符串。它指的是定义中模块的名字，这个参数是可选的</li><li>dependencies：第二个参数，dependencies，是个定义中模块所依赖模块的数组</li><li>factory：第三个参数，factory，为模块初始化要执行的函数或对象。</li></ul><p>例如在<code>RequireJS</code>中，</p><blockquote><p>RequireJS是一个工具库，主要用于客户端的模块管理。它可以让客户端的代码分成一个个模块，实现异步或动态加载，从而提高代码的性能和可维护性。它的模块管理遵守<a href="https://github.com/amdjs/amdjs-api/wiki/AMD" target="_blank" rel="noopener">AMD规范</a>（Asynchronous Module Definition）。</p></blockquote><blockquote><p>RequireJS的基本思想是，通过define方法，将代码定义为模块；通过require方法，实现代码的模块加载。</p></blockquote><p>首先，将require.js嵌入网页，然后就能在网页中进行模块化编程了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-main</span>=<span class="string">"app"</span> <span class="attr">src</span>=<span class="string">"https://requirejs.org/docs/release/2.3.6/comments/require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面代码的<code>data-main</code>属性不可省略，用于指定主代码所在的脚本文件，在上例中为当前目录下的<code>app.js</code>文件。用户自定义的代码就放在这个<code>app.js</code>文件中。</p><p><strong>define方法：定义模块</strong></p><ul><li>独立模块</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user.js</span></span><br><span class="line">define(&#123;</span><br><span class="line">    m1:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'m1'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    m2:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'m2'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>另一种等价的写法是，把对象写成一个函数，该函数的返回值就是输出的模块。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user.js</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        m1:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'m1'</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        m2:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'m2'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>后一种写法的自由度更高一点，可以在函数体内写一些模块初始化代码。值得指出的是，define定义的模块可以返回任何值，不限于对象。</p></blockquote><ul><li>非独立模块</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cart.js</span></span><br><span class="line">define([<span class="string">'user'</span>], <span class="function"><span class="keyword">function</span> (<span class="params">user</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'cart'</span>);</span><br><span class="line">    user.m1();</span><br><span class="line">    user.m2();</span><br><span class="line">    <span class="keyword">var</span> getCartCount = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        getCartCount:getCartCount</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>define方法的第一个参数是一个数组，它的成员是当前模块所依赖的模块。比如，[‘user’]表示我们定义的这个新模块依赖于user模块，只有先加载这两个模块，新模块才能正常运行。一般情况下，user模块指的是，当前目录下的user.js文件，等同于写成[’./user’]。</p><p>define方法的第二个参数是一个函数，当前面数组的所有成员加载成功后，它将被调用。它的参数与数组的成员一一对应，比如function(user)就表示，这个函数的第一个参数user对应user模块，以此类推。这个函数必须返回一个对象，供其他模块调用。</p><p><strong>require方法：调用模块</strong></p><p>require方法用于调用模块。它的参数与define方法类似。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">'cart'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">cart</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//...do</span></span><br><span class="line">    <span class="built_in">console</span>.log(cart.getCartCount());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//输出：</span></span><br><span class="line"><span class="comment">//cart</span></span><br><span class="line"><span class="comment">//m1</span></span><br><span class="line"><span class="comment">//m2</span></span><br><span class="line"><span class="comment">//100</span></span><br></pre></td></tr></table></figure><p>上面方法表示加载cart一个模块，当这一个模块都加载成功后，执行一个回调函数。该回调函数就用来完成具体的任务。而<code>cart.getCartCount()</code>和<code>cart</code>模块加载不是同步的，浏览器不会再发生假死状态，所以AMD规范更适合浏览器环境。</p><blockquote><p>require方法也可以用在define方法内部，即动态加载。</p></blockquote><p>define和require这两个定义模块、调用模块的方法，合称为AMD模式。它的模块定义的方法非常清晰，不会污染全局环境，能够清楚地显示依赖关系。</p><p>AMD模式可以用于浏览器环境，并且允许非同步加载模块，也可以根据需要动态加载模块。</p><p>详细学习使用请参考链接：<a href="https://javascript.ruanyifeng.com/tool/requirejs.html" target="_blank" rel="noopener">https://javascript.ruanyifeng.com/tool/requirejs.html</a></p><h1 id="AMD规范与CommonJS规范的兼容性"><a href="#AMD规范与CommonJS规范的兼容性" class="headerlink" title="AMD规范与CommonJS规范的兼容性"></a>AMD规范与CommonJS规范的兼容性</h1><p>CommonJS规范加载模块是同步的，也就是说，只有加载完成，才能执行后面的操作。AMD规范则是非同步加载模块，允许指定回调函数。由于Node.js主要用于服务器编程，模块文件一般都已经存在于本地硬盘，所以加载起来比较快，不用考虑非同步加载的方式，所以CommonJS规范比较适用。但是，如果是浏览器环境，要从服务器端加载模块，这时就必须采用非同步模式，因此浏览器端一般采用AMD规范。</p><p>AMD规范使用define方法定义模块，下面就是一个例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">define([<span class="string">'package/lib'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">lib</span>)</span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    lib.log(<span class="string">'hello world!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    foo: foo</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>AMD规范允许输出的模块兼容CommonJS规范，这时<code>define</code>方法需要写成下面这样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> someModule = <span class="built_in">require</span>(<span class="string">"someModule"</span>);</span><br><span class="line">  <span class="keyword">var</span> anotherModule = <span class="built_in">require</span>(<span class="string">"anotherModule"</span>);</span><br><span class="line"></span><br><span class="line">  someModule.doTehAwesome();</span><br><span class="line">  anotherModule.doMoarAwesome();</span><br><span class="line"></span><br><span class="line">  exports.asplode = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    someModule.doTehAwesome();</span><br><span class="line">    anotherModule.doMoarAwesome();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h1><p><a href="https://github.com/seajs/seajs/issues/242" target="_blank" rel="noopener">CMD</a> 是 SeaJS 在推广过程中对模块定义的规范化产出。</p><p>首先通过 <code>script</code> 引入 <code>sea.js</code> 后，有一段配置代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// seajs 的简单配置</span></span><br><span class="line">seajs.config(&#123;</span><br><span class="line">  base: <span class="string">"../sea-modules/"</span>,</span><br><span class="line">  alias: &#123;</span><br><span class="line">    <span class="string">"jquery"</span>: <span class="string">"jquery/jquery/1.10.1/jquery.js"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载入口模块</span></span><br><span class="line">seajs.use(<span class="string">"../static/hello/src/main"</span>)</span><br></pre></td></tr></table></figure><p><code>sea.js</code> 在下载完成后，会自动加载入口模块。页面中的代码就这么简单。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(id?, deps?, factory)</span><br></pre></td></tr></table></figure><ul><li>id：第一个参数，id，是个字符串。它指的是定义中模块的名字，这个参数是可选的</li><li>deps：第二个参数，dependencies，是个定义中模块所依赖模块的数组</li><li>factory：第三个参数，factory，为模块初始化要执行的函数或对象。</li></ul><blockquote><p>注意：带 id 和 dependencies 参数的 define 用法不属于 CMD 规范，而属于 Modules/Transport 规范。</p></blockquote><p>如果一个模块不依赖其他模块，那么可以直接定义在define()函数之中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 所有模块都通过 define 来定义</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 require 引入依赖</span></span><br><span class="line">  <span class="keyword">var</span> $ = <span class="built_in">require</span>(<span class="string">'jquery'</span>);</span><br><span class="line">  <span class="keyword">var</span> Spinning = <span class="built_in">require</span>(<span class="string">'./spinning'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 exports 对外提供接口</span></span><br><span class="line">  exports.doSomething = ...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 或者通过 module.exports 提供整个接口</span></span><br><span class="line">  <span class="built_in">module</span>.exports = ...</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上面就是 Sea.js 推荐的 CMD 模块书写格式。如果你有使用过 Node.js，一切都很自然。</p><p>详细学习使用请参考链接：<a href="https://seajs.github.io/seajs/docs/#quick-start" target="_blank" rel="noopener">https://seajs.github.io/seajs/docs/#quick-start</a></p><h1 id="AMD和CMD的区别"><a href="#AMD和CMD的区别" class="headerlink" title="AMD和CMD的区别"></a>AMD和CMD的区别</h1><p>AMD和CMD最大的区别是对依赖模块的执行时机处理不同，而不是加载的时机或者方式不同，二者皆为异步加载模块。</p><ul><li><p>AMD依赖前置，js可以方便知道依赖模块是谁，立即加载；</p></li><li><p>CMD就近依赖，需要使用把模块变为字符串解析一遍才知道依赖了那些模块。</p></li><li><p>AMD 的 API 默认是<strong>一个当多个用</strong>，CMD 的 API 严格区分，推崇<strong>职责单一</strong>。比如 AMD 里，require 分全局 require 和局部 require，都叫 require。CMD 里，没有全局 require，而是根据模块系统的完备性，提供 seajs.use 来实现模块系统的加载启动。CMD 里，每个 API 都<strong>简单纯粹</strong>。</p></li></ul><p>CMD 推崇<strong>依赖就近</strong>，AMD 推崇<strong>依赖前置</strong></p><blockquote><p>RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CMD</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;   </span><br><span class="line">  <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'./a'</span>)   </span><br><span class="line">a.doSomething()   </span><br><span class="line"> <span class="comment">// 此处略去 100 行   </span></span><br><span class="line"> <span class="keyword">var</span> b = <span class="built_in">require</span>(<span class="string">'./b'</span>) </span><br><span class="line"> <span class="comment">// 依赖可以就近书写   </span></span><br><span class="line"> b.doSomething()   </span><br><span class="line"> <span class="comment">// ... </span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AMD 默认推荐的是</span></span><br><span class="line">define([<span class="string">'./a'</span>, <span class="string">'./b'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;  </span><br><span class="line">  <span class="comment">// 依赖必须一开始就写好    </span></span><br><span class="line">  a.doSomething()    </span><br><span class="line"><span class="comment">// 此处略去 100 行    </span></span><br><span class="line">b.doSomething()    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>即使AMD也可以支持CMD的写法，因为define内部也可以使用require，前面有提到。但是RequireJS 的作者默认是最喜欢上面的写法，也是官方文档里默认的模块定义写法。</p><h1 id="ES6-Module"><a href="#ES6-Module" class="headerlink" title="ES6 Module"></a>ES6 Module</h1><p>ES6 模块的设计思想是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。</p><p><strong>export导出模块</strong></p><p>模块功能主要由两个命令构成：<code>export</code>和<code>import</code>。<code>export</code>命令用于规定模块的对外接口，<code>import</code>命令用于输入其他模块提供的功能。</p><p>一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。如果你希望外部能够读取模块内部的某个变量，就必须使用<code>export</code>关键字输出该变量。下面是一个 JS 文件，里面使用<code>export</code>命令输出变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// profile.js</span></span><br><span class="line"><span class="keyword">var</span> firstName = <span class="string">'Michael'</span>;</span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">'Jackson'</span>;</span><br><span class="line"><span class="keyword">var</span> year = <span class="number">1958</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;firstName, lastName, year&#125;;</span><br></pre></td></tr></table></figure><p><code>export</code>命令除了输出变量，还可以输出函数或类（class）。</p><p><strong>import导入模块</strong></p><p>使用<code>export</code>命令定义了模块的对外接口以后，其他 JS 文件就可以通过<code>import</code>命令加载这个模块。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;firstName, lastName, year&#125; <span class="keyword">from</span> <span class="string">'./profile.js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setName</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">  element.textContent = firstName + <span class="string">' '</span> + lastName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的<code>import</code>命令，用于加载<code>profile.js</code>文件，并从中输入变量。<code>import</code>命令接受一对大括号，里面指定要从其他模块导入的变量名。大括号里面的变量名，必须与被导入模块（<code>profile.js</code>）对外接口的名称相同。</p><p><strong>export default默认导出</strong></p><p>从前面的例子可以看出，使用<code>import</code>命令的时候，用户需要知道所要加载的变量名或函数名，否则无法加载。但是，用户肯定希望快速上手，未必愿意阅读文档，去了解模块有哪些属性和方法。</p><p>为了给用户提供方便，让他们不用阅读文档就能加载模块，就要用到<code>export default</code>命令，为模块指定默认输出。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export-default.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'foo'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码是一个模块文件<code>export-default.js</code>，它的默认输出是一个函数。</p><p>其他模块加载该模块时，<code>import</code>命令可以为该匿名函数指定任意名字。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import-default.js</span></span><br><span class="line"><span class="keyword">import</span> customName <span class="keyword">from</span> <span class="string">'./export-default'</span>;</span><br><span class="line">customName(); <span class="comment">// 'foo'</span></span><br></pre></td></tr></table></figure><p>ES6中Module还有很多语法，这里主要讲解es6前js的模块化概念，所以不多概述使用，详细使用参考下面链接。</p><p>详细学习使用请参考链接：<a href="https://es6.ruanyifeng.com/#docs/module" target="_blank" rel="noopener">https://es6.ruanyifeng.com/#docs/module</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;历史上，JavaScript一直都没有模块（module）体系，这就导致了在大项目中无法拆分成互相依赖的小文件，再进行拼装。这对开发复杂的项目形成了巨大的障碍。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://hackycy.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://hackycy.github.io/tags/JavaScript/"/>
    
      <category term="CommonJS" scheme="http://hackycy.github.io/tags/CommonJS/"/>
    
      <category term="AMD" scheme="http://hackycy.github.io/tags/AMD/"/>
    
      <category term="CMD" scheme="http://hackycy.github.io/tags/CMD/"/>
    
  </entry>
  
  <entry>
    <title>PHP常用函数参考表</title>
    <link href="http://hackycy.github.io/2019/05/05/PHP%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83%E8%A1%A8/"/>
    <id>http://hackycy.github.io/2019/05/05/PHP常用函数参考表/</id>
    <published>2019-05-05T14:26:40.000Z</published>
    <updated>2019-05-05T15:28:36.958Z</updated>
    
    <content type="html"><![CDATA[<p>各种常用的php函数，包括php字符串函数,php数组函数,php数学函数,mysql函数,文件目录函数,GD库函数,SESSION函数,Date/Time 函数等，涵盖了php基本操作所涉及的各类常用函数，并针对各个函数提供了简单的解释说明，方便查阅</p><a id="more"></a><h1 id="字符串相关操作函数"><a href="#字符串相关操作函数" class="headerlink" title="字符串相关操作函数"></a>字符串相关操作函数</h1><h2 id="去除空格或其他字符"><a href="#去除空格或其他字符" class="headerlink" title="去除空格或其他字符"></a>去除空格或其他字符</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>trim</td><td>删除字符串两端空格或其他预定义字符</td></tr><tr><td>rtrim</td><td>删除字符串右边空格或其他预定义字符</td></tr><tr><td>chop</td><td>rtrim() 的别名 chop() 与 Perl 的 chop() 函数有所不同，它会删除字符串的最后一个字符。</td></tr><tr><td>ltrim</td><td>删除字符串左边空格或其他预定义字符</td></tr></tbody></table><h2 id="字符串生成与转换"><a href="#字符串生成与转换" class="headerlink" title="字符串生成与转换"></a>字符串生成与转换</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>str_pad</td><td>使用另一个字符串填充字符串为指定长度</td></tr><tr><td>str_replace</td><td>子字符串替换</td></tr><tr><td>str_split</td><td>将字符串转换为数组</td></tr><tr><td>strrev</td><td>反转字符串</td></tr><tr><td>wordwrap</td><td>打断字符串为指定数量的字串</td></tr><tr><td>str_shuffle</td><td>随机打乱一个字符串</td></tr><tr><td>parse_str</td><td>将字符串解析成变量</td></tr><tr><td>number_format</td><td>通过千位分组来格式化字符串</td></tr></tbody></table><h2 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>strtolower</td><td>将字符串转化为小写</td></tr><tr><td>strtoupper</td><td>将字符串转化为大写</td></tr><tr><td>ucfirst</td><td>将字符串的首字母转换为大写</td></tr><tr><td>ucwords</td><td>将字符串中每个单词的首字母转换为大写</td></tr></tbody></table><h2 id="html标签关联"><a href="#html标签关联" class="headerlink" title="html标签关联"></a>html标签关联</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>htmlentities</td><td>将字符转换为HTML实体</td></tr><tr><td>htmlspecialchars</td><td>预定义字符串转HTML编码</td></tr><tr><td>nl2br</td><td>在字符串所有新行之前插入 HTML 换行标记 <code>\n</code>转换为<code>&lt;br&gt;</code>标签</td></tr><tr><td>strip_tags</td><td>从字符串中去除 HTML 和 PHP 标记</td></tr><tr><td>addcslashes</td><td>以 C 语言风格使用反斜线转义字符串中的字符</td></tr><tr><td>stripcslashes</td><td>反引用一个使用 addcslashes() 转义的字符串</td></tr><tr><td>addslashes</td><td>使用反斜线引用字符串</td></tr><tr><td>stripslashes</td><td>删除由addslashes添加的转义字符</td></tr><tr><td>quotemeta</td><td>字符串中某些预定义字符串前加反斜杠</td></tr><tr><td>chr</td><td>从指定的 ASCII 值返回字符</td></tr><tr><td>ord</td><td>返回字符串第一个字符的 ASCII 值</td></tr></tbody></table><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>strcasecmp</td><td>不区分大小写比较两个字符串</td></tr><tr><td>strcmp</td><td>区分大小写比较两个字符串</td></tr><tr><td>strncmp</td><td>比较字符串前N个字符，区分大小写</td></tr><tr><td>strncasecmp</td><td>比较字符串前N个字符，不区分大小写</td></tr><tr><td>strnatmp</td><td>自然顺序法比较字符串长度，区分大小写</td></tr><tr><td>strnatcasecmp</td><td>自然顺序法比较字符串长度，不区分大小写</td></tr></tbody></table><h2 id="字符串查找替换"><a href="#字符串查找替换" class="headerlink" title="字符串查找替换"></a>字符串查找替换</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>str_replace</td><td>字符串替换操作，区分大小写</td></tr><tr><td>str_ireplace</td><td>字符串替换操作，不区分大小写</td></tr><tr><td>substr_count</td><td>统计一个字符串，在另一个字符串中出现的次数</td></tr><tr><td>substr_replace</td><td>替换字符串中某串为另一个字符串</td></tr><tr><td>similar_text</td><td>返回两字符串相同字符的数量</td></tr><tr><td>strrchr</td><td>返回一个字符串在另一个字符串中最后一次出现位置开始到末尾的字符串</td></tr><tr><td>strstr</td><td>返回一个字符串在另一个字符串中开始位置到结束位置的字符串</td></tr><tr><td>strchr</td><td>strstr的别名，返回一个字符串在另一个中首次出现位置开始到末尾的字符串</td></tr><tr><td>stristr</td><td>返回一个字符串在另一个字符串中开始位置到结束位置的字符串，不区分大小写</td></tr><tr><td>strtr</td><td>转换字符串中某些字符</td></tr><tr><td>strpos</td><td>寻找字符中某些字符最先出现的位置</td></tr><tr><td>stripos</td><td>寻找字符中某些字符最先出现的位置，不区分大小写</td></tr><tr><td>strrpos</td><td>寻找字符中某些字符最后出现的位置</td></tr><tr><td>strripos</td><td>寻找字符中某些字符最后出现的位置，不区分大小写</td></tr><tr><td>strspn</td><td>返回字符串中首次符合mask的字符串长度</td></tr><tr><td>strcspn</td><td>返回字符串中不符合mask的字符串的长度</td></tr></tbody></table><h2 id="字符串统计"><a href="#字符串统计" class="headerlink" title="字符串统计"></a>字符串统计</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>str_word_count</td><td>统计字符串含有的单词数</td></tr><tr><td>strlen</td><td>统计字符串长度</td></tr><tr><td>count_chars</td><td>统计字符串中所有字母出现的次数（0..255）</td></tr></tbody></table><h2 id="字符串编码"><a href="#字符串编码" class="headerlink" title="字符串编码"></a>字符串编码</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>md5</td><td>计算字符串的 MD5 散列值</td></tr><tr><td>hash</td><td>生成一个哈希码</td></tr></tbody></table><h1 id="数组相关函数"><a href="#数组相关函数" class="headerlink" title="数组相关函数"></a>数组相关函数</h1><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>array</td><td>生成一个数组</td></tr><tr><td>array_combine</td><td>生成一个数组，用一个数组的值作为键名，另一个数组的值作为值</td></tr><tr><td>range</td><td>创建并返回一个包含指定范围的元素的数组</td></tr><tr><td>compact</td><td>创建一个由参数所带变量组成的数组</td></tr><tr><td>array_fill</td><td>用给定的值填充生成数组</td></tr></tbody></table><h2 id="数组合并和拆分"><a href="#数组合并和拆分" class="headerlink" title="数组合并和拆分"></a>数组合并和拆分</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>array_chunk</td><td>把一个数组分割为新的数组块</td></tr><tr><td>array_merge</td><td>把两个或多个数组合并成一个数组</td></tr><tr><td>array_slice</td><td>在数组中根据条件取出一段值，并返回。</td></tr></tbody></table><h2 id="数组比较"><a href="#数组比较" class="headerlink" title="数组比较"></a>数组比较</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>array_diff</td><td>返回两个数组的差集数组</td></tr><tr><td>array_intersect</td><td>返回两个或多个数组的交集数组</td></tr></tbody></table><h2 id="数组查找替换"><a href="#数组查找替换" class="headerlink" title="数组查找替换"></a>数组查找替换</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>array_search</td><td>在数组中查找一个键值</td></tr><tr><td>array_splice</td><td>把数组一部分删除把其他值替代</td></tr><tr><td>array_sum</td><td>返回数组中所有值的总和</td></tr><tr><td>in_array</td><td>在数组中搜索指定的值，区分大小写</td></tr><tr><td>array_key_exists</td><td>判断某个数组中是否存在指定的key</td></tr></tbody></table><h2 id="数组指针操作"><a href="#数组指针操作" class="headerlink" title="数组指针操作"></a>数组指针操作</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>key</td><td>返回数组内部指针当前指向的键名</td></tr><tr><td>current</td><td>返回数组中的当前元素</td></tr><tr><td>next</td><td>把指向当前元素的指针移动到下一个元素位置，并返回当前元素的值</td></tr><tr><td>prev</td><td>把指向当前元素的指针移动到上一个元素位置，并返回当前元素的值</td></tr><tr><td>end</td><td>将数组内部指针指向最后一个元素，并返回该元素的值（如果成功）</td></tr><tr><td>reset</td><td>把数组内部指针指向第一个元素，并返回该元素的值</td></tr><tr><td>list</td><td>用数组中的元素为一组变量赋值</td></tr><tr><td>array_shift</td><td>删除数组中的第一个元素，并返回被删除元素的值</td></tr><tr><td>array_unshif</td><td>在数组开头插入一个或者多个元素</td></tr><tr><td>array_push</td><td>向数组最后压入一个或多个元素</td></tr><tr><td>array_pop</td><td>删除数组最后一个元素</td></tr></tbody></table><h2 id="数组键值操作"><a href="#数组键值操作" class="headerlink" title="数组键值操作"></a>数组键值操作</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>shuffle</td><td>将数组打乱，保留键名</td></tr><tr><td>count</td><td>计算数组中单元个数或者对象属性个数</td></tr><tr><td>array_flip</td><td>返回一个键值翻转后的数组</td></tr><tr><td>array_keys</td><td>返回数组所有键，组成一个数组</td></tr><tr><td>array_values</td><td>返回数组所有值，组成一个数组</td></tr><tr><td>array_reverse</td><td>返回一个元素顺序相反的数组</td></tr><tr><td>array_count_values</td><td>统计数组中所有值出现的次数</td></tr><tr><td>array_rand</td><td>从数组中随机抽取一个或者多个元素，注意是键名</td></tr><tr><td>each</td><td>返回数组中当前的键／值对并将数组指针向前移动一步</td></tr><tr><td>array_unique</td><td>移除数组中重复的值</td></tr></tbody></table><h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>sort</td><td>对数组排序</td></tr><tr><td>rsort</td><td>对数组逆向排序</td></tr><tr><td>asort</td><td>对数组进行排序并保持索引关系</td></tr><tr><td>arsort</td><td>对数组进行逆向排序并保持索引关系</td></tr><tr><td>ksort</td><td>对数组按照键名排序</td></tr><tr><td>krsort</td><td>对数组按照键名逆向排序</td></tr><tr><td>natsort</td><td>用“自然排序”算法对数组排序</td></tr><tr><td>natcasesort</td><td>用“自然排序”算法对数组进行不区分大小写字母的排序</td></tr></tbody></table><h1 id="数学相关函数"><a href="#数学相关函数" class="headerlink" title="数学相关函数"></a>数学相关函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>abs</td><td>求绝对值</td></tr><tr><td>ceil</td><td>进一法取整</td></tr><tr><td>floor</td><td>舍去法取整</td></tr><tr><td>fmod</td><td>返回除法的浮点数余数</td></tr><tr><td>pow</td><td>返回数的N次方</td></tr><tr><td>round</td><td>浮点数四舍五入法</td></tr><tr><td>sqrt</td><td>求平方根</td></tr><tr><td>max</td><td>求最大值</td></tr><tr><td>min</td><td>求最小值</td></tr><tr><td>mt_rand</td><td>更好的随机数</td></tr><tr><td>rand</td><td>随机数</td></tr><tr><td>pi</td><td>获得圆周率</td></tr><tr><td>octdec</td><td>八进制转换为十进制</td></tr></tbody></table><h1 id="mysql相关函数"><a href="#mysql相关函数" class="headerlink" title="mysql相关函数"></a>mysql相关函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>mysql_affected_rows</td><td>取得前一次 MySQL 操作所影响的记录行数</td></tr><tr><td>mysql_client_encoding</td><td>返回字符集的名称</td></tr><tr><td>mysql_close</td><td>关闭 MySQL 连接</td></tr><tr><td>mysql_connect</td><td>打开一个到 MySQL 服务器的连接</td></tr><tr><td>mysql_create_db</td><td>新建一个 MySQL 数据库</td></tr><tr><td>mysql_data_seek</td><td>移动内部结果的指针</td></tr><tr><td>mysql_db_name</td><td>取得结果数据</td></tr><tr><td>mysql_db_query</td><td>发送一条 MySQL 查询</td></tr><tr><td>mysql_drop_db</td><td>丢弃（删除）一个 MySQL 数据库</td></tr><tr><td>mysql_errno</td><td>返回上一个 MySQL 操作中的错误信息的数字编码</td></tr><tr><td>mysql_error</td><td>返回上一个 MySQL 操作产生的文本错误信息</td></tr><tr><td>mysql_escape_string</td><td>转义一个字符串用于 mysql_query</td></tr><tr><td>mysql_fetch_array</td><td>从结果集中取得一行作为关联数组，或数字数组，或二者兼有</td></tr><tr><td>mysql_fetch_assoc</td><td>从结果集中取得一行作为关联数组</td></tr><tr><td>mysql_fetch_field</td><td>从结果集中取得列信息并作为对象返回</td></tr><tr><td>mysql_fetch_lengths</td><td>取得结果集中每个输出的长度</td></tr><tr><td>mysql_fetch_object</td><td>从结果集中取得一行作为对象</td></tr><tr><td>mysql_fetch_object</td><td>从结果集中取得一行作为枚举数组</td></tr><tr><td>mysql_field_flags</td><td>从结果中取得和指定字段关联的标志</td></tr><tr><td>mysql_field_len</td><td>返回指定字段的长度</td></tr><tr><td>mysql_field_name</td><td>取得结果中指定字段的字段名</td></tr><tr><td>mysql_field_seek</td><td>将结果集中的指针设定为制定的字段偏移量</td></tr><tr><td>mysql_field_table</td><td>取得指定字段所在的表名</td></tr><tr><td>mysql_field_type</td><td>取得结果集中指定字段的类型</td></tr><tr><td>mysql_free_result</td><td>释放结果内存</td></tr><tr><td>mysql_get_client_info</td><td>取得 MySQL 客户端信息</td></tr><tr><td>mysql_get_host_info</td><td>取得 MySQL 主机信息</td></tr><tr><td>mysql_get_proto_info</td><td>取得 MySQL 协议信息</td></tr><tr><td>mysql_get_server_info</td><td>取得 MySQL 服务器信息</td></tr><tr><td>mysql_info</td><td>取得最近一条查询的信息</td></tr><tr><td>mysql_insert_id</td><td>取得上一步 INSERT 操作产生的 ID</td></tr><tr><td>mysql_list_dbs</td><td>列出 MySQL 服务器中所有的数据库</td></tr><tr><td>mysql_list_fields</td><td>列出 MySQL 结果中的字段</td></tr><tr><td>mysql_list_processes</td><td>列出 MySQL 进程</td></tr><tr><td>mysql_list_tables</td><td>列出 MySQL 数据库中的表</td></tr><tr><td>mysql_num_fields</td><td>取得结果集中字段的数目</td></tr><tr><td>mysql_num_rows</td><td>取得结果集中行的数目</td></tr><tr><td>mysql_pconnect</td><td>打开一个到 MySQL 服务器的持久连接</td></tr><tr><td>mysql_ping</td><td>Ping 一个服务器连接，如果没有连接则重新连接</td></tr><tr><td>mysql_query</td><td>发送一条 MySQL 查询</td></tr><tr><td>mysql_real_escape_string</td><td>转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集</td></tr><tr><td>mysql_result</td><td>取得结果数据</td></tr><tr><td>mysql_select_db</td><td>选择 MySQL 数据库</td></tr><tr><td>mysql_set_charset</td><td>设置客户端字符集</td></tr><tr><td>mysql_stat</td><td>取得当前系统状态</td></tr><tr><td>mysql_tablename</td><td>取得表名</td></tr><tr><td>mysql_thread_id</td><td>返回当前线程的 ID</td></tr><tr><td>mysql_unbuffered_query</td><td>向 MySQL 发送一条 SQL 查询，并不获取和缓存结果的行</td></tr></tbody></table><h1 id="文件目录处理相关函数"><a href="#文件目录处理相关函数" class="headerlink" title="文件目录处理相关函数"></a>文件目录处理相关函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>basename</td><td>返回路径中的文件名部分</td></tr><tr><td>chgrp</td><td>改变文件所属的组</td></tr><tr><td>chmod</td><td>改变文件模式</td></tr><tr><td>chown</td><td>改变文件的所有者</td></tr><tr><td>clearstatcache</td><td>清除文件状态缓存</td></tr><tr><td>copy</td><td>拷贝文件</td></tr><tr><td>delete</td><td>参见 unlink 或 unset</td></tr><tr><td>dirname</td><td>返回路径中的目录部分</td></tr><tr><td>disk_free_space</td><td>返回目录中的可用空间</td></tr><tr><td>disk_total_space</td><td>返回一个目录的磁盘总大小</td></tr><tr><td>diskfreespace</td><td>disk_free_space 的别名</td></tr><tr><td>fclose</td><td>关闭一个已打开的文件指针</td></tr><tr><td>feof</td><td>测试文件指针是否到了文件结束的位置</td></tr><tr><td>fflush</td><td>将缓冲内容输出到文件</td></tr><tr><td>fgetc</td><td>从文件指针中读取字符</td></tr><tr><td>fgetcsv</td><td>从文件指针中读入一行并解析 CSV 字段</td></tr><tr><td>fgets</td><td>从文件指针中读取一行</td></tr><tr><td>fgetss</td><td>从文件指针中读取一行并过滤掉 HTML 标记</td></tr><tr><td>file_exists</td><td>检查文件或目录是否存在</td></tr><tr><td>file_get_contents</td><td>将整个文件读入一个字符串</td></tr><tr><td>file_put_contents</td><td>将一个字符串写入文件</td></tr><tr><td>file</td><td>把整个文件读入一个数组中</td></tr><tr><td>fileatime</td><td>取得文件的上次访问时间</td></tr><tr><td>filectime</td><td>取得文件的 inode 修改时间</td></tr><tr><td>filegroup</td><td>取得文件的组</td></tr><tr><td>fileinode</td><td>取得文件的 inode</td></tr><tr><td>filemtime</td><td>取得文件修改时间</td></tr><tr><td>fileowner</td><td>取得文件的所有者</td></tr><tr><td>fileperms</td><td>取得文件的权限</td></tr><tr><td>filesize</td><td>取得文件大小</td></tr><tr><td>filetype</td><td>取得文件类型</td></tr><tr><td>flock</td><td>轻便的咨询文件锁定</td></tr><tr><td>fnmatch</td><td>用模式匹配文件名</td></tr><tr><td>fopen</td><td>打开文件或者 URL</td></tr><tr><td>fpassthru</td><td>输出文件指针处的所有剩余数据</td></tr><tr><td>fputcsv</td><td>将行格式化为 CSV 并写入文件指针</td></tr><tr><td>fputs</td><td>fwrite 的别名</td></tr><tr><td>fread</td><td>读取文件（可安全用于二进制文件)</td></tr><tr><td>fscanf</td><td>从文件中格式化输入</td></tr><tr><td>fseek</td><td>在文件指针中定位</td></tr><tr><td>fstat</td><td>通过已打开的文件指针取得文件信息</td></tr><tr><td>ftell</td><td>返回文件指针读/写的位置</td></tr><tr><td>ftruncate</td><td>将文件截断到给定的长度</td></tr><tr><td>fwrite</td><td>写入文件（可安全用于二进制文件）</td></tr><tr><td>glob</td><td>寻找与模式匹配的文件路径</td></tr><tr><td>is_dir</td><td>判断给定文件名是否是一个目录</td></tr><tr><td>is_executable</td><td>判断给定文件名是否可执行</td></tr><tr><td>is_file</td><td>判断给定文件名是否为一个正常的文件</td></tr><tr><td>is_link</td><td>判断给定文件名是否为一个符号连接</td></tr><tr><td>is_readable</td><td>判断给定文件名是否可读</td></tr><tr><td>is_uploaded_file</td><td>判断文件是否是通过 HTTP POST 上传的</td></tr><tr><td>is_writable</td><td>判断给定的文件名是否可写</td></tr><tr><td>is_writeable</td><td>is_writable 的别名</td></tr><tr><td>lchgrp</td><td>Changes group ownership of symlink</td></tr><tr><td>lchown</td><td>Changes user ownership of symlink</td></tr><tr><td>link</td><td>建立一个硬连接</td></tr><tr><td>linkinfo</td><td>获取一个连接的信息</td></tr><tr><td>lstat</td><td>给出一个文件或符号连接的信息</td></tr><tr><td>mkdir</td><td>新建目录</td></tr><tr><td>move_uploaded_file</td><td>将上传的文件移动到新位置</td></tr><tr><td>parse_ini_file</td><td>解析一个配置文件</td></tr><tr><td>parse_ini_string</td><td>Parse a configuration string</td></tr><tr><td>pathinfo</td><td>返回文件路径的信息</td></tr><tr><td>pclose</td><td>关闭进程文件指针</td></tr><tr><td>popen</td><td>打开进程文件指针</td></tr><tr><td>readfile</td><td>输出一个文件</td></tr><tr><td>readlink</td><td>返回符号连接指向的目标</td></tr><tr><td>realpath_cache_get</td><td>Get realpath cache entries</td></tr><tr><td>realpath_cache_size</td><td>Get realpath cache size</td></tr><tr><td>realpath</td><td>返回规范化的绝对路径名</td></tr><tr><td>rename</td><td>重命名一个文件或目录</td></tr><tr><td>rewind</td><td>倒回文件指针的位置</td></tr><tr><td>rmdir</td><td>删除目录</td></tr><tr><td>set_file_buffer</td><td>stream_set_write_buffer 的别名</td></tr><tr><td>stat</td><td>给出文件的信息</td></tr><tr><td>symlink</td><td>建立符号连接</td></tr><tr><td>tempnam</td><td>建立一个具有唯一文件名的文件</td></tr><tr><td>tmpfile</td><td>建立一个临时文件</td></tr><tr><td>touch</td><td>设定文件的访问和修改时间</td></tr><tr><td>umask</td><td>改变当前的 umask</td></tr><tr><td>unlink</td><td>删除文件</td></tr></tbody></table><h1 id="GD-Image函数"><a href="#GD-Image函数" class="headerlink" title="GD/Image函数"></a>GD/Image函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>gd_info</td><td>取得当前安装的 GD 库的信息</td></tr><tr><td>getimagesize</td><td>取得图像大小</td></tr><tr><td>getimagesizefromstring</td><td>Get the size of an image from a string</td></tr><tr><td>image_type_to_extension</td><td>取得图像类型的文件后缀</td></tr><tr><td>image_type_to_mime_type</td><td>取得 getimagesize，exif_read_data，exif_thumbnail，exif_imagetype 所返回的图像类型的 MIME 类型</td></tr><tr><td>image2wbmp</td><td>以 WBMP 格式将图像输出到浏览器或文件</td></tr><tr><td>imagealphablending</td><td>设定图像的混色模式</td></tr><tr><td>imageantialias</td><td>是否使用抗锯齿（antialias）功能</td></tr><tr><td>imagearc</td><td>画椭圆弧</td></tr><tr><td>imagechar</td><td>水平地画一个字符</td></tr><tr><td>imagecharup</td><td>垂直地画一个字符</td></tr><tr><td>imagecolorallocate</td><td>为一幅图像分配颜色</td></tr><tr><td>imagecolorallocatealpha</td><td>为一幅图像分配颜色 + alpha</td></tr><tr><td>imagecolorat</td><td>取得某像素的颜色索引值</td></tr><tr><td>imagecolorclosest</td><td>取得与指定的颜色最接近的颜色的索引值</td></tr><tr><td>imagecolorclosestalpha</td><td>取得与指定的颜色加透明度最接近的颜色</td></tr><tr><td>imagecolorclosesthwb</td><td>取得与给定颜色最接近的色度的黑白色的索引</td></tr><tr><td>imagecolordeallocate</td><td>取消图像颜色的分配</td></tr><tr><td>imagecolorexact</td><td>取得指定颜色的索引值</td></tr><tr><td>imagecolorexactalpha</td><td>取得指定的颜色加透明度的索引值</td></tr><tr><td>imagecolormatch</td><td>使一个图像中调色板版本的颜色与真彩色版本更能匹配</td></tr><tr><td>imagecolorresolve</td><td>取得指定颜色的索引值或有可能得到的最接近的替代值</td></tr><tr><td>imagecolorresolvealpha</td><td>取得指定颜色 + alpha 的索引值或有可能得到的最接近的替代值</td></tr><tr><td>imagecolorset</td><td>给指定调色板索引设定颜色</td></tr><tr><td>imagecolorsforindex</td><td>取得某索引的颜色</td></tr><tr><td>imagecolorstotal</td><td>取得一幅图像的调色板中颜色的数目</td></tr><tr><td>imagecolortransparent</td><td>将某个颜色定义为透明色</td></tr><tr><td>imageconvolution</td><td>用系数 div 和 offset 申请一个 3x3 的卷积矩阵</td></tr><tr><td>imagecopy</td><td>拷贝图像的一部分</td></tr><tr><td>imagecopymerge</td><td>拷贝并合并图像的一部分</td></tr><tr><td>imagecopymergegray</td><td>用灰度拷贝并合并图像的一部分</td></tr><tr><td>imagecopyresampled</td><td>重采样拷贝部分图像并调整大小</td></tr><tr><td>imagecopyresized</td><td>拷贝部分图像并调整大小</td></tr><tr><td>imagecreate</td><td>新建一个基于调色板的图像</td></tr><tr><td>imagecreatefromgd2</td><td>从 GD2 文件或 URL 新建一图像</td></tr><tr><td>imagecreatefromgd2part</td><td>从给定的 GD2 文件或 URL 中的部分新建一图像</td></tr><tr><td>imagecreatefromgd</td><td>从 GD 文件或 URL 新建一图像</td></tr><tr><td>imagecreatefromgif</td><td>由文件或URL创建一个新图象</td></tr><tr><td>imagecreatefromjpeg</td><td>由文件或URL创建一个新图象</td></tr><tr><td>imagecreatefrompng</td><td>由文件或URL创建一个新图象</td></tr><tr><td>imagecreatefromstring</td><td>从字符串中的图像流新建一图像</td></tr><tr><td>imagecreatefromwbmp</td><td>由文件或URL创建一个新图象</td></tr><tr><td>imagecreatefromxbm</td><td>由文件或URL创建一个新图象</td></tr><tr><td>imagecreatefromxpm</td><td>由文件或URL创建一个新图象</td></tr><tr><td>imagecreatetruecolor</td><td>新建一个真彩色图像</td></tr><tr><td>imagedashedline</td><td>画一虚线</td></tr><tr><td>imagedestroy</td><td>销毁一图像</td></tr><tr><td>imageellipse</td><td>画一个椭圆</td></tr><tr><td>imagefill</td><td>区域填充</td></tr><tr><td>imagefilledarc</td><td>画一椭圆弧且填充</td></tr><tr><td>imagefilledellipse</td><td>画一椭圆并填充</td></tr><tr><td>imagefilledpolygon</td><td>画一多边形并填充</td></tr><tr><td>imagefilledrectangle</td><td>画一矩形并填充</td></tr><tr><td>imagefilltoborder</td><td>区域填充到指定颜色的边界为止</td></tr><tr><td>imagefilter</td><td>对图像使用过滤器</td></tr><tr><td>imagefontheight</td><td>取得字体高度</td></tr><tr><td>imagefontwidth</td><td>取得字体宽度</td></tr><tr><td>imageftbbox</td><td>给出一个使用 FreeType 2 字体的文本框</td></tr><tr><td>imagefttext</td><td>使用 FreeType 2 字体将文本写入图像</td></tr><tr><td>imagegammacorrect</td><td>对 GD 图像应用 gamma 修正</td></tr><tr><td>imagegd2</td><td>将 GD2 图像输出到浏览器或文件</td></tr><tr><td>imagegd</td><td>将 GD 图像输出到浏览器或文件</td></tr><tr><td>imagegif</td><td>输出图象到浏览器或文件</td></tr><tr><td>imagegrabscreen</td><td>Captures the whole screen</td></tr><tr><td>imagegrabwindow</td><td>Captures a window</td></tr><tr><td>imageinterlace</td><td>激活或禁止隔行扫描</td></tr><tr><td>imageistruecolor</td><td>检查图像是否为真彩色图像</td></tr><tr><td>imagejpeg</td><td>输出图象到浏览器或文件</td></tr><tr><td>imagelayereffect</td><td>设定 alpha 混色标志以使用绑定的 libgd 分层效果</td></tr><tr><td>imageline</td><td>画一条线段</td></tr><tr><td>imageloadfont</td><td>载入一新字体</td></tr><tr><td>imagepalettecopy</td><td>将调色板从一幅图像拷贝到另一幅</td></tr><tr><td>imagepng</td><td>以 PNG 格式将图像输出到浏览器或文件</td></tr><tr><td>imagepolygon</td><td>画一个多边形</td></tr><tr><td>imagepsbbox</td><td>给出一个使用 PostScript Type1 字体的文本方框</td></tr><tr><td>imagepsencodefont</td><td>改变字体中的字符编码矢量</td></tr><tr><td>imagepsextendfont</td><td>扩充或精简字体</td></tr><tr><td>imagepsfreefont</td><td>释放一个 PostScript Type 1 字体所占用的内存</td></tr><tr><td>imagepsloadfont</td><td>从文件中加载一个 PostScript Type 1 字体</td></tr><tr><td>imagepsslantfont</td><td>倾斜某字体</td></tr><tr><td>imagepstext</td><td>用 PostScript Type1 字体把文本字符串画在图像上</td></tr><tr><td>imagerectangle</td><td>画一个矩形</td></tr><tr><td>imagerotate</td><td>用给定角度旋转图像</td></tr><tr><td>imagesavealpha</td><td>设置标记以在保存 PNG 图像时保存完整的 alpha 通道信息（与单一透明色相反）</td></tr><tr><td>imagesetbrush</td><td>设定画线用的画笔图像</td></tr><tr><td>imagesetpixel</td><td>画一个单一像素</td></tr><tr><td>imagesetstyle</td><td>设定画线的风格</td></tr><tr><td>imagesetthickness</td><td>设定画线的宽度</td></tr><tr><td>imagesettile</td><td>设定用于填充的贴图</td></tr><tr><td>imagestring</td><td>水平地画一行字符串</td></tr><tr><td>imagestringup</td><td>垂直地画一行字符串</td></tr><tr><td>imagesx</td><td>取得图像宽度</td></tr><tr><td>imagesy</td><td>取得图像高度</td></tr><tr><td>imagetruecolortopalette</td><td>将真彩色图像转换为调色板图像</td></tr><tr><td>imagettfbbox</td><td>取得使用 TrueType 字体的文本的范围</td></tr><tr><td>imagettftext</td><td>用 TrueType 字体向图像写入文本</td></tr><tr><td>imagetypes</td><td>返回当前 PHP 版本所支持的图像类型</td></tr><tr><td>imagewbmp</td><td>以 WBMP 格式将图像输出到浏览器或文件</td></tr><tr><td>imagexbm</td><td>将 XBM 图像输出到浏览器或文件</td></tr><tr><td>iptcembed</td><td>将二进制 IPTC 数据嵌入到一幅 JPEG 图像中</td></tr><tr><td>iptcparse</td><td>将二进制 IPTC <a href="http://www.iptc.org/" target="_blank" rel="noopener">http://www.iptc.org/</a> 块解析为单个标记</td></tr><tr><td>jpeg2wbmp</td><td>将 JPEG 图像文件转换为 WBMP 图像文件</td></tr><tr><td>png2wbmp</td><td>将 PNG 图像文件转换为 WBMP 图像文件</td></tr></tbody></table><h1 id="session函数"><a href="#session函数" class="headerlink" title="session函数"></a>session函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>session_cache_expire</td><td>返回当前缓存到期</td></tr><tr><td>session_cache_limiter</td><td>get和set the current缓存限制/金</td></tr><tr><td>session_commit</td><td>session_write_close 的别名</td></tr><tr><td>session_decode</td><td>将会话数据从一个会话编码的字符串</td></tr><tr><td>session_destroy</td><td>销毁已注册到会话的所有数据</td></tr><tr><td>session_encode</td><td>将当前会话数据编码为一个字符串</td></tr><tr><td>session_get_cookie_params</td><td>获得会话饼干参数</td></tr><tr><td>session_id</td><td>获得和/或设置当前会话标识</td></tr><tr><td>session_is_registered</td><td>检查变量是否在会话中已经注册</td></tr><tr><td>session_module_name</td><td>获得和/或设置当前会话模块</td></tr><tr><td>session_name</td><td>获得和/或设置当前会话名称</td></tr><tr><td>session_regenerate_id</td><td>更新新生成的会话标识</td></tr><tr><td>session_register_shutdown</td><td>会话关机功能</td></tr><tr><td>session_register</td><td>注册一个或多个全局变量与当前会话</td></tr><tr><td>session_save_path</td><td>获取和/或设置当前会话保存路径</td></tr><tr><td>session_set_cookie_params</td><td>设置会话饼干参数</td></tr><tr><td>session_set_save_handler</td><td>设置用户级会话存储功能</td></tr><tr><td>session_start</td><td>开始新的或恢复现有的会话</td></tr><tr><td>session_status</td><td>返回当前会话状态</td></tr><tr><td>session_unregister</td><td>注销当前会话的一个全局变量</td></tr><tr><td>session_unset</td><td>自由所有会话变量</td></tr><tr><td>session_write_close</td><td>写会话数据和结束会话</td></tr></tbody></table><h1 id="cookie函数"><a href="#cookie函数" class="headerlink" title="cookie函数"></a>cookie函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>setcookie</td><td>设置cookie</td></tr><tr><td>setrawcookie</td><td>发送没有URL编码的cookie</td></tr></tbody></table><h1 id="Date-Time-函数"><a href="#Date-Time-函数" class="headerlink" title="Date/Time 函数"></a>Date/Time 函数</h1><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>checkdate</td><td>验证一个格里高里日期</td></tr><tr><td>date_add</td><td>别名 DateTime::add</td></tr><tr><td>date_create_from_format</td><td>别名 DateTime::createFromFormat</td></tr><tr><td>date_create</td><td>别名 DateTime::__construct</td></tr><tr><td>date_date_set</td><td>别名 DateTime::setDate</td></tr><tr><td>date_default_timezone_get</td><td>取得一个脚本中所有日期时间函数所使用的默认时区</td></tr><tr><td>date_default_timezone_set</td><td>设定用于一个脚本中所有日期时间函数的默认时区</td></tr><tr><td>date_diff</td><td>别名 DateTime::diff</td></tr><tr><td>date_format</td><td>别名 DateTime::format</td></tr><tr><td>date_get_last_errors</td><td>别名 DateTime::getLastErrors</td></tr><tr><td>date_interval_create_from_date_string</td><td>别名 DateInterval::createFromDateString</td></tr><tr><td>date_interval_format</td><td>别名 DateInterval::format</td></tr><tr><td>date_isodate_set</td><td>别名 DateTime::setISODate</td></tr><tr><td>date_modify</td><td>别名 DateTime::modify</td></tr><tr><td>date_offset_get</td><td>别名 DateTime::getOffset</td></tr><tr><td>date_parse_from_format</td><td>Get info about given date formatted according to the specified format</td></tr><tr><td>date_parse</td><td>Returns associative array with detailed info about given date</td></tr><tr><td>date_sub</td><td>别名 DateTime::sub</td></tr><tr><td>date_sun_info</td><td>Returns an array with information about sunset/sunrise and twilight begin/end</td></tr><tr><td>date_sunrise</td><td>返回给定的日期与地点的日出时间</td></tr><tr><td>date_sunset</td><td>返回给定的日期与地点的日落时间</td></tr><tr><td>date_time_set</td><td>别名 DateTime::setTime</td></tr><tr><td>date_timestamp_get</td><td>别名 DateTime::getTimestamp</td></tr><tr><td>date_timestamp_set</td><td>别名 DateTime::setTimestamp</td></tr><tr><td>date_timezone_get</td><td>别名 DateTime::getTimezone</td></tr><tr><td>date_timezone_set</td><td>别名 DateTime::setTimezone</td></tr><tr><td>date</td><td>格式化一个本地时间／日期</td></tr><tr><td>getdate</td><td>取得日期／时间信息</td></tr><tr><td>gettimeofday</td><td>取得当前时间</td></tr><tr><td>gmdate</td><td>格式化一个 GMT/UTC 日期／时间</td></tr><tr><td>gmmktime</td><td>取得 GMT 日期的 UNIX 时间戳</td></tr><tr><td>gmstrftime</td><td>根据区域设置格式化 GMT/UTC 时间／日期</td></tr><tr><td>idate</td><td>将本地时间日期格式化为整数</td></tr><tr><td>localtime</td><td>取得本地时间</td></tr><tr><td>microtime</td><td>返回当前 Unix 时间戳和微秒数</td></tr><tr><td>mktime</td><td>取得一个日期的 Unix 时间戳</td></tr><tr><td>strftime</td><td>根据区域设置格式化本地时间／日期</td></tr><tr><td>strptime</td><td>解析由 strftime 生成的日期／时间</td></tr><tr><td>strtotime</td><td>将任何英文文本的日期时间描述解析为 Unix 时间戳</td></tr><tr><td>time</td><td>返回当前的 Unix 时间戳</td></tr><tr><td>timezone_abbreviations_list</td><td>别名 DateTimeZone::listAbbreviations</td></tr><tr><td>timezone_identifiers_list</td><td>别名 DateTimeZone::listIdentifiers</td></tr><tr><td>timezone_location_get</td><td>别名 DateTimeZone::getLocation</td></tr><tr><td>timezone_name_from_abbr</td><td>Returns the timezone name from abbreviation</td></tr><tr><td>timezone_name_get</td><td>别名 DateTimeZone::getName</td></tr><tr><td>timezone_offset_get</td><td>别名 DateTimeZone::getOffset</td></tr><tr><td>timezone_open</td><td>别名 DateTimeZone::__construct</td></tr><tr><td>timezone_transitions_get</td><td>别名 DateTimeZone::getTransitions</td></tr><tr><td>timezone_version_get</td><td>Gets the version of the timezonedb</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;各种常用的php函数，包括php字符串函数,php数组函数,php数学函数,mysql函数,文件目录函数,GD库函数,SESSION函数,Date/Time 函数等，涵盖了php基本操作所涉及的各类常用函数，并针对各个函数提供了简单的解释说明，方便查阅&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://hackycy.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://hackycy.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>HTTP状态代码</title>
    <link href="http://hackycy.github.io/2019/05/05/HTTP%E7%8A%B6%E6%80%81%E4%BB%A3%E7%A0%81/"/>
    <id>http://hackycy.github.io/2019/05/05/HTTP状态代码/</id>
    <published>2019-05-05T09:06:34.000Z</published>
    <updated>2019-05-05T14:12:11.546Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP 状态代码指示特定 HTTP 请求是否已成功完成。响应分为五类：信息响应，成功响应，重定向，客户端错误和服务器错误。</p><a id="more"></a><h1 id="常见的状态代码"><a href="#常见的状态代码" class="headerlink" title="常见的状态代码"></a>常见的状态代码</h1><ul><li>200 服务器成功返回内容</li><li>301/2 永久/临时重定向</li><li>304 未修改 Not Modified</li><li>307 重定向中保留原始数据</li><li>404 请求的页面不存在</li><li>500 服务器内部错误</li><li>503 服务器暂时不可用</li></ul><h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1**</td><td>信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td>2**</td><td>成功，操作被成功接收并处理</td></tr><tr><td>3**</td><td>重定向，需要进一步的操作以完成请求</td></tr><tr><td>4**</td><td>客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td>5**</td><td>服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><h1 id="信息响应"><a href="#信息响应" class="headerlink" title="信息响应"></a>信息响应</h1><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>100 Continue</td><td>这个临时响应表明，迄今为止的所有内容都是可行的，客户端应该继续请求，如果已经完成，则忽略它。</td></tr><tr><td>101 Switching Protocol</td><td>该代码是响应客户端的 Upgrade 标头发送的，并且指示服务器也正在切换的协议。</td></tr><tr><td>102 Processing</td><td>此代码表示服务器已收到并正在处理该请求，但没有响应可用。</td></tr><tr><td>103 Early Hints</td><td>此状态代码主要用于与Link 链接头一起使用，以允许用户代理在服务器仍在准备响应时开始预加载资源</td></tr></tbody></table><h1 id="成功响应"><a href="#成功响应" class="headerlink" title="成功响应"></a>成功响应</h1><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>200 OK</td><td>请求成功。成功的含义取决于HTTP方法：GET：资源已被提取并在消息正文中传输。HEAD：实体标头位于消息正文中。POST：描述动作结果的资源在消息体中传输。TRACE：消息正文包含服务器收到的请求消息</td></tr><tr><td>201 Created</td><td>该请求已成功，并因此创建了一个新的资源。这通常是在PUT请求之后发送的响应。</td></tr><tr><td>202 Accepted</td><td>请求已经接收到，但还未响应，没有结果。意味着不会有一个异步的响应去表明当前请求的结果，预期另外的进程和服务去处理请求，或者批处理。</td></tr><tr><td>203 Non-Authoritative Information</td><td>服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超集。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。</td></tr><tr><td>204 No Content</td><td>服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。</td></tr><tr><td>205 Reset Content</td><td>服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。</td></tr><tr><td>206 Partial Content</td><td>服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP 下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。</td></tr><tr><td>207 Multi-Status</td><td>由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</td></tr><tr><td>208 Multi-Status</td><td>在 DAV 里面使用: propstat 响应元素以避免重复枚举多个绑定的内部成员到同一个集合。</td></tr><tr><td>226 IM Used</td><td>服务器已经完成了对资源的 GET 请求，并且响应是对当前实例应用的一个或多个实例操作结果的表示。</td></tr></tbody></table><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>300 Multiple Choice</td><td>被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。</td></tr><tr><td>301 Moved Permanently</td><td>被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。</td></tr><tr><td>302 Found</td><td>请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。</td></tr><tr><td>303 See Other</td><td>对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。</td></tr><tr><td>304 Not Modified</td><td>如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304 响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。</td></tr><tr><td><del>305 Use Proxy</del></td><td>被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。</td></tr><tr><td><del>306 unused</del></td><td>在最新版的规范中，306 状态码已经不再被使用。</td></tr><tr><td>307 Temporary Redirect</td><td>请求的资源现在临时从不同的URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。</td></tr><tr><td>308 Permanent Redirect</td><td>这意味着资源现在永久位于由 Location: HTTP Response 标头指定的另一个 URI。 这与 301 Moved Permanently HTTP 响应代码具有相同的语义，但用户代理不能更改所使用的 HTTP 方法：如果在第一个请求中使用 POST，则必须在第二个请求中使用 POST。</td></tr></tbody></table><h1 id="客户端响应"><a href="#客户端响应" class="headerlink" title="客户端响应"></a>客户端响应</h1><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>400 Bad Request</td><td>1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。2、请求参数有误。</td></tr><tr><td>401 Unauthorized</td><td>当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。</td></tr><tr><td><del>402 Payment Required</del></td><td>此响应码保留以便将来使用，创造此响应码的最初目的是用于数字支付系统，然而现在并未使用</td></tr><tr><td>403 Forbidden</td><td>服务器已经理解请求，但是拒绝执行它。与 401 响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个 404 响应，假如它不希望让客户端获得任何信息。</td></tr><tr><td>404 Not Found</td><td>请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。</td></tr><tr><td>405 Method Not Allowed</td><td>请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。 鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。</td></tr><tr><td>406 Not Acceptable</td><td>请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。</td></tr><tr><td>407 Proxy Authentication Required</td><td>与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。</td></tr><tr><td>408 Request Timeout</td><td>请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。</td></tr><tr><td>409 Conflict</td><td>由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。</td></tr><tr><td>410 Gone</td><td>被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用 404 状态码。除非额外说明，否则这个响应是可缓存的。</td></tr><tr><td>411 Length Required</td><td>服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。</td></tr><tr><td>412 Precondition Failed</td><td>服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。</td></tr><tr><td>413 Payload Too Large</td><td>服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。</td></tr><tr><td>414 URI Too Long</td><td>请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括：本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。</td></tr><tr><td>415 Unsupported Media Type</td><td>对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。</td></tr><tr><td>416 Requested Range Not Satisfiable</td><td>如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。</td></tr><tr><td>417 Expectation Failed</td><td>此响应代码意味着服务器无法满足 Expect 请求标头字段指示的期望值。</td></tr><tr><td>418 I’m a teapot</td><td>服务器拒绝尝试用 “茶壶冲泡咖啡”。</td></tr><tr><td>421 Misdirected Request</td><td>该请求针对的是无法产生响应的服务器。 这可以由服务器发送，该服务器未配置为针对包含在请求 URI 中的方案和权限的组合产生响应。</td></tr><tr><td>422 Unprocessable Entity</td><td>请求格式良好，但由于语义错误而无法遵循。</td></tr><tr><td>423 Locked</td><td>正在访问的资源被锁定</td></tr><tr><td>424 Failed Dependency</td><td>由于先前的请求失败，所以此次请求失败。</td></tr><tr><td>425 Too Early</td><td>服务器不愿意冒着风险去处理可能重播的请求.</td></tr><tr><td>426 Upgrade Required</td><td>服务器拒绝使用当前协议执行请求，但可能在客户机升级到其他协议后愿意这样做。 服务器在 426 响应中发送 Upgrade 头以指示所需的协议。</td></tr><tr><td>428 Precondition Required</td><td>原始服务器要求该请求是有条件的。 旨在防止“丢失更新”问题，即客户端获取资源状态，修改该状态并将其返回服务器，同时第三方修改服务器上的状态，从而导致冲突。</td></tr><tr><td>429 Too Many Requests</td><td>用户在给定的时间内发送了太多请求（“限制请求速率”）。</td></tr><tr><td>431 Request Header Fields Too Large</td><td>服务器不愿意处理请求，因为它的 请求头字段太大（ Request Header Fields Too Large）。 请求可以在减小请求头字段的大小后重新提交。</td></tr><tr><td>451 Unavailable For Legal Reasons</td><td>用户请求非法资源，例如：由政府审查的网页。</td></tr></tbody></table><h1 id="服务端响应"><a href="#服务端响应" class="headerlink" title="服务端响应"></a>服务端响应</h1><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>500 Internal Server Error</td><td>服务器遇到了不知道如何处理的情况。</td></tr><tr><td>501 Not Implemented</td><td>此请求方法不被服务器支持且无法被处理。只有GET和HEAD是要求服务器支持的，它们必定不会返回此错误代码。</td></tr><tr><td>502 Bad Gateway</td><td>此错误响应表明服务器作为网关需要得到一个处理这个请求的响应，但是得到一个错误的响应。</td></tr><tr><td>503 Service Unavailable</td><td>服务器没有准备好处理请求。 常见原因是服务器因维护或重载而停机。 请注意，与此响应一起，应发送解释问题的用户友好页面。 这个响应应该用于临时条件和 Retry-After：如果可能的话，HTTP头应该包含恢复服务之前的估计时间。 网站管理员还必须注意与此响应一起发送的与缓存相关的标头，因为这些临时条件响应通常不应被缓存。</td></tr><tr><td>504 Gateway Timeout</td><td>当服务器作为网关，不能及时得到响应时返回此错误代码。</td></tr><tr><td>505 HTTP Version Not Supported</td><td>服务器不支持请求中所使用的HTTP协议版本。</td></tr><tr><td>506 Variant Also Negotiates</td><td>服务器有一个内部配置错误：对请求的透明内容协商导致循环引用。</td></tr><tr><td>507 Insufficient Storage</td><td>服务器有内部配置错误：所选的变体资源被配置为参与透明内容协商本身，因此不是协商过程中的适当端点。</td></tr><tr><td>508 Loop Detected</td><td>服务器在处理请求时检测到无限循环。</td></tr><tr><td>510 Not Extended</td><td>客户端需要对请求进一步扩展，服务器才能实现它。服务器会回复客户端发出扩展请求所需的所有信息。</td></tr><tr><td>511 Network Authentication Required</td><td>511 状态码指示客户端需要进行身份验证才能获得网络访问权限。</td></tr></tbody></table><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP 状态代码指示特定 HTTP 请求是否已成功完成。响应分为五类：信息响应，成功响应，重定向，客户端错误和服务器错误。&lt;/p&gt;
    
    </summary>
    
      <category term="HTTP" scheme="http://hackycy.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="http://hackycy.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>Mac Homebrew常用命令</title>
    <link href="http://hackycy.github.io/2019/05/04/Mac-Homebrew%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://hackycy.github.io/2019/05/04/Mac-Homebrew常用命令/</id>
    <published>2019-05-04T04:02:34.000Z</published>
    <updated>2019-05-10T02:42:04.530Z</updated>
    
    <content type="html"><![CDATA[<p>Homebrew是Mac OSX上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件， 使用命令，非常方便。</p><a id="more"></a><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ brew --<span class="built_in">help</span>        <span class="comment">#简洁命令帮助</span></span><br><span class="line">$ man brew           <span class="comment">#完整命令帮助</span></span><br><span class="line">$ brew install git   <span class="comment">#安装软件包(这里是示例安装的Git版本控制)</span></span><br><span class="line">$ brew uninstall git <span class="comment">#卸载软件包</span></span><br><span class="line">$ brew search git    <span class="comment">#搜索软件包</span></span><br><span class="line">$ brew list          <span class="comment">#显示已经安装的所有软件包</span></span><br><span class="line">$ brew update        <span class="comment">#同步远程最新更新情况，对本机已经安装并有更新的软件用*标明</span></span><br><span class="line">$ brew outdated      <span class="comment">#查看已安装的哪些软件包需要更新</span></span><br><span class="line">$ brew upgrade git   <span class="comment">#更新单个软件包</span></span><br><span class="line">$ brew info git      <span class="comment">#查看软件包信息</span></span><br><span class="line">$ brew home git      <span class="comment">#访问软件包官方站</span></span><br><span class="line">$ brew cleanup       <span class="comment">#清理所有已安装软件包的历史老版本</span></span><br><span class="line">$ brew cleanup git   <span class="comment">#清理单个已安装软件包的历史版本</span></span><br><span class="line">$ brew tap           <span class="comment">#可以为brew的软件的 跟踪,更新,安装添加更多的的tap formulae</span></span><br></pre></td></tr></table></figure><h1 id="程序安装路径及文件夹"><a href="#程序安装路径及文件夹" class="headerlink" title="程序安装路径及文件夹"></a>程序安装路径及文件夹</h1><ul><li>bin          #用于存放所安装程序的启动链接（相当于快捷方式）</li><li>Cellar       #所有brew安装的程序，都将以[程序名/版本号]存放于本目录下</li><li>etc          #brew安装程序的配置文件默认存放路径</li><li>Library      #Homebrew 系统自身文件夹<ul><li>Formula     #程序的下载路径和编译参数及安装路径等配置文件存放地</li><li>Homebrew    #brew程序自身命令集</li></ul></li></ul><h1 id="替换及重置Homebrew默认源"><a href="#替换及重置Homebrew默认源" class="headerlink" title="替换及重置Homebrew默认源"></a>替换及重置Homebrew默认源</h1><ul><li>替换brew.git:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/brew.git</span><br></pre></td></tr></table></figure><p>​    <strong>可选镜像源：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://git.coding.net/homebrew/homebrew.git - Coding</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git - 清华</span><br><span class="line">https://mirrors.ustc.edu.cn/brew.git - 中科大</span><br></pre></td></tr></table></figure><ul><li>替换homebrew-core.git:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure><ul><li>重置brew.git:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://github.com/Homebrew/brew.git</span><br></pre></td></tr></table></figure><ul><li>重置homebrew-core.git:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://github.com/Homebrew/homebrew-core.git</span><br></pre></td></tr></table></figure><h1 id="LaunchRocket"><a href="#LaunchRocket" class="headerlink" title="LaunchRocket"></a>LaunchRocket</h1><p>LaunchRecket是管理homebrew所安装应用的一个管理器，它在系统设置中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install</span></span><br><span class="line">brew cask install launchrocket</span><br><span class="line"><span class="comment"># uninstall</span></span><br><span class="line">brew cask uninstall launchrocket</span><br></pre></td></tr></table></figure><p><a href="https://github.com/jimbojsb/launchrocket" target="_blank" rel="noopener">https://github.com/jimbojsb/launchrocket</a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Homebrew是Mac OSX上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件， 使用命令，非常方便。&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://hackycy.github.io/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="Homebrew" scheme="http://hackycy.github.io/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>MacOS Apache配置</title>
    <link href="http://hackycy.github.io/2019/05/04/MacOS-Apache%E9%85%8D%E7%BD%AE/"/>
    <id>http://hackycy.github.io/2019/05/04/MacOS-Apache配置/</id>
    <published>2019-05-04T03:08:05.000Z</published>
    <updated>2019-05-16T15:58:29.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>macOS Mojave 10.14.4</li><li>Apache/2.4.38</li></ul><a id="more"></a><h1 id="查看Apache"><a href="#查看Apache" class="headerlink" title="查看Apache"></a>查看Apache</h1><p>macOS系统自带Apache软件，我们直接在命令行下查看Apache版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ httpd -v</span><br><span class="line">Server version: Apache/2.4.38 (Unix)</span><br><span class="line">Server built:   Feb 10 2019 02:48:38</span><br></pre></td></tr></table></figure><h1 id="启动Apache"><a href="#启动Apache" class="headerlink" title="启动Apache"></a>启动Apache</h1><p>命令行直接启动，如果是普通用户下需要<code>sudo</code>，普通用户没有权限操作<code>apachectl</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apachectl start</span><br><span class="line">$ sudo apachectl stop</span><br><span class="line">$ sudo apachectl restart</span><br></pre></td></tr></table></figure><p>mac 下 <code>Apache</code> 默认的目录在 <code>/Library/WebServer</code> 下</p><h1 id="开启Apache多用户主目录"><a href="#开启Apache多用户主目录" class="headerlink" title="开启Apache多用户主目录"></a>开启Apache多用户主目录</h1><p>执行 <code>sudo vim /etc/apache2/httpd.conf</code> 打开 <code>httpd.conf</code> 文件，然后查找 <code>userdir</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># User home directories</span><br><span class="line">#Include /private/etc/apache2/extra/httpd-userdir.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#LoadModule userdir_module libexec/apache2/mod_userdir.so</span><br></pre></td></tr></table></figure><p>去掉前面<code>#</code>注释即可。</p><p>接着再编辑 <code>/private/etc/apache2/extra/httpd-userdir.conf</code> 文件，增加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserDir Sites</span><br></pre></td></tr></table></figure><p>如果有则不用添加了。</p><h1 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h1><p>执行 <code>sudo vim /etc/apache2/httpd.conf</code>，查找<code>vhost</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#LoadModule vhost_alias_module libexec/apache2/mod_vhost_alias.so</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Virtual hosts</span><br><span class="line">#Include /private/etc/apache2/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>去掉前面<code>#</code>注释即可。再修改<code>/private/etc/apache2/extra/httpd-vhosts.conf</code>配置即可。</p><h1 id="使用Homebrew代替自带的"><a href="#使用Homebrew代替自带的" class="headerlink" title="使用Homebrew代替自带的"></a>使用Homebrew代替自带的</h1><p>由于之前不知道搞了什么，自带的怎么更改都不生效，所以重新安装了。</p><h2 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap homebrew/apache</span><br><span class="line">$ brew tap homebrew/php</span><br><span class="line">$ brew install httpd</span><br></pre></td></tr></table></figure><h2 id="配置apache"><a href="#配置apache" class="headerlink" title="配置apache"></a>配置apache</h2><p>配置文件路径为<code>/usr/local/etc/httpd/httpd.conf</code>，配置的方法和上述自带无差别。只是配置路径发生了变化。</p><h2 id="配置PHP模块"><a href="#配置PHP模块" class="headerlink" title="配置PHP模块"></a>配置PHP模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">LoadModule php7_module /usr/local/Cellar/php@7.1/7.1.26/lib/httpd/modules/libphp7.so</span><br><span class="line">&lt;IfModule mod_php7.c&gt;</span><br><span class="line"></span><br><span class="line">    AddType application/x-httpd-php .php</span><br><span class="line">    AddType application/x-httpd-php-source .phps</span><br><span class="line"></span><br><span class="line">    &lt;IfModule mod_dir.c&gt;</span><br><span class="line">        DirectoryIndex index.html index.php</span><br><span class="line">    &lt;/IfModule&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>找到所在php的so文件添加进配置即可，php版本可根据自己需要更改。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;macOS Mojave 10.14.4&lt;/li&gt;
&lt;li&gt;Apache/2.4.38&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Apache" scheme="http://hackycy.github.io/categories/Apache/"/>
    
    
      <category term="环境搭建" scheme="http://hackycy.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Apache" scheme="http://hackycy.github.io/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>Apache配置文件详解</title>
    <link href="http://hackycy.github.io/2019/04/29/Apache%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/04/29/Apache配置文件详解/</id>
    <published>2019-04-29T12:39:51.000Z</published>
    <updated>2019-05-10T09:45:03.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Centos7</li><li>Apache/2.4.38</li></ul><a id="more"></a><h1 id="配置文件路径"><a href="#配置文件路径" class="headerlink" title="配置文件路径"></a>配置文件路径</h1><p>找到apache所在的配置文件，在本文环境下即centos7以yum源安装的httpd所在的配置环境路径为<code>/etc/httpd/conf</code>。也可以使用命令找到该配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo find / -name <span class="string">'httpd.conf'</span></span><br></pre></td></tr></table></figure><blockquote><p>以下以本文中的配置路径为准，其他系统下路径可能不一致。<br>在 Ubnutu/Mac 上，apache 服务叫 apache2，而不是 httpd（在 Centos 上叫 httpd），主配置文件为 /etc/apache2/apache2.conf</p></blockquote><h1 id="Apache配置文件"><a href="#Apache配置文件" class="headerlink" title="Apache配置文件"></a>Apache配置文件</h1><p>Apache提供了灵活的web服务配置，理解其参数的含义很重要。</p><p>Apache配置文件中英文对照：<a href="http://www.cnblogs.com/adamite/p/apache_configuration.html" target="_blank" rel="noopener">http://www.cnblogs.com/adamite/p/apache_configuration.html</a></p><h2 id="Apache主目录"><a href="#Apache主目录" class="headerlink" title="Apache主目录"></a>Apache主目录</h2><p><code>ServerRoot &quot;/etc/httpd&quot;</code></p><h2 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h2><p><code>Listen 80</code></p><h2 id="加载动态模块"><a href="#加载动态模块" class="headerlink" title="加载动态模块"></a>加载动态模块</h2><p><code>LoadModule php5_module modules/libphp5.so</code></p><p>或者加载动态模块的配置文件</p><p><code>Include conf.modules.d/*.conf</code></p><h2 id="Apache的进程执行者"><a href="#Apache的进程执行者" class="headerlink" title="Apache的进程执行者"></a>Apache的进程执行者</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User apache</span><br><span class="line">Group apache</span><br></pre></td></tr></table></figure><h2 id="服务器域名"><a href="#服务器域名" class="headerlink" title="服务器域名"></a>服务器域名</h2><p>该项可配置也可不配置 <code>ServerName www.example.com:80</code></p><h2 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h2><p><code>DocumentRoot &quot;/var/www/html&quot;</code></p><h2 id="设置网站根目录的访问权限"><a href="#设置网站根目录的访问权限" class="headerlink" title="设置网站根目录的访问权限"></a>设置网站根目录的访问权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    #</span><br><span class="line">    # Possible values for the Options directive are &quot;None&quot;, &quot;All&quot;,</span><br><span class="line">    # or any combination of:</span><br><span class="line">    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span><br><span class="line">    #</span><br><span class="line">    # Note that &quot;MultiViews&quot; must be named *explicitly* --- &quot;Options All&quot;</span><br><span class="line">    # doesn&apos;t give it to you.</span><br><span class="line">    #</span><br><span class="line">    # The Options directive is both complicated and important.  Please see</span><br><span class="line">    # http://httpd.apache.org/docs/2.4/mod/core.html#options</span><br><span class="line">    # for more information.</span><br><span class="line">    #</span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # AllowOverride controls what directives may be placed in .htaccess files.</span><br><span class="line">    # It can be &quot;All&quot;, &quot;None&quot;, or any combination of the keywords:</span><br><span class="line">    #   Options FileInfo AuthConfig Limit</span><br><span class="line">    #</span><br><span class="line">    AllowOverride None</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # Controls who can get stuff from this server.</span><br><span class="line">    #</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>参数详解</strong></p><ul><li><code>Allow from all</code> 参数允许所有人访问<code>/var/www/html</code>下的资源</li><li><code>Deny from all</code> 参数拒绝所有人访问<code>/var/www/html</code>下的资源</li><li><code>Options Indexes</code> 参数:访问目录时,如果不存在默认首页则展示站点列表 该行建议改成 Options None</li><li><code>Options FollowSymLinks</code> 参数:是否允许快捷方式(ln -s 软连接)</li><li><code>Options MultiViews</code> 多视图,访问<code>/index</code>等同访问<code>index.php</code>或<code>index.html</code></li></ul><h3 id="Apache服务器访问权限控制包括"><a href="#Apache服务器访问权限控制包括" class="headerlink" title="Apache服务器访问权限控制包括:"></a>Apache服务器访问权限控制包括:</h3><h4 id="Apache-服务权限"><a href="#Apache-服务权限" class="headerlink" title="Apache 服务权限"></a>Apache 服务权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deny from all (**403 forbidden** error!)</span><br><span class="line">allow from all</span><br></pre></td></tr></table></figure><h4 id="Linux-系统权限"><a href="#Linux-系统权限" class="headerlink" title="Linux 系统权限"></a>Linux 系统权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selinux</span><br><span class="line">iptables</span><br><span class="line">httpd进程执行者对根目录的权限(**403 forbidden** error!)</span><br></pre></td></tr></table></figure><h2 id="设置目录默认首页"><a href="#设置目录默认首页" class="headerlink" title="设置目录默认首页"></a>设置目录默认首页</h2><p>优先级从左往右依次降低</p><p><code>DirectoryIndex index.html index.php</code></p><h2 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h2><p><code>ErrorLog &quot;logs/error_log&quot;</code></p><h2 id="访问日志"><a href="#访问日志" class="headerlink" title="访问日志"></a>访问日志</h2><p><code>CustomLog &quot;logs/access_log&quot; common</code></p><h2 id="解析php脚本"><a href="#解析php脚本" class="headerlink" title="解析php脚本"></a>解析php脚本</h2><p><code>AddType application/x-httpd-php .php</code></p><h2 id="控制错误页面的输出"><a href="#控制错误页面的输出" class="headerlink" title="控制错误页面的输出"></a>控制错误页面的输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#ErrorDocument 500 &quot;The server made a boo boo.&quot;</span><br><span class="line">#ErrorDocument 404 /missing.html</span><br><span class="line">#ErrorDocument 404 &quot;/cgi-bin/missing_handler.pl&quot;</span><br><span class="line">#ErrorDocument 402 http://www.example.com/subscription_info.html</span><br></pre></td></tr></table></figure><h2 id="包含外部配置文件"><a href="#包含外部配置文件" class="headerlink" title="包含外部配置文件"></a>包含外部配置文件</h2><p><code>Include extra/httpd-vhosts.conf</code></p><h2 id="虚拟目录"><a href="#虚拟目录" class="headerlink" title="虚拟目录"></a>虚拟目录</h2><p><code>http://localhost/mnt</code> mnt目录并不在网站根目录下,目录资源在<code>/tmp/mnt</code>目录下 在<code>/usr/local/apache2/etc/http.conf</code>文件里增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Alias /mnt &quot;/mnt/www&quot; # 虚拟目录（目录别名）</span><br><span class="line">&lt;Directory &quot;/mnt/www&quot;&gt;</span><br><span class="line">    Options none</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Deny from all # 拒绝所有</span><br><span class="line">    Allow from all # 允许所有</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><code>http://localhost/mnt</code> 重启apache后访问的资源便是 <code>/mnt/www</code>目录下的资源</p><h1 id="Apache虚拟主机配置"><a href="#Apache虚拟主机配置" class="headerlink" title="Apache虚拟主机配置"></a>Apache虚拟主机配置</h1><p>基于域名的虚拟主机，指定服务器IP（和可能的端口）使主机接受请求。用<code>NameVirtualHost</code>进行配置。 如果服务器上所有的IP地址都会用到，可以用<code>*</code>作为<code>NameVirtualHost</code>的参数。在<code>NameVirtualHost</code>指令中指明IP地址不会使服务器自动侦听那个IP地址。</p><h2 id="找到Apache的主配置文件httpd-conf"><a href="#找到Apache的主配置文件httpd-conf" class="headerlink" title="找到Apache的主配置文件httpd.conf"></a>找到Apache的主配置文件<code>httpd.conf</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /etc/httpd/conf</span><br><span class="line">$ vim httpd.conf</span><br></pre></td></tr></table></figure><p>我们搜索关键字<code>vhosts</code>，如果没有则在文件后添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Load vhost-config files in the &quot;/etc/httpd/vhost-conf.d&quot; directory if any</span><br><span class="line">Include vhost.d/*.conf</span><br></pre></td></tr></table></figure><blockquote><p>不使用官方原版的单个配置文件有个好处是 每个虚拟主机配置独立开来 减少操作的误差</p></blockquote><p>然后我们到<code>/etc/httpd/</code>目录下创建<code>vhost.d</code>文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir vhost.d</span><br><span class="line">$ <span class="built_in">cd</span> vhost.d</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/etc/httpd/vhost.d</span><br><span class="line">$ vim www_sweetlover_cn_net.conf</span><br></pre></td></tr></table></figure><p><strong>添加以下内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin zjyzy@www.sweetlover.net.cn</span><br><span class="line">    DocumentRoot /var/www/html/sweetlover</span><br><span class="line">    ServerName www.sweetlover.net.cn</span><br><span class="line">    RewriteEngine On</span><br><span class="line">    Options All</span><br><span class="line">    &lt;Directory &quot;/var/www/html/sweetlover&quot;&gt;</span><br><span class="line">        # Options -Indexes FollowSymLinks </span><br><span class="line">        # 为了服务器的安全 Indexes参数一般要取消</span><br><span class="line">        Options FollowSymLinks </span><br><span class="line">        AllowOverride All</span><br><span class="line">        Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">    ErrorLog logs/www_sweetlover_net_cn-error_log</span><br><span class="line">    CustomLog logs/www_sweetlover_net_cn-access_log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p><strong>再次修改主配置文件<code>httpd.conf</code>,找到<code>Listen 80</code>，添加以下代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Listen 80</span><br><span class="line">NameVirtualHost *:80</span><br></pre></td></tr></table></figure><p><strong>我们再配置一个同域名下不同端口虚拟主机，配置<code>8080</code>端口下的</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/httpd/vhost.d</span><br><span class="line">$ vim www_sweetlover_net_cn_8080.conf</span><br></pre></td></tr></table></figure><p>针对<code>www_sweetlover_cn_net.conf</code>改变相应的配置，即修改<code>ServerName</code>为<code>www.sweetlover.net.cn:8080</code>，<code>DocumentRoot</code>和<code>Directory</code>修改为<code>/var/www/html/sweetlover@8080</code>。</p><p><strong>修改主配置文件，添加</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Listen 8080</span><br><span class="line">NameVirtualHost *:8080</span><br></pre></td></tr></table></figure><blockquote><p>由于环境下为虚拟机环境，直接访问ip加端口号即可访问到配置的网站。在上述配置的DocumentRoot下创建index.html或者index.php即可访问网页。</p></blockquote><p><strong>如果出现该错误</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[warn] default VirtualHost overlap on port 80, the first has precedence</span><br></pre></td></tr></table></figure><blockquote><p>打开apache主配置文件在任意位置添加一行,在 40行的Listion:80后添加一行内容如下:<code>NameVirtualHost *:80</code></p></blockquote><blockquote><p>如果使用源码编译安装的，直接去掉注释即可，然后再修改配置文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#LoadModule vhost_alias_module libexec/apache2/mod_vhost_alias.so</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Virtual hosts</span><br><span class="line">#Include /private/etc/apache2/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>去掉前面<code>#</code>注释即可。再修改<code>/private/etc/apache2/extra/httpd-vhosts.conf</code>配置即可。</p><h1 id="Apache常见错误"><a href="#Apache常见错误" class="headerlink" title="Apache常见错误"></a>Apache常见错误</h1><h2 id="ServerName配置未填写或错误"><a href="#ServerName配置未填写或错误" class="headerlink" title="ServerName配置未填写或错误"></a>ServerName配置未填写或错误</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd: Could not reliably determine the server<span class="string">'s fully qualified domain name, using luo.centos6.5 for ServerName</span></span><br></pre></td></tr></table></figure><p>在Apache主配置文件<code>httpd.conf</code>的98行左右<code>#ServerName www.example.com:80</code>前面的<code>#</code>去掉，换成自己的域名或者ip地址。<br>例如：修改为<code>ServerName localhost:80</code>或者<code>ServerName 127.0.0.1:80</code></p><h2 id="403-Forbidden错误"><a href="#403-Forbidden错误" class="headerlink" title="403 Forbidden错误"></a>403 Forbidden错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">403 - Forbidden（禁止访问）,服务器拒绝请求</span><br><span class="line">    - forbidden request (matches a deny filter) =&gt; HTTP 403</span><br><span class="line">    - The request was a legal request, but the server is refusing to respond to it.</span><br></pre></td></tr></table></figure><p><strong>原因1：apache的配置文件没有对站点目录许可</strong></p><p>apache配置文件中没有对站点目录的权限许可配置，这通常是在初始化安装apahce后，更改了默认的apache站点目录导致。</p><p>解决办法可能是：通过给主配置文件增加<code>&lt;Directory &quot;/var/www/html&quot;&gt;&lt;/Directory&gt;</code>标签实现对指定目录的权限控制<br>典型如下(对/var/www目录下的文件允许访问)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www&quot;&gt;</span><br><span class="line">    Options -Indexes FollowSymLinks # 为了服务器的安全 Indexes参数一般要取消</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny # 允许未被明确拒绝的</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>原因2：站点目录下没有首页文件，而apache 的配置又禁止了目录的浏览</strong></p><p>站点目录下没有首页文件(index.php、index.html等默认文件)，而apache的配置又禁止了目录浏览（#Indexes参数:访问目录时,如果不存在默认首页则展示站点列表，该行建议改成<code>Options None</code>，也会提示403错误。<br>解决办法：在站点目录添加默认首页文件或者将配置文件中<code>Options Index</code>增加上。</p><p><strong>原因3：deny from all 禁用了所有来访者访问</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www&quot;&gt;</span><br><span class="line">    Options -Indexes FollowSymLinks # 为了服务器的安全 Indexes参数一般要取消</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny # 允许未被明确拒绝的</span><br><span class="line">    Deny from all</span><br><span class="line">    # Deny from </span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p><strong>解决办法：</strong>参考原因2解决方法配置<code>&lt;Directory &gt;&lt;/Directory&gt;</code>参数。</p><p><strong>站点目录权限问题</strong></p><p>站点目录需要apache的用户有访问权限，否则就会报403错误(一般web站点目录权限给755，站点文件权限给644，上传程序通过另外的上传服务器提供文件上传)。</p><h1 id="Apache服务器优化"><a href="#Apache服务器优化" class="headerlink" title="Apache服务器优化"></a>Apache服务器优化</h1><h2 id="错误页面优雅显示"><a href="#错误页面优雅显示" class="headerlink" title="错误页面优雅显示"></a>错误页面优雅显示</h2><p>可以将404 500等的错误信息页面重定向到网站首页或其他页面，提升用户体验。</p><p>编辑apache主配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim httpd.conf</span><br></pre></td></tr></table></figure></p><p>修改如下内容<code>ErrorDocument 404 http://www.domain.com</code></p><h2 id="mod-defalte文件压缩功能"><a href="#mod-defalte文件压缩功能" class="headerlink" title="mod_defalte文件压缩功能"></a><code>mod_defalte</code>文件压缩功能</h2><p>gzip是把文件先在服务器端进行压缩然后再传输，传输完毕后浏览器会重新对压缩过得内容进行解压缩。这样可以显著减少文件传输的大小，没有特殊情况，所有的文本内容都应该被gzip压缩（html,css,js,xml,txt..）</p><p>添加如下内容到<code>httpd.conf</code>或者<code>vhost.conf</code>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ifmodule mod_deflate.c&gt;</span><br><span class="line">    DeflateCompressionLevel 9</span><br><span class="line">    SetOutputFilter DEFLATE</span><br><span class="line">    AddOutputFilterByType DEFLATE text/html text/plain text/xml</span><br><span class="line">    AddOutputFilterByType DEFLATE application/javscript</span><br><span class="line">    AddOutputFilterByType DEFLATE text/css</span><br><span class="line">&lt;/ifmodule&gt;</span><br></pre></td></tr></table></figure><h2 id="更改apache的默认用户"><a href="#更改apache的默认用户" class="headerlink" title="更改apache的默认用户"></a>更改apache的默认用户</h2><p>创建apache用户，用于子进程和线程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ useradd -M -s /sbin/nologin webadmin</span><br></pre></td></tr></table></figure><p>编辑apache的主配置文件,添加或者修改如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User webadmin</span><br><span class="line">Group webadmin</span><br></pre></td></tr></table></figure><h2 id="开启apache防盗链功能"><a href="#开启apache防盗链功能" class="headerlink" title="开启apache防盗链功能"></a>开启apache防盗链功能</h2><p>主配置文件中增加如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule rewrite_module&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^http://domain.com/.*$ [NC]</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^http://www.domain.com/.*$ [NC]</span><br><span class="line"></span><br><span class="line">RewriteRule .*\.(gif|jpg|swf)$ http://www.domain.com [R,NC]</span><br><span class="line"># RewriteRule .*\.(gif|jpg|swf)$ http://www.domain.com/about/no.png [R,NC]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><h2 id="禁止目录Index"><a href="#禁止目录Index" class="headerlink" title="禁止目录Index"></a>禁止目录Index</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    Options -Indexes FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="禁止用户覆盖-重载-配置文件"><a href="#禁止用户覆盖-重载-配置文件" class="headerlink" title="禁止用户覆盖(重载)配置文件"></a>禁止用户覆盖(重载)配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None  # 禁止用户覆盖(重载)配置文件, All即为开启</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="关闭CGI-Common-Gateway-Interface-通用网关接口"><a href="#关闭CGI-Common-Gateway-Interface-通用网关接口" class="headerlink" title="关闭CGI(Common Gateway Interface 通用网关接口)"></a>关闭CGI(Common Gateway Interface 通用网关接口)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule alias_module&gt;</span><br><span class="line">ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">&lt;Directory &quot;/var/www/cgi-bin&quot;&gt;</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Options None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="避免使用-htaccess文件-分布式配置文件"><a href="#避免使用-htaccess文件-分布式配置文件" class="headerlink" title="避免使用.htaccess文件(分布式配置文件)"></a>避免使用.htaccess文件(分布式配置文件)</h2><p><strong>默认选项：</strong><code>AccessFileName .htaccess</code> 改为 <code># AccessFileName .htaccess</code></p><p>先考虑性能，如果AllowOverride启用了.haccess文件，则apache需要在每个目录中查找.htaccess文件，因此无论是否真正用到启用.htaccess文件都会导致服务器性能的下降。<br>　　另外对于每一个请求，都需要读取一次.htaccess文件。<br>　　其次是安全考虑，这样会允许用户自己修改服务器的配置，这可能会导致某些意想不到的修改，所以请认真考虑是否应道给予用户这样的特权。</p><blockquote><p>PHP开启路由重写下需要使用</p></blockquote><h2 id="apache-的安全模块"><a href="#apache-的安全模块" class="headerlink" title="apache 的安全模块"></a>apache 的安全模块</h2><p><code>mod_evasive20</code>( 防DDOS攻击)<br><code>mod_limittipconn</code>(针对单站点)配置<br><code>mod_security</code>(防止SQL注入)</p><h2 id="apache日志授予root-700权限"><a href="#apache日志授予root-700权限" class="headerlink" title="apache日志授予root 700权限"></a>apache日志授予root 700权限</h2><p><strong>不需要在日志目录给apache用户读或者写权限许可，因为apache的初始进程用户为root</strong></p><h2 id="禁止PHP解析指点站点目录"><a href="#禁止PHP解析指点站点目录" class="headerlink" title="禁止PHP解析指点站点目录"></a>禁止PHP解析指点站点目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Directory &quot;/var/www/html/bbs/Uploads&quot;&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">    php_flag engine off # 注意这行</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.kancloud.cn/curder/apache/91272" target="_blank" rel="noopener">https://www.kancloud.cn/curder/apache/91272</a></p><p><a href="https://www.linuxidc.com/Linux/2017-05/143590.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2017-05/143590.htm</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Centos7&lt;/li&gt;
&lt;li&gt;Apache/2.4.38&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Apache" scheme="http://hackycy.github.io/categories/Apache/"/>
    
    
      <category term="服务器运维" scheme="http://hackycy.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Apache" scheme="http://hackycy.github.io/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-正则表达式基础</title>
    <link href="http://hackycy.github.io/2019/04/28/JavaScript-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80/"/>
    <id>http://hackycy.github.io/2019/04/28/JavaScript-正则表达式基础/</id>
    <published>2019-04-28T09:38:34.000Z</published>
    <updated>2019-04-28T09:39:21.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式基础"><a href="#正则表达式基础" class="headerlink" title="正则表达式基础"></a>正则表达式基础</h1><a id="more"></a><h2 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h2><p><code>https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp</code></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>正则表达式是为了解决字符串操作中一些比较麻烦的场景，比如字符串提取、字符串替换、字符串验证等<ul><li>常用于：表单验证：是否是一个数字、是一个电话号码、是一个邮箱。。。</li><li>字符串替换：</li><li>字符串查找</li></ul></li></ul><h2 id="正则表达式其实也是js里面的一个对象"><a href="#正则表达式其实也是js里面的一个对象" class="headerlink" title="正则表达式其实也是js里面的一个对象"></a>正则表达式其实也是js里面的一个对象</h2><h2 id="创建一个正则表达式"><a href="#创建一个正则表达式" class="headerlink" title="创建一个正则表达式"></a>创建一个正则表达式</h2><ul><li><code>var reg2=new RegExp(&quot;a&quot;);</code></li><li><code>var reg1=/a/;</code>   <ul><li>其中//是标记，a表示要匹配的字符</li></ul></li></ul><h2 id="正则表达式匹配"><a href="#正则表达式匹配" class="headerlink" title="正则表达式匹配"></a>正则表达式匹配</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/a/</span>;        <span class="comment">//匹配字符串中的a字符</span></span><br><span class="line">reg.test(<span class="string">"abc"</span>);        </span><br><span class="line"><span class="comment">//正则表达式的test用来检测字符串是否满足正则表达式的要求；</span></span><br><span class="line"><span class="comment">//由于"abc"中存在a，所以是符合要求的，所以这段代码的返回值为：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isTrue = reg.test(<span class="string">"coke"</span>);   <span class="comment">//由于"coke"中不存在a字符，所以不符合条件   --&gt;isTrue:false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/abc/</span>;     </span><br><span class="line">reg2.test(<span class="string">"adbcd"</span>); <span class="comment">//字符串中必然存在"abc"才符合要求，所以这段代码的返回值为false</span></span><br><span class="line"></span><br><span class="line">reg2.test(<span class="string">"1abc"</span>);  <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"abc123"</span>);    <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"abcabc"</span>);    <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="正则表达式特殊字符"><a href="#正则表达式特殊字符" class="headerlink" title="正则表达式特殊字符"></a>正则表达式特殊字符</h2><h3 id="字符类别"><a href="#字符类别" class="headerlink" title="字符类别"></a>字符类别</h3><ul><li><p>. 表示除了换行符(\r \n)以外的任意字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/./</span>;</span><br><span class="line">reg.test(<span class="string">"a"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"."</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"\r"</span>); <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"1\r"</span>);    <span class="comment">//存在一个1，不是换行符，所以结果为：true</span></span><br><span class="line">reg.test(<span class="string">"\r\n"</span>);   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意点：如果以后要匹配.字符，不要直接写.</span></span><br><span class="line"><span class="comment">//为了匹配qq邮箱，写了 /qq.com/ 这是一个错误的写法：</span></span><br><span class="line"><span class="comment">//=&gt;/qq.com/不仅匹配："qq.com"也匹配"qq3com" "qq@com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//解决方案：/qq\.com/  或者 /qq[.]com/</span></span><br></pre></td></tr></table></figure></li><li><p>\d 表示数字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\d/</span>;</span><br><span class="line">reg.test(<span class="string">"123abc"</span>); <span class="comment">//由于存在一个数字，所以结果为true</span></span><br><span class="line">reg.test(<span class="string">"abcde"</span>);  <span class="comment">//由于不存在任何数字，所以结果为false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展：</span></span><br><span class="line"><span class="keyword">var</span> _reg=<span class="regexp">/\d\d/</span>;</span><br><span class="line">_reg.test(<span class="string">"1b"</span>);    <span class="comment">//不存在2个连续数字，所以结果为：false</span></span><br><span class="line">_reg.test(<span class="string">"a12c"</span>);  <span class="comment">//存在2个连续数字，结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配手机号码：出现了连续11个数字</span></span><br><span class="line"><span class="keyword">var</span> isCellphoneNumber=<span class="regexp">/\d\d\d\d\d\d\d\d\d\d\d/</span>;</span><br></pre></td></tr></table></figure></li><li><p>案例：匹配手机号码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d\d\d\d\d\d\d\d\d\d\d/</span>;</span><br><span class="line">reg.test(<span class="string">"13532159091"</span>);    <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"17380889395"</span>);    <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"a7380889395"</span>);        <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>\D 是\d的取反结果，表示不是数字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\D/</span>;</span><br><span class="line">_reg.test(<span class="string">"123"</span>);   <span class="comment">//由于全是数字，所以结果为：false</span></span><br><span class="line">_reg.test(<span class="string">"123a"</span>);  <span class="comment">//存在一个字母，所以结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/123\D5/</span>;</span><br><span class="line">_reg.test(<span class="string">"12345"</span>); <span class="comment">//false</span></span><br><span class="line">_reg.test(<span class="string">"123b5"</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>\w 匹配字母、数字、下划线 ，三者满足其一即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\w/</span>;   </span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//存在数字，结果为：true</span></span><br><span class="line">reg.test(<span class="string">"a"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"1"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"_"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"-"</span>);  <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"."</span>);  <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">"1."</span>);   <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"_\r\n"</span>);  <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"\r\n"</span>);   <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>\W 是\w的取反</p></li><li><p>\s 表示一个空白字符（例如：\r \n \t 空格 。。。）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\s/</span>;</span><br><span class="line">reg.test(<span class="string">"abc def"</span>);   <span class="comment">//存在一个空白，结果为：true</span></span><br><span class="line">reg.test(<span class="string">"abc\r123"</span>);   <span class="comment">//存在一个\r，结果为：true</span></span><br><span class="line">reg.test(<span class="string">"abc"</span>);    <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>\S 是\s的取反</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\S/</span>;</span><br><span class="line">reg.test(<span class="string">" \r \n "</span>);   <span class="comment">//全是空白字符，结果为false</span></span><br><span class="line">reg.test(<span class="string">"123 abc"</span>);    <span class="comment">//存在一个空白，结果为true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/\s\S/</span>;</span><br><span class="line">reg3.test(<span class="string">" a"</span>);    <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"a "</span>);    <span class="comment">//false</span></span><br><span class="line">reg3.test(<span class="string">"a b"</span>);   <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>\ 转义字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/./</span>;    <span class="comment">//匹配除了换行符以外的任意字符</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\./</span>;   <span class="comment">//匹配.字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\//</span>;   <span class="comment">//匹配一个正斜杠：/</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/[/]/</span>;  <span class="comment">//。。。。。。。。。</span></span><br></pre></td></tr></table></figure></li><li><p>案例：匹配邮箱</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//asfas.com</span></span><br><span class="line"><span class="comment">//123ad.com</span></span><br><span class="line"><span class="comment">//ABC12.com</span></span><br><span class="line"><span class="comment">//abc_1.com</span></span><br><span class="line"><span class="keyword">var</span> reg =<span class="regexp">/\w\w\w\w\w\.com/</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="字符集合"><a href="#字符集合" class="headerlink" title="字符集合"></a>字符集合</h3><ul><li><p>[]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/[1a2b3]/</span>; <span class="comment">//匹配一个字符，这个字符必须是：1/a/2/b/3其中一种，如果是就表示满足，如果不是就不满足</span></span><br><span class="line">reg.test(<span class="string">"a"</span>);      <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"3"</span>);      <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"fg5678"</span>); <span class="comment">//一个符合要求的字符都不存在，结果为：false</span></span><br><span class="line">reg.test(<span class="string">"a999999"</span>);    <span class="comment">//结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//升级版</span></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/[123][abc]/</span>;  <span class="comment">//为了匹配连续2个字符，第一个字符必须在1/2/3之内，第二个字符必须在a/b/c之内</span></span><br><span class="line">reg2.test(<span class="string">"2a"</span>);    <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"3c"</span>);    <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"1basdfasf"</span>); <span class="comment">//true</span></span><br><span class="line">reg2.test(<span class="string">"asdfasdf1c"</span>);    <span class="comment">//存在符合条件的1c，结果为：true</span></span><br><span class="line">reg2.test(<span class="string">"39"</span>);    <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/[0-9]/</span>;   <span class="comment">//匹配数字0-9之间，任何一个数字 等价于：/\d/</span></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/[a-z]/</span>;   <span class="comment">//匹配小写字母</span></span><br><span class="line"><span class="keyword">var</span> reg4=<span class="regexp">/[A-Z]/</span>;   <span class="comment">//匹配大写字母</span></span><br><span class="line"><span class="keyword">var</span> reg5=<span class="regexp">/[a-zA-Z]/</span>;<span class="comment">//匹配所有字母</span></span><br><span class="line"><span class="keyword">var</span> reg6=<span class="regexp">/[A-Za-z]/</span>;<span class="comment">//..........</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg10=<span class="regexp">/[0-9abc]/</span>;</span><br><span class="line">reg10.test(<span class="string">"3"</span>);<span class="comment">//true</span></span><br><span class="line">reg10.test(<span class="string">"five"</span>);<span class="comment">//false</span></span><br><span class="line">reg10.test(<span class="string">"banana"</span>);<span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>[^]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/[^123]/</span>;   <span class="comment">//匹配一个字符，但是这个字符既不是1 并且 不是2 并且 不是3 </span></span><br><span class="line">reg.test(<span class="string">"a"</span>);      <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"3"</span>);      <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//没有1，2，3以外的字符，结果为：false</span></span><br><span class="line">reg.test(<span class="string">"a123"</span>);   <span class="comment">//存在一个符合条件的a，所以结果为：true</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h3><ul><li>^ 表示字符串最左边</li><li>$ 表示字符串最右边<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/^abc/</span>;     <span class="comment">//表示以abc开头</span></span><br><span class="line">reg.test(<span class="string">"123abc123"</span>);  <span class="comment">//并不是以abc开头，结果为：false</span></span><br><span class="line">reg.test(<span class="string">"abc123"</span>);     <span class="comment">//以abc开头，结果为：true</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc$/</span>;     <span class="comment">//表示以abc结尾</span></span><br><span class="line">reg.test(<span class="string">"123abc"</span>); <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"abc123"</span>); <span class="comment">//结果为：false</span></span><br><span class="line">reg.test(<span class="string">"123bc"</span>);  <span class="comment">//结果为：false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匹配一个手机号码 (11位)--&gt;(1)+(10位数字)</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\d\d\d\d\d\d\d\d\d\d/</span>;</span><br><span class="line">reg.test(<span class="string">"13166668888a"</span>);   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/^1\d\d\d\d\d\d\d\d\d\d$/</span>;</span><br><span class="line">reg2.test(<span class="string">"13166668888a"</span>);   <span class="comment">//false</span></span><br><span class="line">reg2.test(<span class="string">"13166668888"</span>);    <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/^1[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/</span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/^abc$/</span>;    <span class="comment">//表示字符串abc</span></span><br><span class="line">reg.test(<span class="string">"abc"</span>);    <span class="comment">//结果为：true</span></span><br><span class="line">reg.test(<span class="string">"123abc"</span>); <span class="comment">//结果为：false</span></span><br></pre></td></tr></table></figure><h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><ul><li><p><code>*</code> 出现0次或多次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\d*/</span>;</span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"234"</span>);    <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/1\d*/</span>;</span><br><span class="line">reg3.test(<span class="string">"1"</span>); <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"123"</span>);   <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"a123"</span>)   <span class="comment">//true</span></span><br><span class="line">reg3.test(<span class="string">"a123456b"</span>);   <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p><code>+</code> 出现1次或多次(至少一次)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\d+/</span>;</span><br><span class="line">reg.test(<span class="string">"1"</span>);      <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"123"</span>);    <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p><code>?</code> 出现0次或一次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\d?/</span>; </span><br><span class="line">reg.test(<span class="string">"12"</span>);     <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"1"</span>);      <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p><code>{3}</code> 出现3次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/1\w&#123;5&#125;/</span>;</span><br><span class="line">reg.test(<span class="string">"1abc"</span>);   <span class="comment">//false</span></span><br><span class="line">reg.test(<span class="string">"112345"</span>); <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"1abc12"</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p><code>{3,}</code> 至少出现3次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/\d&#123;2,&#125;/</span>;</span><br><span class="line">reg.test(<span class="string">"12"</span>); <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">"5"</span>);  <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p><code>{3,5}</code> 出现3-5次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc&#123;3&#125;/</span>;           <span class="comment">//表示匹配abccc</span></span><br><span class="line">reg.test(<span class="string">"123abccc123"</span>);    <span class="comment">//结果为：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg3=<span class="regexp">/(abc)&#123;2&#125;/</span>;    <span class="comment">//匹配abcabc</span></span><br></pre></td></tr></table></figure></li><li><p><code>|</code> 或者</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc|123/</span>;  <span class="comment">//表示匹配abc或者123</span></span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">"abc456"</span>); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg5=<span class="regexp">/^abc|123$/</span>;  <span class="comment">//匹配以abc开头，或者以123结尾</span></span><br><span class="line">reg5.test(<span class="string">"abcafsadfasd"</span>);<span class="comment">//true</span></span><br><span class="line">reg5.test(<span class="string">"afsdfasdf123"</span>);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg6=<span class="regexp">/^(abc|123)$/</span>;        <span class="comment">//匹配abc/123</span></span><br></pre></td></tr></table></figure></li><li><p><code>()</code> 分组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//010-88889999</span></span><br><span class="line"><span class="comment">//0576-12312312</span></span><br><span class="line"><span class="comment">//0895-1234567</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>;  <span class="comment">//匹配电话号码</span></span><br><span class="line"><span class="keyword">var</span> arr=<span class="string">"021-33335555"</span>.match(<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>)</span><br><span class="line">arr[<span class="number">0</span>]  <span class="comment">//全部</span></span><br><span class="line">arr[<span class="number">1</span>]  <span class="comment">//第一组：区号：021</span></span><br><span class="line">arr[<span class="number">2</span>]  <span class="comment">//第二组：号码：333355555</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>;</span><br><span class="line"><span class="string">"021-33335555"</span>.replace(<span class="regexp">/(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)/</span>,<span class="string">'区号是：$1'</span>)</span><br><span class="line"><span class="comment">//区号是：021</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"[object Array]"</span>;</span><br><span class="line"><span class="keyword">var</span> str2=<span class="string">"[object Object]"</span>;</span><br><span class="line"><span class="keyword">var</span> str3=<span class="string">'[object Function]'</span>;</span><br><span class="line"><span class="keyword">var</span> str4=<span class="string">'[object Date]'</span>;</span><br><span class="line"></span><br><span class="line">str.replace(<span class="string">"[object "</span>,<span class="string">""</span>).replace(<span class="string">"]"</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"></span><br><span class="line">str.replace(<span class="regexp">/\[object /</span>,<span class="string">""</span>).replace(<span class="regexp">/\]/</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"></span><br><span class="line"><span class="comment">//这样的话正则表达式只匹配一次，也就是说后面的]换不掉</span></span><br><span class="line">str.replace(<span class="regexp">/\[object |\]/</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"><span class="comment">//如何解决？进行全局匹配</span></span><br><span class="line">str.replace(<span class="regexp">/\[object |\]/g</span>,<span class="string">""</span>).toLowerCase();</span><br><span class="line"></span><br><span class="line">str.replace(<span class="regexp">/[^\s]+\s/</span>,<span class="string">""</span>).replace(<span class="regexp">/\]/</span>,<span class="string">""</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;正则表达式基础&quot;&gt;&lt;a href=&quot;#正则表达式基础&quot; class=&quot;headerlink&quot; title=&quot;正则表达式基础&quot;&gt;&lt;/a&gt;正则表达式基础&lt;/h1&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://hackycy.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://hackycy.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一次仿写jQuery库的简单代码</title>
    <link href="http://hackycy.github.io/2019/04/25/%E4%B8%80%E6%AC%A1%E4%BB%BF%E5%86%99jQuery%E5%BA%93%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%A3%E7%A0%81/"/>
    <id>http://hackycy.github.io/2019/04/25/一次仿写jQuery库的简单代码/</id>
    <published>2019-04-25T14:39:54.000Z</published>
    <updated>2019-04-25T14:42:16.015Z</updated>
    
    <content type="html"><![CDATA[<p><strong>功能的实现都很简单，但是是需要学着别人的思想</strong></p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//模块化：内部的东西对外是封闭的，只暴露出$,jQuery操作。</span></span></span><br><span class="line"><span class="javascript">        (<span class="function"><span class="keyword">function</span> (<span class="params">global</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">jQuery</span>(<span class="params">selector</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// //获取页面中所有指定的元素</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// const elements = document.querySelectorAll(selector);</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(elements);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// //但是随着$()操作的增加，将会产生无数个css方法，浪费了很多的内存</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// elements.css = function()&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     console.log('query css');</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// return elements;</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> _init = jQuery.prototype.init;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(jQuery.prototype);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> jQuery.prototype.init(selector);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 为了方便少写prototype单词，简化</span></span></span><br><span class="line"><span class="undefined">            jQuery.fn = jQuery.prototype = &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">constructor</span>: jQuery,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                init: <span class="function"><span class="keyword">function</span> (<span class="params">selector</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// // 把查找到的DO吗元素放在变量中</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// const elements = document.querySelectorAll(selector);</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// // this.elements = elements;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// // 但是jQuery为了操作方便，所以将DOM元素放在了自己身上，也就是伪对象数组</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// for (let i = 0; i &lt; elements.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//     this[i] = elements[i];</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// this.length = elements.length;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//判断如果是一个string，则查找</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (jQuery.type(selector) === <span class="string">'string'</span>) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> elements = <span class="built_in">document</span>.querySelectorAll(selector);</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// this.elements = elements;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 但是jQuery为了操作方便，所以将DOM元素放在了自己身上，也就是伪对象数组</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>[i] = elements[i];</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.length = elements.length;</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123; <span class="comment">//如果是一个对象，则直接赋值</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>[<span class="number">0</span>] = selector;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.length = <span class="number">1</span>;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// css(attr, value) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     for (let i = 0; i &lt; this.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         this[i].style[attr] = value;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            jQuery.fn.init.prototype = jQuery.fn;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// jQuery插件编写之路</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 无法使用箭头函数</span></span></span><br><span class="line"><span class="javascript">            jQuery.fn.extend = jQuery.extend = <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (args.length &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> target, source = <span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                source = [...args];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// $.extend | $.fn.extend</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (args.length == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    target = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// args[0].extend</span></span></span><br><span class="line"><span class="undefined">                    target = args[0];</span></span><br><span class="line"><span class="undefined">                    source.splice(0, 1);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 判断当前是谁</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// if (this === jQuery) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     target = args[0];</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     // 删除第一个元素</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     source.splice(0, 1);</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125; else &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     target = this;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(target);</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(source);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// source.forEach((item,index) =&gt; &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     for (const key in item) &#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         target[key] = item[key];</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">//for循环优化</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。 有兼容性问题</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">Object</span>.assign(target, ...source);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> target;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//添加一些工具类方法：$.xxx()</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//$.ajax  $.post $.get  $.type $.each</span></span></span><br><span class="line"><span class="undefined">            jQuery.extend(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//$.each([1,3,5],function(index,value)&#123;&#125;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//$.each(&#123; age:18,height:200 &#125;,function(key,value)&#123;&#125;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//可以遍历数组和对象</span></span></span><br><span class="line"><span class="undefined">                each(target, callback) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//对象有两种，数组对象和普通数组</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//不仅仅可以遍历数组，也可以遍历伪数组</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//&#123; length:0 &#125;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//&#123; 0:100,length:1 &#125;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//&#123; 0:"a",1:"b",2:"c",length:3 &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> ((length <span class="keyword">in</span> target) &amp;&amp; target.length &gt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; target.length; i++) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                            callback.call(target[i], i, target[i]);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 普通对象</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// //获取到p1自身拥有的属性组成数组</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// Object.keys(target).forEach((value,index)=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//     console.log(value,index);</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> target) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span></span><br><span class="line"><span class="undefined">                                callback.call(target[key], key, target[key]);</span></span><br><span class="line"><span class="undefined">                            &#125;</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                type(target) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log('type');</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> type = <span class="built_in">Object</span>.prototype.toString.call(target);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> type.replace(<span class="string">"[object "</span>, <span class="string">""</span>)</span></span><br><span class="line"><span class="javascript">                        .replace(<span class="string">"]"</span>, <span class="string">""</span>)</span></span><br><span class="line"><span class="undefined">                        .toLowerCase();</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                ajax() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'ajax'</span>);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> events = [</span></span><br><span class="line"><span class="javascript">                <span class="comment">//&#123; ele:div1,type:"click",callback:function()&#123;&#125; &#125;,</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//&#123; ele:div1,type:"click",callback:function()&#123;&#125; &#125;</span></span></span><br><span class="line"><span class="undefined">            ];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            jQuery.fn.extend(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 遍历自己</span></span></span><br><span class="line"><span class="undefined">                each(callback) &#123;</span></span><br><span class="line"><span class="javascript">                    jQuery.each(<span class="keyword">this</span>, callback);</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//1、获取样式$("div").css("color")  只能获取到第一个div的颜色</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//2、设置样式</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//      $("div").css("color","red") 设置每一个div的字体颜色</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//      $("div").css(&#123; color:"red","backgroundColor","blue" &#125;)</span></span></span><br><span class="line"><span class="undefined">                css(...args) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (args.length === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 一个参数时分两种情况，如果是一个字符串，则为获取属性，但是如果为一个对象则为设置样式</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (jQuery.type(args[<span class="number">0</span>]) === <span class="string">'string'</span>) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// console.log(this); this指向$("div"),init方法放回的元素</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//不管元素有多少个，只取第一个</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> $<span class="keyword">this</span> = <span class="keyword">this</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> style = <span class="built_in">window</span>.getComputedStyle($<span class="keyword">this</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// console.log(style);</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span> style[args[<span class="number">0</span>]];</span></span><br><span class="line"><span class="javascript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// 设置样式,需要遍历选择器</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">// jQuery.each(this, function()&#123;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//     let $this = this;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//     jQuery.each(args[0], function(key, value)&#123;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//         $this.style[key] = value;</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//     &#125;)</span></span></span><br><span class="line"><span class="javascript">                            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//优化上述代码</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> _that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">                            jQuery.each(args[<span class="number">0</span>], <span class="function"><span class="keyword">function</span> (<span class="params">key, value</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                                _that.css(key, value);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">//链式调用</span></span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 参数为两个，则为一个属性，一个属性值</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 设置单个样式</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// let key = args[0];</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// let value = args[1];</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.style[args[<span class="number">0</span>]] = args[<span class="number">1</span>];</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">//链式调用</span></span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                show() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.css(<span class="string">'display'</span>, <span class="string">'block'</span>);</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                hide() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.css(<span class="string">'display'</span>, <span class="string">'none'</span>);</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                toggle() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> _that = <span class="keyword">this</span>; <span class="comment">//this -&gt; jQuery</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// this -&gt; dom </span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// if (jQuery(this).css('display') === 'block') &#123;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//     jQuery(this).css('display', 'none');</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// &#125;else &#123;</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//     jQuery(this).css('display', 'block');</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//优化上述代码</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> $<span class="keyword">this</span> = jQuery(<span class="keyword">this</span>);</span></span><br><span class="line"><span class="javascript">                        $<span class="keyword">this</span>.css(<span class="string">'display'</span>) === <span class="string">'block'</span> ? $<span class="keyword">this</span>.hide() : $<span class="keyword">this</span>.show();</span></span><br><span class="line"><span class="undefined">                    &#125;)</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 添加event</span></span></span><br><span class="line"><span class="undefined">                on(type, callback) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// console.log(this);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.addEventListener(type, callback);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                        events.push(&#123;</span></span><br><span class="line"><span class="javascript">                            ele: <span class="keyword">this</span>,</span></span><br><span class="line"><span class="undefined">                            type: type,</span></span><br><span class="line"><span class="undefined">                            callback: callback</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">//链式编程</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//解绑绑定：$("div").off("click")：表示解除当前元素的所有的单击事件</span></span></span><br><span class="line"><span class="undefined">                off(type) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> _that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> es = events.filter(<span class="function"><span class="keyword">function</span> (<span class="params">e, i</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(i, e);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="comment">//查看绑定的元素是否存在events数组中，并且有没有该元素绑定的事件,并且移除</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> isCurent =  e.ele === _that &amp;&amp; e.type === type</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (isCurent) &#123;</span></span><br><span class="line"><span class="undefined">                                events.splice(i, 1);</span></span><br><span class="line"><span class="undefined">                            &#125;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span> isCurent;</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (es.length &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//可能存在多次绑定</span></span></span><br><span class="line"><span class="javascript">                        es.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(e, _that);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> &#123; callback &#125; = e;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                            _that.removeEventListener(type, callback);</span></span><br><span class="line"><span class="undefined">                        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(events);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// function F(selector) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     // 把查找到的DO吗元素放在变量中</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     const elements = document.querySelectorAll(selector);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     // this.elements = elements;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     // 但是jQuery为了操作方便，所以将DOM元素放在了自己身上，也就是伪对象数组</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     for (let i = 0; i &lt; elements.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         this[i] = elements[i];</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     this.length = elements.length;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// F.prototype.css = function(attr, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(this.elements.length);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     for(let i=0; i&lt;this.elements.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         this.elements[i].style[attr] = value;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// F.prototype = &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     constructor: F,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     css(attr, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         for (let i = 0; i &lt; this.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             this[i].style[attr] = value;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 相当于赋值给顶层对象window的属性</span></span></span><br><span class="line"><span class="undefined">            global.$ = global.jQuery = jQuery;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        &#125;)(<span class="built_in">window</span>); <span class="comment">//自调用函数</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log($);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').css('color', 'red');</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('.header').css('color', 'blue');</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var p = &#123;&#125;;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.extend(p, &#123; a: 1 &#125;, &#123; b: 2 &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log(p);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.fn.extend(&#123; a: 0 &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log($.fn);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.each(&#123; a: 'a', b: 'b' &#125;, function (key, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(key, value);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.each(&#123; 0: 100, 1: 200, 2: 300, length: 3 &#125;, function (key, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(key, value);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $.each([1, 2, 3], function (key, value) &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     console.log(key, value);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log($.type(&#123; a: 1 &#125;));</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').css(&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     'color': 'red',</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     'backgroundColor': 'blue'</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').css('color', 'red');</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('.header').hide();</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('div').toggle();</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.footer'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'footer'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.header'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'header'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.section'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'.footer'</span>).off(<span class="string">'click'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'remove'</span>)</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $('.header').off('click');</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: rebeccapurple;</span></span><br><span class="line"><span class="css">            <span class="comment">/* display: none; */</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;功能的实现都很简单，但是是需要学着别人的思想&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://hackycy.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://hackycy.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>hexo next主题首页隐藏指定文章</title>
    <link href="http://hackycy.github.io/2019/04/23/hexo-next%E4%B8%BB%E9%A2%98%E9%A6%96%E9%A1%B5%E9%9A%90%E8%97%8F%E6%8C%87%E5%AE%9A%E6%96%87%E7%AB%A0/"/>
    <id>http://hackycy.github.io/2019/04/23/hexo-next主题首页隐藏指定文章/</id>
    <published>2019-04-23T04:24:19.000Z</published>
    <updated>2019-04-23T04:48:44.447Z</updated>
    
    <content type="html"><![CDATA[<p>因为博客下混合了我技术类和生活类的文章，但是首页我只想显示技术类，所以记录下做法。</p><a id="more"></a><p><strong>具体做法</strong></p><p>找到<code>themes⁩</code> ▸ <code>⁨next</code>⁩ ▸ <code>⁨layout</code>⁩文件夹下的<code>index.swig</code>文件</p><p><img src="index1.png" alt=""></p><p>定位修改<code>post_template.render</code></p><p>修改成以下代码,其中修改的是为文章的首页显示添加判断条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.visible !== &apos;hide&apos; %&#125;</span><br><span class="line">   &#123;&#123; post_template.render(post, true) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>即修改后</p><p><img src="index2.png" alt=""></p><p><strong>在新的post中添加visible字段来控制是否首页显示</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: post title</span><br><span class="line">date: 2019-04-23 12:24:19</span><br><span class="line">tags:</span><br><span class="line"><span class="code">    - hexo</span></span><br><span class="line">categories:</span><br><span class="line"><span class="code">    - hexo</span></span><br><span class="line">visible: hide</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">.........</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为博客下混合了我技术类和生活类的文章，但是首页我只想显示技术类，所以记录下做法。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hackycy.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://hackycy.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>老司机带带我——翻车牌</title>
    <link href="http://hackycy.github.io/2019/04/23/%E8%80%81%E5%8F%B8%E6%9C%BA%E5%B8%A6%E5%B8%A6%E6%88%91%E2%80%94%E2%80%94%E7%BF%BB%E8%BD%A6%E7%89%8C/"/>
    <id>http://hackycy.github.io/2019/04/23/老司机带带我——翻车牌/</id>
    <published>2019-04-23T04:23:50.000Z</published>
    <updated>2019-05-16T08:44:08.868Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="老司机不带你" />    <label for="pass">老司机不带你</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      老司机不带你
    
    </summary>
    
      <category term="程序人生" scheme="http://hackycy.github.io/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML5移动端自适应方案——媒体查询+rem方案</title>
    <link href="http://hackycy.github.io/2019/04/22/HTML5%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94%E6%96%B9%E6%A1%88%E2%80%94%E2%80%94%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2-rem%E6%96%B9%E6%A1%88/"/>
    <id>http://hackycy.github.io/2019/04/22/HTML5移动端自适应方案——媒体查询-rem方案/</id>
    <published>2019-04-22T08:48:42.000Z</published>
    <updated>2019-05-22T09:06:22.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>虽然H5的页面与PC的Web页面相比简单了不少，但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。</p><a id="more"></a><blockquote><p>本文中不涉及一些viewport、dpr等的概念介绍，详细了解可以再查看本博客中另一篇文章有具体讲解这些概念。</p></blockquote><h1 id="EM和REM"><a href="#EM和REM" class="headerlink" title="EM和REM"></a>EM和REM</h1><p>使用REM+媒体查询方式进行编写自适应方案时，先来了解下EM和REM是什么？</p><h2 id="EM"><a href="#EM" class="headerlink" title="EM"></a>EM</h2><p>em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。</p><p><strong>EM的特点</strong></p><ul><li>em的值并不是固定的</li><li>em会继承父级元素的字体大小</li></ul><blockquote><p>注意：任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em,10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了。<br>所以我们在写CSS的时候，需要注意两点：</p><ol><li>body选择器中声明Font-size=62.5%；</li><li>将你的原来的px数值除以10，然后换上em作为单位；</li><li>重新计算那些被放大的字体的em数值。避免字体大小的重复声明。<br>也就是避免1.2 * 1.2= 1.44的现象。比如说你在#content中声明了字体大小为1.2em，那么在声明p的字体大小时就只能是1em，而不是1.2em, 因为此em非彼em，它因继承#content的字体高而变为了1em=12px。</li></ol></blockquote><h2 id="REM"><a href="#REM" class="headerlink" title="REM"></a>REM</h2><p><code>rem</code>是<code>CSS3</code>新增的一个相对单位（root em，根em），这个单位引起了广泛关注。这个单位与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。目前，除了IE8及更早版本外，所有浏览器均已支持rem。</p><p>简单的理解，rem就是相对于根元素<code>&lt;html&gt;</code>的<code>font-size</code>来做计算。而我们的方案中使用rem单位，是能轻易的根据<code>&lt;html&gt;</code>的<code>font-size</code>计算出元素的盒模型大小。而这个特色对我们来说是特别的有益处。</p><h1 id="媒体查询-Rem实现自适应方案"><a href="#媒体查询-Rem实现自适应方案" class="headerlink" title="媒体查询 + Rem实现自适应方案"></a>媒体查询 + Rem实现自适应方案</h1><p>放上代码中所使用的设计稿和图片，自行右键保存。图片来源<a href="https://github.com/amfe/article/issues/17" target="_blank" rel="noopener">手淘H5适配方案</a></p><p><img src="designpsd.jpeg" alt=""></p><p><img src="grayscale.jpeg" alt=""></p><p><img src="haibao.jpg" alt=""></p><p>该设计图是按照iPhone6作为基准设计尺寸，iPhone6的分辨率为<code>750pt * 1334pt</code>，iPhone6的DPR为2，则CSS像素则缩小为设计稿尺寸的<code>1/2</code>。既设计稿量出某宽为20px，则css像素则转为为10px。</p><p>首先按照设计稿尺寸还原页面，为了方便理解，首先使用px还原页面，在iPhone6下显示设计。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">            -webkit-tap-highlight-color: transparent;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f5294c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* background-color: #f5294c; */</span></span></span><br><span class="line"><span class="undefined">            min-width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.header</span> <span class="selector-tag">h1</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0 5px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">            padding: 5px 0;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="undefined">            width: 88px;</span></span><br><span class="line"><span class="undefined">            height: 88px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="undefined">            padding: 5px 8px 0 8px;</span></span><br><span class="line"><span class="undefined">            vertical-align: top;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">            font-size: 13px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="undefined">            margin: 9px 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 10px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fffffd</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.intro</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffb09b</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            right: 9px;</span></span><br><span class="line"><span class="undefined">            bottom: 7px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">            font-size: 13px;</span></span><br><span class="line"><span class="undefined">            padding: 5px 18px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f42a4b</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 海报 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/haibao.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写后页面显示，当然这里是举例，有些像素为了方便计算，只是大概的测量了一下，这里使用的测量工具为<code>Mark Man</code>。</p><p><img src="px_h5.gif" alt=""></p><p>然后看看其他设备显示的效果，因为这里使用的是<code>流式布局</code>，即百分比布局，页面还没有说变形很严重，但是在iPhone5设备上或者更小的设备上显示就会显得页面元素偏大，而在一些ipad就显得更为难受了。(换成其他DPR下情况也是相同)。</p><p>这里不讲解媒体查询是什么和具体语法，详细了解可以查看<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries" target="_blank" rel="noopener">MDN</a></p><p>而该方案就是基于rem的原理，针对不同屏幕尺寸的改变来改变根节点html的<code>font-size</code>的大小。</p><p>这里总结出了一个公式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-size(rem) = 预设font-size(rem)基准值 / （设计稿宽度 / DPR） * 设备宽度</span><br></pre></td></tr></table></figure><p>该公式的原理就是先根据设计稿的尺寸和DPR求出设备的宽度，根据该设备的宽度下预设一个<code>font-size</code>的基准值，再求出该设备下的宽度与预设基准值的比值，然后其他设备下的设备宽度除以该基准值就可以求出其他设备下的html的<code>font-size</code>的值。所以上述公式是由下条公式变化得来的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-size(rem) = 设备宽度 / （（设计稿宽度 / DPR） / 预设font-size(rem)基准值）</span><br></pre></td></tr></table></figure><p>按照本文中设计稿为iPhone6的尺寸设计，我们以设计稿下iPhone6为<code>375px</code>的html的<code>font-size</code>预设基准值为<code>100px</code>（方便计算）,即<code>1rem = 100px</code>，则其他设备像素下html的<code>font-size</code>的值为</p><ul><li>iPhone5的设备像素320px:<code>100 / (750 / 2) * 320 = 85.333px</code></li><li>iPhone6的设备像素375px:<code>100px</code></li><li>iPhone6Plus的设备像素414px:<code>100 / (750 / 2) * 414 = 110.4px</code></li></ul><p>只要以设计稿下预设的基准值再根据其他屏幕来换算计算出其他设备下的html的<code>font-size</code>大小即可。</p><p>页面中再根据<code>1rem = 100px</code>将页面中px单位换算成rem即可。再添加上根据设备宽度的媒体查询设置根节点的<code>font-size</code>大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* base-rem = 100px */</span></span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">320px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">85.333px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">360px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">96px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">375px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">414px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">110.4px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">480px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">128px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">540px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">144px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> (min-width: <span class="number">768px</span>) &#123;</span><br><span class="line">            <span class="selector-tag">html</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">204.8px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>更改后整体页面代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="comment">/* base-rem = 100px */</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">320px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 85<span class="selector-class">.333px</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">360px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 96px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">375px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 100px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">414px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 110<span class="selector-class">.4px</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">480px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 128px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">540px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="undefined">                font-size: 144px;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        @<span class="keyword">media</span> (min-width: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="undefined">            html &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 204<span class="selector-class">.8px</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html,body &#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f5294c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* background-color: #f5294c; */</span></span></span><br><span class="line"><span class="undefined">            min-width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.header</span> <span class="selector-tag">h1</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0 0<span class="selector-class">.05rem</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0<span class="selector-class">.05rem</span> 0;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.left</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 0<span class="selector-class">.88rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span>: 0<span class="selector-class">.88rem</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">            display: table-cell;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0<span class="selector-class">.05rem</span> 0<span class="selector-class">.08rem</span> 0 0<span class="selector-class">.08rem</span>;</span></span><br><span class="line"><span class="undefined">            vertical-align: top;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 0<span class="selector-class">.13rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span>: 0<span class="selector-class">.09rem</span> 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.price</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 0<span class="selector-class">.1rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f32a4c</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fffffd</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.right</span> <span class="selector-class">.intro</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffb09b</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> &#123;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">right</span>: 0<span class="selector-class">.09rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">bottom</span>: 0<span class="selector-class">.07rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 0<span class="selector-class">.13rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 0<span class="selector-class">.05rem</span> 0<span class="selector-class">.18rem</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f42a4b</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span> <span class="selector-class">.section</span> <span class="selector-class">.item</span> <span class="selector-class">.buy</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fefffc</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 海报 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/haibao.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/grayscale.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">srcset</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>Carter's1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>双11价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>¥ 299<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>（满400 减 100）<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">small</span>&gt;</span>一小时热卖1769件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"##"</span>&gt;</span>马上抢！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>适配后</p><p><img src="rem_h5_dpr2.gif" alt="gif"></p><p>图片较大，可自行运行代码在dpr为1、2、3下再更改屏幕尺寸，运行结果良好，可谓够用。</p><p>为什么可谓够用，该方案有缺点：通过设备宽度范围区间这样的媒体查询来动态改变rem基准值，其实不够精确，比如：宽度为360px 和 宽度为320px的手机，因为屏宽在同一范围区间内(&lt;375px)，所以会被同等对待(rem基准值相同)，而事实上他们的屏幕宽度并不相等，它们的布局也应该有所不同。最终，结论就是：这样的做法，没有做到足够的精确，但是够用。</p><h1 id="Less优化"><a href="#Less优化" class="headerlink" title="Less优化"></a>Less优化</h1><p>如果项目中使用Less或者Sass等CSS预处理器可以更加简化代码的编写与计算量。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要适配的设备宽度数组</span></span><br><span class="line"><span class="variable">@adapterDeviceWidthList:</span> <span class="number">320px</span>, <span class="number">360px</span>, <span class="number">375px</span>, <span class="number">414px</span>, <span class="number">480px</span>, <span class="number">540px</span>, <span class="number">640px</span>, <span class="number">750px</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@psdWidth:</span> <span class="number">750</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@psdDpr:</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@baseFontSize:</span> <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">@deviceLength:</span> length(<span class="variable">@adapterDeviceWidthList</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.adapterMixin</span>(<span class="variable">@index</span>) <span class="keyword">when</span> (<span class="variable">@index</span> &lt;= <span class="variable">@deviceLength</span>) &#123;</span><br><span class="line">    <span class="keyword">@media</span> (<span class="attribute">min-width</span>: extract(<span class="variable">@adapterDeviceWidthList</span>, <span class="variable">@index</span>)) &#123;</span><br><span class="line">        <span class="selector-tag">html</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">100</span> / (<span class="variable">@psdWidth</span> / <span class="variable">@psdDpr</span>) * extract(<span class="variable">@adapterDeviceWidthList</span>, <span class="variable">@index</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.adapterMixin</span>(<span class="variable">@index</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.adapterMixin</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>生成的css为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">320px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">85.33333333px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">360px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">96px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">375px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">414px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">110.4px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">480px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">128px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">540px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">144px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">640px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">170.66666667px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">750px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用less维护起来就方便很多，只要维护<code>adapterDeviceWidthList</code>中设备的宽度即可，如果设计稿开始有变化更改变量即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;虽然H5的页面与PC的Web页面相比简单了不少，但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hackycy.github.io/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://hackycy.github.io/tags/HTML/"/>
    
      <category term="移动端适配" scheme="http://hackycy.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Less入门</title>
    <link href="http://hackycy.github.io/2019/04/15/Less%E5%85%A5%E9%97%A8/"/>
    <id>http://hackycy.github.io/2019/04/15/Less入门/</id>
    <published>2019-04-15T15:48:32.000Z</published>
    <updated>2019-05-06T09:15:16.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Less是什么"><a href="#Less是什么" class="headerlink" title="Less是什么"></a>Less是什么</h1><p>LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承， 运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。</p><p><a href="https://www.html.cn/doc/less/features/#mixin-guards-feature" target="_blank" rel="noopener">Less官方文档</a></p><a id="more"></a><h1 id="Less安装"><a href="#Less安装" class="headerlink" title="Less安装"></a>Less安装</h1><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>引入你的<code>.less</code>样式文件的时候要设置<code>rel</code>属性值为<code>“stylesheet/less”</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet/less"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"styles.less"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下载<code>less.js</code>,<a href="https://www.html.cn/doc/less/" target="_blank" rel="noopener">下载地址</a>,在<head><meta name="generator" content="Hexo 3.8.0"> 中引入:</head></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"less.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意你的less样式文件一定要在引入less.js前先引入。<br>在浏览器中使用less.js开发是很好的，但不推荐用于生产环境中。</p></blockquote><p><strong>特别注意</strong></p><ul><li>确保包涵 <code>.less</code> 样式表在 <code>less.js</code> 脚本之前</li><li>当你引入多个 <code>.less</code> 样式表时，它们都是独立编译的。所以，在每个文件中定义的变量、混合、命名空间都不会被其它的文件共享。</li></ul><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>在服务器端安装<code>LESS</code>的最简单方式就是通过<code>npm(node 的包管理器)</code>, 像这样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install less</span><br></pre></td></tr></table></figure><p>如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install less@latest</span><br></pre></td></tr></table></figure><h3 id="命令行使用"><a href="#命令行使用" class="headerlink" title="命令行使用"></a>命令行使用</h3><p>一旦安装完成，就可以在命令行中调用，例如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lessc styles.less</span><br></pre></td></tr></table></figure><p>这样的话编译后的CSS将会输出到 ‘stdout’ 中，你可以选择将这个输出重定向到文件中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lessc styles.less &gt; styles.css</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lessc -v</span><br><span class="line">$ lessc --version</span><br></pre></td></tr></table></figure><p>如果你想输出一个压缩后的CSS，只要加到<code>-x</code>选项即可。如果你想要更NB的压缩，你也可以选择使用 <a href="https://github.com/GoalSmashers/clean-css" target="_blank" rel="noopener">Clean CSS</a>压缩器，只要加上<code>--clean-css</code> 插件即可。</p><p>直接运行lessc，不带任何参数将可以看到所有的命令行参数或 查看<a href="https://www.html.cn/doc/less/usage/index.html" target="_blank" rel="noopener">用法</a>.</p><h3 id="代码中使用"><a href="#代码中使用" class="headerlink" title="代码中使用"></a>代码中使用</h3><p>你可以在Node中调用编译器，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> less = <span class="built_in">require</span>(<span class="string">'less'</span>);</span><br><span class="line"></span><br><span class="line">less.render(<span class="string">'.class &#123; width: (1 + 1) &#125;'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e, output</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(output.css);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>将会输出</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>使用编译工具，比如 Koala 挺好用的（当然也有很多在线编译工具）</li><li>在项目中使用（比如Vue，需要安装less-loader）</li><li>客户端调试（存在跨域问题，不推荐这种方式）<ul><li>使用link标签引用less.min.js（官网下载），注意rel=”stylesheet/less”</li><li>这种方式不生成css文件，直接在浏览器查看</li></ul></li></ul></blockquote><h1 id="嵌套规则"><a href="#嵌套规则" class="headerlink" title="嵌套规则"></a>嵌套规则</h1><h2 id="less的嵌套规则类似HTML的结构，使得CSS代码清晰"><a href="#less的嵌套规则类似HTML的结构，使得CSS代码清晰" class="headerlink" title="less的嵌套规则类似HTML的结构，使得CSS代码清晰"></a>less的嵌套规则类似HTML的结构，使得CSS代码清晰</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*css 写法*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line"> <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// less写法</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-tag">a</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="父元素选择符-amp"><a href="#父元素选择符-amp" class="headerlink" title="父元素选择符 &amp;"></a>父元素选择符 <code>&amp;</code></h2><ul><li>表示当前选择器的所有父选择器</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//css写法</span></span><br><span class="line"><span class="selector-class">.bgcolor</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#888888</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//less写法</span></span><br><span class="line"><span class="selector-class">.bgcolor</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>; </span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#888888</span>;      </span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="改变选择器的顺序"><a href="#改变选择器的顺序" class="headerlink" title="改变选择器的顺序"></a>改变选择器的顺序</h2><ul><li>将&amp;放到当前选择器之后，会将当前选择器移到最前面</li><li>只需记住 “&amp; 代表当前选择器的所有父选择器”</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="selector-class">.color</span> <span class="selector-tag">&amp;</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.color</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组合使用"><a href="#组合使用" class="headerlink" title="组合使用"></a>组合使用</h2><ul><li>将生成所有可能的选择器列表</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span>, <span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="selector-tag">&amp;</span> <span class="selector-tag">&amp;</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.div1</span>, <span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span> <span class="selector-class">.div2</span>,</span><br><span class="line"><span class="selector-class">.div2</span> <span class="selector-class">.div1</span>,</span><br><span class="line"><span class="selector-class">.div1</span> <span class="selector-class">.div1</span>,</span><br><span class="line"><span class="selector-class">.div2</span> <span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="变量的定义和使用"><a href="#变量的定义和使用" class="headerlink" title="变量的定义和使用"></a>变量的定义和使用</h2><ul><li>定义：@name: value; （@black: #000;）</li><li>使用场合分3种：<ul><li>常规使用：@name</li><li>作为选择器或属性名：@{name}</li><li>作为URL：”@{name}”</li></ul></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 1.常规使用 */</span></span><br><span class="line"><span class="variable">@black:</span> <span class="number">#000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@black</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2.作用选择器和属性名 */</span></span><br><span class="line"><span class="variable">@selName:</span> container;</span><br><span class="line"><span class="variable">@proName:</span> width;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.@&#123;selName&#125;</span> &#123;</span><br><span class="line">  <span class="attribute">@&#123;proName&#125;</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3.作为URL */</span></span><br><span class="line"><span class="variable">@imgUrl:</span> <span class="string">"./images/logo.png"</span></span><br><span class="line"></span><br><span class="line">div &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#FFF</span> url(<span class="string">"@&#123;imgUrl&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#FFF</span> url(<span class="string">"./images/logo.png"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>变量是延迟加载的，可以不预先声明</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@black</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">@black:</span> <span class="number">#000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>变量的作用域<ul><li>less会从当前作用域没找到，将往上查找（类似js）</li><li>如果在某级作用域找到多个相同名称的变量，使用最后定义的那个（类似css）</li></ul></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@var:</span> <span class="number">0</span>;</span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">    <span class="variable">@var:</span> <span class="number">1</span>;</span><br><span class="line">    <span class="selector-class">.brass</span> &#123;</span><br><span class="line">        <span class="variable">@var:</span> <span class="number">2</span>;</span><br><span class="line">        <span class="attribute">three</span>: <span class="variable">@var</span>;</span><br><span class="line">        <span class="variable">@var:</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">one</span>: <span class="variable">@var</span>; <span class="comment">//类似js，无法访问.brass内部</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">    <span class="attribute">one</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class</span> <span class="selector-class">.brass</span> &#123;</span><br><span class="line">    <span class="attribute">three</span>: <span class="number">3</span>;  <span class="comment">//使用最后定义的 @var: 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="混合（mixins）"><a href="#混合（mixins）" class="headerlink" title="混合（mixins）"></a>混合（mixins）</h1><ul><li>混合：一种将一系列属性从一个规则集引入（“混入”）到另一个规则集的方式</li><li>混合是非常重要的一个概念，内容也偏多，可以尝试多看几遍！</li></ul><h2 id="普通混合"><a href="#普通混合" class="headerlink" title="普通混合"></a>普通混合</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//混合</span></span><br><span class="line"><span class="selector-class">.border</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> black;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="selector-class">.border</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.border</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> black;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> black;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="不带参数的混合"><a href="#不带参数的混合" class="headerlink" title="不带参数的混合"></a>不带参数的混合</h2><ul><li>从上面的代码发现，混合也被编译输出了</li><li>在混合名字后加上括号，编译后不再输出</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加括号但不带参数的混合</span></span><br><span class="line"><span class="selector-class">.border</span>() &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> black;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="selector-class">.border</span>;  <span class="comment">//加不加括号都可以</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> black;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带参数的混合"><a href="#带参数的混合" class="headerlink" title="带参数的混合"></a>带参数的混合</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//带参数的混合</span></span><br><span class="line"><span class="selector-class">.border</span>(<span class="variable">@color</span>) &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="selector-class">.border</span>(<span class="number">#fff</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带参数且有默认值的混合"><a href="#带参数且有默认值的混合" class="headerlink" title="带参数且有默认值的混合"></a>带参数且有默认值的混合</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//带参数且有默认值的混合</span></span><br><span class="line"><span class="selector-class">.border</span>(<span class="variable">@color</span>: <span class="number">#fff</span>) &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="selector-class">.border</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="selector-class">.border</span>(<span class="number">#000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#menu</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: solid <span class="number">1px</span> <span class="number">#000000</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: solid <span class="number">2px</span> <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带多个参数"><a href="#带多个参数" class="headerlink" title="带多个参数"></a>带多个参数</h2><ul><li>多个参数时，参数之间可以用分号或逗号分隔</li><li>注意逗号分隔的是“各个参数”还是“某个列表类型的参数”<ul><li>两个参数，并且每个参数都是逗号分隔的列表：.name(1,2,3; something, ele)</li><li>三个参数，并且每个参数都包含一个数字：.name(1,2,3)</li><li>使用分号，调用包含一个逗号分割的css列表（一个参数）： .name(1,2,3; )</li><li>逗号分割默认值（两个参数）：.name(@param1:red, blue)</li></ul></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//less编写</span></span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@color</span>, <span class="variable">@padding</span>: xxx, <span class="variable">@margin</span>: <span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">color-3</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">padding-3</span>: <span class="variable">@padding</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="variable">@margin</span> <span class="variable">@margin</span> <span class="variable">@margin</span> <span class="variable">@margin</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.div</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>; something, ele);  <span class="comment">//2个参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);                  <span class="comment">//3个参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>; );                <span class="comment">//1个参数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.div</span> &#123;</span><br><span class="line">  <span class="attribute">color-3</span>: <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">padding-3</span>: something, ele;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="attribute">color-3</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">padding-3</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="attribute">color-3</span>: <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">padding-3</span>: xxx;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义多个相同名称的混合"><a href="#定义多个相同名称的混合" class="headerlink" title="定义多个相同名称的混合"></a>定义多个相同名称的混合</h2><ul><li>less会根据参数进行调用相应的混合</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@color</span>) &#123;</span><br><span class="line">  <span class="attribute">color-1</span>: <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@color</span>; <span class="variable">@padding</span>: <span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">color-2</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">padding-2</span>: <span class="variable">@padding</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@color</span>; <span class="variable">@padding</span>: <span class="number">3</span>; <span class="variable">@margin</span>) &#123;</span><br><span class="line">  <span class="attribute">color-3</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">padding-3</span>: <span class="variable">@padding</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="variable">@margin</span> <span class="variable">@margin</span> <span class="variable">@margin</span> <span class="variable">@margin</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.some</span> <span class="selector-class">.selector</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">#008000</span>); <span class="comment">//第二个mixins也被调用了，因为 @padding 有默认值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.some</span> <span class="selector-class">.selector</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">#008000</span>, <span class="number">5</span>); <span class="comment">//只有第二个mixins被调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.some</span> <span class="selector-class">.selector</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color-1</span>: <span class="number">#008000</span>;</span><br><span class="line">  <span class="attribute">color-2</span>: <span class="number">#008000</span>;</span><br><span class="line">  <span class="attribute">padding-2</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.some</span> <span class="selector-class">.selector</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color-2</span>: <span class="number">#008000</span>;</span><br><span class="line">  <span class="attribute">padding-2</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="命名参数"><a href="#命名参数" class="headerlink" title="命名参数"></a>命名参数</h2><ul><li>引用mixin时可以通过参数名称而不是参数的位置来为mixin提供参数值，任何参数都通过名称来引用，这样就不必按照特定的顺序来使用参数</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@color</span>: black; <span class="variable">@margin</span>: <span class="number">10px</span>; <span class="variable">@padding</span>: <span class="number">20px</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="variable">@margin</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">@padding</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="variable">@margin</span>:<span class="number">20</span>; <span class="variable">@color</span>: <span class="number">#33acfe</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">#efca44</span>; <span class="variable">@padding</span>: <span class="number">40px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#33acfe</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#efca44</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arguments变量"><a href="#arguments变量" class="headerlink" title="@arguments变量"></a>@arguments变量</h2><ul><li>@arguments表示所有可变参数</li><li>参数的先后顺序就是括号内的顺序 ，在赋值时，值的位置和个数也是一一对应的</li><li>只有一个值，把值赋给第一个，两个值，赋给第一个和第二个……</li><li>若想赋给第一个和第三个，必须把第二个参数的默认值写上</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(<span class="variable">@x</span>: solid, <span class="variable">@c</span>: red) &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">21px</span> <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="selector-class">.border</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="selector-class">.border</span>(solid, black)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">21px</span> solid <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">21px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h2><ul><li>自定义一个字符，使用时加上那个字符，就调用相应的规则</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(all, <span class="variable">@w</span>: <span class="number">5px</span>) &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border</span>(t_l, <span class="variable">@w</span>: <span class="number">5px</span>) &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border</span>(b_l, <span class="variable">@w</span>: <span class="number">5px</span>) &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border</span>(b_r, <span class="variable">@w</span>: <span class="number">5px</span>) &#123;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border</span> &#123;</span><br><span class="line">  <span class="selector-class">.border</span>(all, <span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-class">.border</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="得到混合中变量的返回值"><a href="#得到混合中变量的返回值" class="headerlink" title="得到混合中变量的返回值"></a>得到混合中变量的返回值</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.average</span>(<span class="variable">@x</span>, <span class="variable">@y</span>) &#123;</span><br><span class="line">  <span class="variable">@average</span>((<span class="variable">@x</span> + <span class="variable">@y</span>)/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="selector-class">.average</span>(<span class="number">16px</span>, <span class="number">50px</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">@average</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译结果</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">33px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1、将16px 和 50px 赋值给混合 .average进行计算</span></span><br><span class="line"><span class="comment">2、计算结果赋值给变量 @average</span></span><br><span class="line"><span class="comment">3、然后在div中调用@average的值</span></span><br><span class="line"><span class="comment">4、编译后就得到了average的值33px</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h1><ul><li>任何数值、颜色值和变量都可以进行运算</li></ul><h2 id="数值类运算"><a href="#数值类运算" class="headerlink" title="数值类运算"></a>数值类运算</h2><ul><li>less会自动推算数值的单位，不必每个值都加上单位</li><li>运算符之间必须以空格分开，存在优先级问题时注意使用括号</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: (<span class="number">450px</span> - <span class="number">50</span>)*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.wp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="颜色值运算"><a href="#颜色值运算" class="headerlink" title="颜色值运算"></a>颜色值运算</h2><ul><li>先将颜色值转换为rgb模式，运算完后再转换为16进制的颜色值并返回</li><li>注意：取值为0-255，所以计算时不能超过这个区间，超过默认使用0或255</li><li>注意：不能使用颜色名直接运算</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000000</span> + <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//rgb(0,0,0) + 8</span></span><br><span class="line"><span class="comment">//rgb(8,8,8)</span></span><br><span class="line"><span class="comment">//十六进制：#080808</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#080808</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h1><ul><li>有时混合中嵌套了比较多的规则，而我们只需要其中一部分，可使用命名空间获取</li></ul><h2 id="使用-“-gt-”-符号"><a href="#使用-“-gt-”-符号" class="headerlink" title="使用 “&gt;” 符号"></a>使用 “&gt;” 符号</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//混合集</span></span><br><span class="line"><span class="selector-id">#bgcolor</span>() &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="selector-class">.a</span>() &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b</span>() &#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#ff0000</span>;</span><br><span class="line">    &#125;    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bgcolor1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fdfee0</span>;</span><br><span class="line">  <span class="selector-id">#bgcolor</span>&gt;<span class="selector-class">.a</span>;     <span class="comment">//只使用.a()</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor2</span> &#123;</span><br><span class="line">  <span class="selector-id">#bgcolor</span>&gt;<span class="selector-class">.a</span>&gt;<span class="selector-class">.b</span>;  <span class="comment">//只使用.b()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.bgcolor1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fdfee0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor1</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor2</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="省略-“-gt-”，换成空格"><a href="#省略-“-gt-”，换成空格" class="headerlink" title="省略 “&gt;”，换成空格"></a>省略 “&gt;”，换成空格</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//混合集</span></span><br><span class="line"><span class="selector-id">#bgcolor</span>() &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="selector-class">.a</span>() &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b</span>() &#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#ff0000</span>;</span><br><span class="line">    &#125;    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bgcolor1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fdfee0</span>;</span><br><span class="line">  <span class="selector-id">#bgcolor</span> <span class="selector-class">.a</span>;     <span class="comment">//只使用.a()</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor2</span> &#123;</span><br><span class="line">  <span class="selector-id">#bgcolor</span> <span class="selector-class">.a</span> <span class="selector-class">.b</span>;  <span class="comment">//只使用.b()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.bgcolor1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fdfee0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor1</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bgcolor2</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><ul><li>引入一个或多个文件，这些文件定义的规则可在当前less文件中使用</li><li>使用@import</li></ul><h2 id="引入less文件"><a href="#引入less文件" class="headerlink" title="引入less文件"></a>引入less文件</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.less</span></span><br><span class="line"><span class="variable">@wp:</span> <span class="number">960px</span>;</span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当前less文件</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">"main"</span>; <span class="comment">//可以不加后缀</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@wp</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引入css文件"><a href="#引入css文件" class="headerlink" title="引入css文件"></a>引入css文件</h2><ul><li>注意：不能混合css的规则到项目中，编译后原样输出“@import xxx.css”</li><li>并且引入时不能省略后缀名</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.css</span></span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@import</span> <span class="string">"main.css"</span> ;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@wp</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">@wp</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">"main.css"</span>;  <span class="comment">//原样输出,但有效，css有这条语句</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">960px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带参数的引入"><a href="#带参数的引入" class="headerlink" title="带参数的引入"></a>带参数的引入</h2><ul><li>once：默认，只引入一次</li><li>reference：使用less文件但不输出，注意对比上面的例子（ 不使用会输出没有加括号的混合）</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@wp:</span> <span class="number">960px</span>;</span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当前less文件</span></span><br><span class="line"><span class="keyword">@import</span> (reference) <span class="string">"main"</span>;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@wp</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>inline：在输出中包含less文件但是不能操作</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@wp:</span> <span class="number">960px</span>;</span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当前less文件</span></span><br><span class="line"><span class="keyword">@import</span> (inline) <span class="string">"main"</span>; </span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@wp</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="variable">@wp:</span> <span class="number">960px</span>;    <span class="comment">//报错，@wp未知</span></span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>less：将文件作为less文件对象，无论什么文件扩展名</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.css文件</span></span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当前less</span></span><br><span class="line"><span class="keyword">@import</span> (less) <span class="string">"main.css"</span>;</span><br><span class="line">  <span class="selector-class">.content</span> &#123;</span><br><span class="line"><span class="selector-class">.color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff6600</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>css：将文件作为css文件对象，无论什么文件扩展名</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前less文件</span></span><br><span class="line"><span class="keyword">@import</span> (css) <span class="string">"main.less"</span>;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">"main.less"</span>;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>multiple：允许引入多次相同文件名的文件</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前less</span></span><br><span class="line"><span class="keyword">@import</span> (multiple) <span class="string">"main.less"</span>;</span><br><span class="line"><span class="keyword">@import</span> (multiple) <span class="string">"main.less"</span>;</span><br><span class="line"><span class="keyword">@import</span> (multiple) <span class="string">"main.less"</span>;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@wp</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.color</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="important"><a href="#important" class="headerlink" title="!important"></a>!important</h1><ul><li>提升权重优先级为最高（尽量避免使用）</li><li>在调用的混合集后面追加 !important 关键字，混合集中所有属性都继承<code>!important</code></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.foo</span>(<span class="variable">@bg</span>: <span class="number">#fdfdfd</span>, <span class="variable">@color</span>: <span class="number">#900</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">@bg</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.important</span> &#123;</span><br><span class="line">  <span class="selector-class">.foo</span>() !important</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.important</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fdfdfd</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#990000</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="条件表达式"><a href="#条件表达式" class="headerlink" title="条件表达式"></a>条件表达式</h1><h2 id="带条件的混合"><a href="#带条件的混合" class="headerlink" title="带条件的混合"></a>带条件的混合</h2><ul><li>比较运算符：&gt;, &gt;=, =, =&lt;, &lt;</li><li>格式：when() { }</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lightness() 是检测亮度的函数，用%度量</span></span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>) <span class="keyword">when</span>(lightness(<span class="variable">@a</span>) &gt;= <span class="number">50%</span> ) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>) <span class="keyword">when</span>(lightness(<span class="variable">@a</span>) &lt; <span class="number">50%</span> ) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">#ddd</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">#555</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dddddd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555555</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类型检测函数"><a href="#类型检测函数" class="headerlink" title="类型检测函数"></a>类型检测函数</h2><ul><li>检测值的类型<ul><li>iscolor</li><li>isnumber</li><li>isstring</li><li>iskeyword</li><li>isurl</li></ul></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>: <span class="number">#fff</span>; <span class="variable">@b</span>: <span class="number">0</span>) <span class="keyword">when</span>(isnumber(<span class="variable">@b</span>)) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@a</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">@b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>; <span class="variable">@b</span>: black) <span class="keyword">when</span>(iscolor(<span class="variable">@b</span>)) &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">@a</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@b</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单位检测函数"><a href="#单位检测函数" class="headerlink" title="单位检测函数"></a>单位检测函数</h2><ul><li>检测一个值除了数字是否是一个特定的单位<ul><li>ispixel</li><li>ispercentage</li><li>isem</li><li>isunit</li></ul></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>) <span class="keyword">when</span>(ispixel(<span class="variable">@a</span>)) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mixin</span>(<span class="variable">@a</span>) <span class="keyword">when</span>(ispercentage(<span class="variable">@a</span>)) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">960px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>(<span class="number">95%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><ul><li>混合可以调用自身，当一个混合递归调用自身就构成循环结构</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loop</span>(<span class="variable">@counter</span>) <span class="keyword">when</span>(<span class="variable">@counter</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="selector-class">.h</span><span class="variable">@&#123;counter&#125;</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: (<span class="number">10px</span>*<span class="variable">@counter</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.loop</span>((<span class="variable">@counter</span> - <span class="number">1</span>)); <span class="comment">//递归调用自身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="selector-class">.loop</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-class">.h5</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-class">.h4</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-class">.h3</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-class">.h2</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-class">.h1</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="合并属性"><a href="#合并属性" class="headerlink" title="合并属性"></a>合并属性</h1><ul><li>将多条规则合并为一条</li></ul><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><ul><li>在需要合并的属性的冒号之前加上 “+”，合并后用逗号分隔</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>() &#123;</span><br><span class="line">  <span class="selector-tag">box-shadow</span>+: <span class="selector-tag">inset</span> <span class="selector-tag">0</span> <span class="selector-tag">0</span> <span class="selector-tag">10px</span> <span class="selector-id">#555</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.myclass</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>;</span><br><span class="line">  <span class="selector-tag">box-shadow</span>+: <span class="selector-tag">0</span> <span class="selector-tag">0</span> <span class="selector-tag">20px</span> <span class="selector-tag">black</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.myclass</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#555</span>, <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> black; <span class="comment">//逗号分隔两个属性值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><ul><li>在需要合并的属性的冒号之前加上 “+_”，合并用空格分隔</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>() &#123;</span><br><span class="line">  <span class="selector-tag">background</span>+<span class="selector-tag">_</span>: <span class="selector-id">#f66</span>;</span><br><span class="line">  <span class="selector-tag">background</span>+<span class="selector-tag">_</span>: <span class="selector-tag">url</span>(<span class="string">"/sss.jpg"</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f66</span> url(<span class="string">"/sss.jpg"</span>); <span class="comment">//空格分隔</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="两种方式结合"><a href="#两种方式结合" class="headerlink" title="两种方式结合"></a>两种方式结合</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mixin</span>() &#123;</span><br><span class="line">  <span class="selector-tag">background</span>+<span class="selector-tag">_</span>: <span class="selector-id">#f66</span>;</span><br><span class="line">  <span class="selector-tag">background</span>+: <span class="selector-tag">url</span>(<span class="string">"/sss.jpg"</span>);</span><br><span class="line">  <span class="selector-tag">background</span>+<span class="selector-tag">_</span>: <span class="selector-tag">no-repeat</span>;</span><br><span class="line">  <span class="selector-tag">background</span>+: <span class="selector-tag">center</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="selector-class">.mixin</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编译输出</span></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f66</span>, url(<span class="string">"/sss.jpg"</span>)  no-repeat, center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="函数库"><a href="#函数库" class="headerlink" title="函数库"></a>函数库</h1><ul><li>less中封装了非常多函数库，例如颜色定义、颜色操作、颜色混合、字符串处理等等</li><li>例如color()：用于解析颜色，将代表颜色的字符串转换为颜色值</li></ul><p>更多参考：<a href="https://less.bootcss.com/functions/#functions-overview" target="_blank" rel="noopener">https://less.bootcss.com/functions/#functions-overview</a></p><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><p>LESS 中的作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@var:</span> red;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="variable">@var:</span> white;</span><br><span class="line">  <span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@var</span>; <span class="comment">// white</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@var</span>; <span class="comment">// red  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="避免编译"><a href="#避免编译" class="headerlink" title="避免编译"></a>避免编译</h1><p>有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.</p><p>要输出这样的值我们可以在字符串前加上一个 <code>~</code>, 例如:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="string">~"ms:alwaysHasItsOwnSyntax.For.Stuff()"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="attribute">ms</span>:alwaysHasItsOwnSyntax.For.Stuff();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><ul><li><code>/**/</code> 可以使用，会被编译</li><li><code>//</code> 可以使用，但不会被编译到css中，会自动过滤掉。</li><li><code>less</code>不认识的内容 不会被编译</li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>官方文档：<a href="https://www.html.cn/doc/less/features/" target="_blank" rel="noopener">https://www.html.cn/doc/less/features/</a></p><p><a href="http://www.bootcss.com/p/lesscss/#guide" target="_blank" rel="noopener">http://www.bootcss.com/p/lesscss/#guide</a></p><p><a href="https://www.jianshu.com/p/15ed47ff8b06" target="_blank" rel="noopener">https://www.jianshu.com/p/15ed47ff8b06</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Less是什么&quot;&gt;&lt;a href=&quot;#Less是什么&quot; class=&quot;headerlink&quot; title=&quot;Less是什么&quot;&gt;&lt;/a&gt;Less是什么&lt;/h1&gt;&lt;p&gt;LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承， 运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.html.cn/doc/less/features/#mixin-guards-feature&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Less官方文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://hackycy.github.io/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://hackycy.github.io/tags/CSS/"/>
    
      <category term="Less" scheme="http://hackycy.github.io/tags/Less/"/>
    
  </entry>
  
  <entry>
    <title>Android混淆(Proguard)详解</title>
    <link href="http://hackycy.github.io/2019/04/12/Android%E6%B7%B7%E6%B7%86-Proguard-%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/04/12/Android混淆-Proguard-详解/</id>
    <published>2019-04-12T09:11:12.000Z</published>
    <updated>2019-05-15T03:47:34.342Z</updated>
    
    <content type="html"><![CDATA[<h1 id="混淆的作用及好处"><a href="#混淆的作用及好处" class="headerlink" title="混淆的作用及好处"></a>混淆的作用及好处</h1><p>混淆属于整个应用程序开发生命周期偏后期阶段的技术了，所以要考虑应用的安全性及性能的问题，混淆就是为了这种需求产生的一种技术，简单说，混淆就是将关键字和关键类名，修改为无意义的字符以起到迷惑试图反编译去查看源码的人。在一定程度上能过滤掉一些入门反编译者，混淆是保障Android程序源码安全的第一道门槛，<br>以上谈了下混淆的作用，而混淆的好处除了能保证源码安全性之外就大概是通过修改关键字为无意义字符串，或者剔除某些辅助类，比如Log，从而减少文件大小。</p><a id="more"></a><h1 id="混淆的原理"><a href="#混淆的原理" class="headerlink" title="混淆的原理"></a>混淆的原理</h1><p><a href="https://www.guardsquare.com/en/products/proguard" target="_blank" rel="noopener">proguard官网</a></p><p>Java 是一种跨平台的、解释型语言，Java 源代码编译成中间”字节码”存储于 class 文件中。由于跨平台的需要，Java   字节码中包括了很多源代码信息，如变量名、方法名，并且通过这些名称来访问变量和方法，这些符号带有许多语义信息，很容易被反编译成 Java 源代码。为了防止这种现象，我们可以使用 Java 混淆器对 Java 字节码进行混淆。<br>混淆就是对发布出去的程序进行重新组织和处理，使得处理后的代码与处理前代码完成相同的功能，而混淆后的代码很难被反编译，即使反编译成功也很难得出程序的真正语义。被混淆过的程序代码，仍然遵照原来的档案格式和指令集，执行结果也与混淆前一样，只是混淆器将代码中的所有变量、函数、类的名称变为简短的英文字母代号，在缺乏相应的函数名和程序注释的况下，即使被反编译，也将难以阅读。同时混淆是不可逆的，在混淆的过程中一些不影响正常运行的信息将永久丢失，这些信息的丢失使程序变得更加难以理解。<br>混淆器的作用不仅仅是保护代码，它也有精简编译后程序大小的作用。由于以上介绍的缩短变量和函数名以及丢失部分信息的原因， 编译后 jar 文件体积大约能减少25%，这对当前费用较贵的无线网络传输是有一定意义的。</p><h1 id="混淆的具体使用"><a href="#混淆的具体使用" class="headerlink" title="混淆的具体使用"></a>混淆的具体使用</h1><p>模块(Module)下的build.gradle的配置</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">  buildTypes&#123;</span><br><span class="line">    release &#123; </span><br><span class="line">       <span class="comment">// 是否进行混淆  </span></span><br><span class="line">       minifyEnabled <span class="keyword">false</span>  </span><br><span class="line">       <span class="comment">// 混淆文件的位置，其中'proguard-android.txt'为sdk默认的混淆配置，</span></span><br><span class="line">       <span class="comment">//'proguard-rules.pro' 是该模块下的混淆配置</span></span><br><span class="line">       proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span>  </span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是proguard在模块下build.gradle文件中的配置信息，其中<code>proguard-android.txt</code>为sdk默认的混淆配置，<code>proguard-rules.pro</code>是在默认配置的基础上针对本模块做出的针对性混淆处理。</p><ul><li>proguard-android.txt 这个文件是系统默认混淆文件一般不需要做修改</li><li>在 debug 版下也可以开启混淆做为测试</li><li>Gradle 2.2 之后，defaultProguardFile 没有使用 SDK 目录下的 proguard-android.txt，而是使用了 gradle 自带的 proguard-android.txt，不同的 gradle 版本带有不同的默认混淆文件，比如在项目根目录的 build/intermediates/proguard-files/proguard-android.txt-2.3.3，即为 gradle 自带的混淆文件。在 proguard-android.txt-2.3.3 文件中也写有说明，Gradle 2.2 之后自带混淆文件</li></ul><blockquote><p>注：proguard-android.txt的位置位于android-sdk/tools/proguard/proguard-android.txt</p></blockquote><h1 id="混淆规则"><a href="#混淆规则" class="headerlink" title="混淆规则"></a>混淆规则</h1><p>这个语法的作用是定义出 <strong>不需要</strong>混淆的源代码，那么编译时会自动将未定义的部分全都混淆。而如下是不需要混淆的</p><ul><li>Android 四大组件</li><li>native方法</li><li>Java 反射用到的类</li><li>自定义控件</li><li>枚举类</li><li>JavaBean</li><li>Parcelable、Serializable 序列化类</li><li>WebView 与 JS 交互所用到的类和方法</li></ul><h1 id="混淆步骤"><a href="#混淆步骤" class="headerlink" title="混淆步骤"></a>混淆步骤</h1><p><img src="proguard.png" alt=""></p><p><strong>proguard分为4个步骤：</strong></p><ol><li>压缩（shrink）<br>移除未使用的类、方法、字段等；</li><li>优化（optimize）<br>优化字节码、简化代码等操作；</li><li>混淆（obfuscate）<br>使用简短的、无意义的名称重全名类名、方法名、字段等；</li><li>预校验（preverify）<br>为class添加预校验信息。</li></ol><h1 id="混淆基本指令"><a href="#混淆基本指令" class="headerlink" title="混淆基本指令"></a>混淆基本指令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">-dontshrink</span><br><span class="line"># 声明不进行压缩操作，默认情况下，除了-keep配置（下详）的类及其直接或间接引用到的类，都会被移除。</span><br><span class="line"></span><br><span class="line">#---------------------------------------------- shrink</span><br><span class="line"></span><br><span class="line">-dontoptimize</span><br><span class="line"># 不对class进行优化，默认开启优化。</span><br><span class="line"># 注意：由于优化会进行类合并、内联等多种优化，-applymapping可能无法完全应用，需使用热修复的应用，建议使用此# 配置关闭优化。</span><br><span class="line"></span><br><span class="line">-optimizationpasses n</span><br><span class="line"># 执行优化的次数，默认1次，多次能达到更好的优化效果。</span><br><span class="line"></span><br><span class="line">-optimizations optimization_filter</span><br><span class="line">优化配置，可进行字段优化、内联、类合并、代码简化、算法指令精简等操作。</span><br><span class="line"></span><br><span class="line">#只进行 移除未使用的局部变量、算法指令精简</span><br><span class="line">-optimizations code/removal/variable,code/simplification/arithmetic</span><br><span class="line"></span><br><span class="line">#进行除 算法指令精简、字段、类合并外的所有优化</span><br><span class="line">-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*</span><br><span class="line"></span><br><span class="line">#---------------------------------------------- optimize</span><br><span class="line"></span><br><span class="line">-dontobfuscate</span><br><span class="line"># 不进行混淆，默认开启混淆。除-keep指定的类及成员外，都会被替换成简短、随机的名称，以达到混淆的目的。</span><br><span class="line"></span><br><span class="line">-applymapping filename</span><br><span class="line"># 根据指定的mapping映射文件进行混淆。</span><br><span class="line"></span><br><span class="line">-obfuscationdictionary filename</span><br><span class="line"># 指定字段、方法名的混淆字典，默认情况下使用abc等字母组合，比如根据自己的喜好指定中文、特殊字符进行混淆命名。</span><br><span class="line"></span><br><span class="line">-classobfuscationdictionary filename</span><br><span class="line"># 指定类名混淆字典。</span><br><span class="line"></span><br><span class="line">-packageobfuscationdictionary filename</span><br><span class="line"># 指定包名混淆字典。</span><br><span class="line"></span><br><span class="line">-useuniqueclassmembernames</span><br><span class="line"># 指定相同的混淆名称对应不同类的相同成员，不同的混淆名称对应不同的类成员。在没有指定这个选项时，不同类的不同方法都可能映射到a,b,c。</span><br><span class="line"></span><br><span class="line"># 有一种情况，比如两个不同的接口，拥有相同的方法签名，在没有指定这个选项时，这两个接口的方法可能混淆成不同的名称。但如果新增一个类同时实现这两个接口，并且利用-applymapping指定之前的mapping映射文件时，这两个接口的方法必须混淆成相同的名称，这时就和之前的mapping冲突了。</span><br><span class="line"></span><br><span class="line"># 在某此热修复场景下需要指定此选项。</span><br><span class="line"></span><br><span class="line">-dontusemixedcaseclassnames</span><br><span class="line"># 指定不使用大小写混用的类名，默认情况下混淆后的类名可能同时包含大写小字母。这在某些对大小写不敏感的系统（如windowns）上解压时，可能存在文件被相互覆盖的情况。</span><br><span class="line"></span><br><span class="line">-keeppackagenames [package_filter]</span><br><span class="line"># 指定不混淆指定的包名，多个包名可以用逗号分隔，可以使用? * **通配符，并且可以使用否定符（!）。</span><br><span class="line"></span><br><span class="line">-keepattributes [attribute_filter]</span><br><span class="line"># 指定保留属性，多个属性可以用多个-keepattributes配置，也可以用逗号分隔，可以使用? * **通配符，并且可以使用否定符（!）。</span><br><span class="line"># 比如，在混淆ibrary库时，应该至少keep Exceptions, InnerClasses, Signature；如果在追踪代码，还需要keep符号表；使用到注解时也需要keep。</span><br><span class="line">-keepattributes Exceptions,InnerClasses,Signature</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line"></span><br><span class="line">-keepparameternames</span><br><span class="line"># 指定keep已经被keep的方法的参数类型和参数名称，在混淆library库时非常有用，可供IDE帮助用户进行信息提示和代码自动填充。</span><br><span class="line"></span><br><span class="line">#---------------------------------------------- obfuscate</span><br><span class="line"></span><br><span class="line">-dontpreverify</span><br><span class="line"># 指定不对class进行预校验，默认情况下，在编译版本为micro或者1.6或更高版本时是开启的。但编译成Android版本时，预校验是不必须的，配置这个选项可以节省一点编译时间。（Android会把class编译成dex，并对dex文件进行校验，对class进行预校验是多余的。）</span><br><span class="line"></span><br><span class="line">#---------------------------------------------- preverify</span><br></pre></td></tr></table></figure><h2 id="keep配置"><a href="#keep配置" class="headerlink" title="keep配置"></a>keep配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># -keep [,modifier,...] class_specification</span><br><span class="line"># 指定类及类成员作为代码入口，保护其不被proguard，如：</span><br><span class="line">-keep class com.rush.Test</span><br><span class="line">-keep interface com.rush.InterfaceTest</span><br><span class="line">-keep class com.rush.** &#123;</span><br><span class="line">    &lt;init&gt;;</span><br><span class="line">    public &lt;fields&gt;;</span><br><span class="line">    public &lt;methods&gt;;</span><br><span class="line">    public *** get*();</span><br><span class="line">    void set*(***);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>class表示keep类或接口</li><li>interface仅表示keep接口</li></ul><p><strong>类名 通配符如下:</strong></p><table><thead><tr><th style="text-align:left">通配符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">?</td><td style="text-align:left">匹配单个字符，包名分隔符（.）除外</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">匹配除（.）外的任意字符</td></tr><tr><td style="text-align:left">**</td><td style="text-align:left">匹配任意字符（包含.），如com.rush.**匹配com.rush包下的所有类及其所有子包的类。</td></tr></tbody></table><p><strong>字段和方法 通配符如下：</strong></p><table><thead><tr><th style="text-align:left">通配符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left"><init></init></td><td style="text-align:left">匹配所有构造方法</td></tr><tr><td style="text-align:left"><fields></fields></td><td style="text-align:left">匹配所有字段</td></tr><tr><td style="text-align:left"><methods></methods></td><td style="text-align:left">匹配所有方法</td></tr><tr><td style="text-align:left">?</td><td style="text-align:left">匹配单个字符，包名分隔符（.）除外</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">匹配除（.）外的任意字符</td></tr></tbody></table><p><strong>类型 通配符如下：</strong></p><table><thead><tr><th style="text-align:left">通配符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">%</td><td style="text-align:left">匹配原始类型，如int, boolean等</td></tr><tr><td style="text-align:left">?</td><td style="text-align:left">匹配任意单个字符</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">匹配除包名分隔符（.）外的任意字符</td></tr><tr><td style="text-align:left">**</td><td style="text-align:left">匹配任意字符，包括包名分隔符（.）</td></tr><tr><td style="text-align:left">***</td><td style="text-align:left">匹配任意类型（原始类型、非原始类型、数组或非数组类型）</td></tr><tr><td style="text-align:left">…</td><td style="text-align:left">匹配任意参数个数，任意参数类型</td></tr></tbody></table><p><strong>其中类配置完整定义如下，其中[]表示可选：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[@annotationtype] [[!]public|final|abstract|@ ...] [!]interface|class|enum classname</span><br><span class="line">    [extends|implements [@annotationtype] classname]</span><br><span class="line">[&#123;</span><br><span class="line">    [@annotationtype] [[!]public|private|protected|static|volatile|transient ...] &lt;fields&gt; |</span><br><span class="line">                                                                      (fieldtype fieldname);</span><br><span class="line">    [@annotationtype] [[!]public|private|protected|static|synchronized|native|abstract|strictfp ...] &lt;methods&gt; |</span><br><span class="line">                                                                                           &lt;init&gt;(argumenttype,...) |</span><br><span class="line">                                                                                           classname(argumenttype,...) |</span><br><span class="line">                                                                                           (returntype methodname(argumenttype,...));</span><br><span class="line">    [@annotationtype] [[!]public|private|protected|static ... ] *;</span><br><span class="line">    ...</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">保留</th><th style="text-align:left">防止被移除或重命名</th><th style="text-align:left">防止被重命名（未使用的会被移除）</th></tr></thead><tbody><tr><td style="text-align:left">类和类成员</td><td style="text-align:left">-keep</td><td style="text-align:left">-keepnames</td></tr><tr><td style="text-align:left">仅类成员</td><td style="text-align:left">-keepclassmembers</td><td style="text-align:left">-keepclassmembernames</td></tr><tr><td style="text-align:left">如类含有某成员，保留类及其成员</td><td style="text-align:left">-keepclasseswithmembers</td><td style="text-align:left">-keepclasseswithmembernames</td></tr></tbody></table><h1 id="更多详细指令"><a href="#更多详细指令" class="headerlink" title="更多详细指令"></a>更多详细指令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"># 代码混淆压缩比，在 0~7 之间</span><br><span class="line">-optimizationpasses 5</span><br><span class="line"></span><br><span class="line"># 混合时不使用大小写混合，混合后的类名为小写</span><br><span class="line">-dontusemixedcaseclassnames</span><br><span class="line"></span><br><span class="line"># 指定不忽略非公共库的类和类成员</span><br><span class="line">-dontskipnonpubliclibraryclasses</span><br><span class="line">-dontskipnonpubliclibraryclassmembers</span><br><span class="line"></span><br><span class="line"># 这句话能够使我们的项目混淆后产生映射文件</span><br><span class="line"># 包含有类名-&gt;混淆后类名的映射关系</span><br><span class="line">-verbose</span><br><span class="line"></span><br><span class="line"># 不做预校验，preverify是proguard的四个步骤之一，Android不需要preverify，去掉这一步能够加快混淆速度</span><br><span class="line">-dontpreverify</span><br><span class="line"></span><br><span class="line"># 保留Annotation不混淆</span><br><span class="line">-keepattributes *Annotation*,InnerClasses</span><br><span class="line"></span><br><span class="line"># 避免混淆泛型</span><br><span class="line">-keepattributes Signature</span><br><span class="line"></span><br><span class="line"># 抛出异常时保留代码行号</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line"></span><br><span class="line"># 指定混淆是采用的算法，后面的参数是一个过滤器</span><br><span class="line"># 这个过滤器是 Google 推荐的算法，一般不做修改</span><br><span class="line">-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*</span><br><span class="line"></span><br><span class="line"># 是否允许改变作用域的，可以提高优化效果</span><br><span class="line"># 但是，如果你的代码是一个库的话，最好不要配置这个选项，因为它可能会导致一些 private 变量被改成 public，谨慎使用</span><br><span class="line">#-allowaccessmodification</span><br><span class="line"></span><br><span class="line"># 指定一些接口可能会被合并，即使一些子类没有同时实现两个接口的方法。这种情况在java源码中是不允许存在的，但是在java字节码中是允许存在的。</span><br><span class="line"># 它的作用是通过合并接口减少类的数量，从而达到减少输出文件体积的效果。仅在 optimize 阶段有效。</span><br><span class="line"># 如果在开启后没有任何影响可以使用，这项配置对于一些虚拟机的65535方法数限制是有一定效果的，谨慎使用</span><br><span class="line">#-mergeinterfacesaggressively</span><br><span class="line"></span><br><span class="line"># 输出所有找不到引用和一些其它错误的警告，但是继续执行处理过程。不处理警告有些危险，所以在清楚配置的具体作用的时候再使用</span><br><span class="line">-ignorewarnings</span><br><span class="line">-include &#123;filename&#125;     #从给定的文件中读取配置参数</span><br><span class="line">-basedirectory &#123;directoryname&#125;    #指定基础目录为以后相对的档案名称</span><br><span class="line">-injars &#123;class_path&#125;    #指定要处理的应用程序jar,war,ear和目录</span><br><span class="line">-outjars &#123;class_path&#125;     #指定处理完后要输出的jar,war,ear和目录的名称</span><br><span class="line">-libraryjars &#123;classpath&#125;     #指定要处理的应用程序jar,war,ear和目录所需要的程序库文件</span><br><span class="line">-dontskipnonpubliclibraryclasses     #指定不去忽略非公共的库类。</span><br><span class="line">-dontskipnonpubliclibraryclassmembers     #指定不去忽略包可见的库类的成员。</span><br><span class="line"></span><br><span class="line"> #保留选项</span><br><span class="line">-keep &#123;Modifier&#125; &#123;class_specification&#125;     #保护指定的类文件和类的成员</span><br><span class="line">-keepclassmembers &#123;modifier&#125; &#123;class_specification&#125;     #保护指定类的成员，如果此类受到保护他们会保护的更好</span><br><span class="line">-keepclasseswithmembers &#123;class_specification&#125;     #保护指定的类和类的成员，但条件是所有指定的类和类成员是要存在。</span><br><span class="line">-keepnames &#123;class_specification&#125;     #保护指定的类和类的成员的名称（如果他们不会压缩步骤中删除）</span><br><span class="line">-keepclassmembernames &#123;class_specification&#125;     #保护指定的类的成员的名称（如果他们不会压缩步骤中删除）</span><br><span class="line">-keepclasseswithmembernames &#123;class_specification&#125;     #保护指定的类和类的成员的名称，如果所有指定的类成员出席（在压缩步骤之后）</span><br><span class="line">-printseeds &#123;filename&#125;     #列出类和类的成员-keep选项的清单，标准输出到给定的文件</span><br><span class="line"></span><br><span class="line"> #压缩</span><br><span class="line">-dontshrink     #不压缩输入的类文件</span><br><span class="line">-printusage &#123;filename&#125;</span><br><span class="line">-whyareyoukeeping &#123;class_specification&#125;</span><br><span class="line"></span><br><span class="line"> #优化</span><br><span class="line">-dontoptimize     #不优化输入的类文件</span><br><span class="line">-assumenosideeffects &#123;class_specification&#125;     #优化时假设指定的方法，没有任何副作用</span><br><span class="line">-allowaccessmodification     #优化时允许访问并修改有修饰符的类和类的成员</span><br><span class="line"></span><br><span class="line"> #混淆</span><br><span class="line">-dontobfuscate     #不混淆输入的类文件</span><br><span class="line">-printmapping &#123;filename&#125;</span><br><span class="line">-applymapping &#123;filename&#125;     #重用映射增加混淆</span><br><span class="line">-obfuscationdictionary &#123;filename&#125;     #使用给定文件中的关键字作为要混淆方法的名称</span><br><span class="line">-overloadaggressively     #混淆时应用侵入式重载</span><br><span class="line">-useuniqueclassmembernames     #确定统一的混淆类的成员名称来增加混淆</span><br><span class="line">-flattenpackagehierarchy &#123;package_name&#125;     #重新包装所有重命名的包并放在给定的单一包中</span><br><span class="line">-repackageclass &#123;package_name&#125;     #重新包装所有重命名的类文件中放在给定的单一包中</span><br><span class="line">-dontusemixedcaseclassnames     #混淆时不会产生形形色色的类名</span><br><span class="line">-keepattributes &#123;attribute_name,...&#125;     #保护给定的可选属性，例如LineNumberTable, LocalVariableTable, SourceFile, Deprecated, Synthetic, Signature, and</span><br><span class="line"></span><br><span class="line"> #InnerClasses.</span><br><span class="line">-renamesourcefileattribute &#123;string&#125;     #设置源文件中给定的字符串常量</span><br></pre></td></tr></table></figure><h1 id="混淆日志"><a href="#混淆日志" class="headerlink" title="混淆日志"></a>混淆日志</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># APK 包内所有 class 的内部结构</span><br><span class="line">-dump proguard/class_files.txt</span><br><span class="line"># 未混淆的类和成员</span><br><span class="line">-printseeds proguard/seeds.txt</span><br><span class="line"># 列出从 APK 中删除的代码</span><br><span class="line">-printusage proguard/unused.txt</span><br><span class="line"># 混淆前后的映射，这个文件在追踪异常的时候是有用的</span><br><span class="line">-printmapping proguard/mapping.txt</span><br></pre></td></tr></table></figure><h1 id="其他自定义混淆规则"><a href="#其他自定义混淆规则" class="headerlink" title="其他自定义混淆规则"></a>其他自定义混淆规则</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># JavaBean 实体类不能混淆，一般会将实体类统一放到一个包下，you.package.path 请改成你自己的项目路径</span><br><span class="line">-keep public class com.frame.mvp.entity.** &#123;</span><br><span class="line">    *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 网页中的 JavaScript 进行交互，you.package.path 请改成你自己的项目路径</span><br><span class="line">#-keepclassmembers class you.package.path.JSInterface &#123;</span><br><span class="line">#    &lt;methods&gt;;</span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line"># 需要通过反射来调用的类，没有可忽略，you.package.path 请改成你自己的项目路径</span><br><span class="line">#-keep class you.package.path.** &#123; *; &#125;</span><br></pre></td></tr></table></figure><h1 id="一些不是很常用但比较实用的混淆命令"><a href="#一些不是很常用但比较实用的混淆命令" class="headerlink" title="一些不是很常用但比较实用的混淆命令"></a>一些不是很常用但比较实用的混淆命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 所有重新命名的包都重新打包，并把所有的类移动到所给定的包下面。如果没有指定 packagename，那么所有的类都会被移动到根目录下</span><br><span class="line"># 如果需要从目录中读取资源文件，移动包的位置可能会导致异常，谨慎使用</span><br><span class="line"># you.package.path 请改成你自己的项目路径</span><br><span class="line">-flatternpackagehierarchy</span><br><span class="line"></span><br><span class="line"># 所有重新命名过的类都重新打包，并把他们移动到指定的packagename目录下。如果没有指定 packagename，同样把他们放到根目录下面。</span><br><span class="line"># 这项配置会覆盖-flatternpackagehierarchy的配置。它可以代码体积更小，并且更加难以理解。</span><br><span class="line"># you.package.path 请改成你自己的项目路径</span><br><span class="line">-repackageclasses you.package.path</span><br><span class="line"></span><br><span class="line"># 指定一个文本文件用来生成混淆后的名字。默认情况下，混淆后的名字一般为 a、b、c 这种。</span><br><span class="line"># 通过使用配置的字典文件，可以使用一些非英文字符做为类名。成员变量名、方法名。字典文件中的空格，标点符号，重复的词，还有以&apos;#&apos;开头的行都会被忽略。</span><br><span class="line"># 需要注意的是添加了字典并不会显著提高混淆的效果，只不过是更不利与人类的阅读。正常的编译器会自动处理他们，并且输出出来的jar包也可以轻易的换个字典再重新混淆一次。</span><br><span class="line"># 最有用的做法一般是选择已经在类文件中存在的字符串做字典，这样可以稍微压缩包的体积。</span><br><span class="line"># 字典文件的格式：一行一个单词，空行忽略，重复忽略</span><br><span class="line">-obfuscationdictionary</span><br><span class="line"></span><br><span class="line"># 指定一个混淆类名的字典，字典格式与 -obfuscationdictionary 相同</span><br><span class="line">#-classobfuscationdictionary</span><br><span class="line"># 指定一个混淆包名的字典，字典格式与 -obfuscationdictionary 相同</span><br><span class="line">-packageobfuscationdictionary</span><br><span class="line"></span><br><span class="line"># 混淆的时候大量使用重载，多个方法名使用同一个混淆名，但是他们的方法签名不同。这可以使包的体积减小一部分，也可以加大理解的难度。仅在混淆阶段有效。</span><br><span class="line"># 这个参数在 JDK 版本上有一定的限制，可能会导致一些未知的错误，谨慎使用</span><br><span class="line">-overloadaggressively</span><br><span class="line"></span><br><span class="line"># 方法同名混淆后亦同名，方法不同名混淆后亦不同名。不使用该选项时，类成员可被映射到相同的名称。因此该选项会增加些许输出文件的大小。</span><br><span class="line">-useuniqueclassmembernames</span><br><span class="line"></span><br><span class="line"># 指定在混淆的时候不使用大小写混用的类名。默认情况下，混淆后的类名可能同时包含大写字母和小写字母。</span><br><span class="line"># 这样生成jar包并没有什么问题。只有在大小写不敏感的系统（例如windows）上解压时，才会涉及到这个问题。</span><br><span class="line"># 因为大小写不区分，可能会导致部分文件在解压的时候相互覆盖。如果有在windows系统上解压输出包的需求的话，可以加上这个配置。</span><br><span class="line">-dontusemixedcaseclassnames</span><br></pre></td></tr></table></figure><h1 id="Android开发常用不需要混淆指令"><a href="#Android开发常用不需要混淆指令" class="headerlink" title="Android开发常用不需要混淆指令"></a>Android开发常用不需要混淆指令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"># Android 四大组件相关</span><br><span class="line">-keep public class * extends android.app.Activity</span><br><span class="line">-keep public class * extends android.app.Appliction</span><br><span class="line">-keep public class * extends android.app.Service</span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">-keep public class * extends android.content.ContentProvider</span><br><span class="line">-keep public class * extends android.app.backup.BackupAgentHelper</span><br><span class="line">-keep public class * extends android.preference.Preference</span><br><span class="line">-keep public class * extends android.view.View</span><br><span class="line">-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line"></span><br><span class="line"># Fragment</span><br><span class="line">-keep public class * extends android.support.v4.app.Fragment</span><br><span class="line">-keep public class * extends android.app.Fragment</span><br><span class="line"></span><br><span class="line"># 保留support下的所有类及其内部类</span><br><span class="line">-keep class android.support.** &#123; *; &#125;</span><br><span class="line">-keep interface android.support.** &#123; *; &#125;</span><br><span class="line">-dontwarn android.support.**</span><br><span class="line"></span><br><span class="line"># 保留 R 下面的资源</span><br><span class="line">-keep class **.R$* &#123;*;&#125;</span><br><span class="line">-keepclassmembers class **.R$* &#123;</span><br><span class="line">    public static &lt;fields&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留本地 native 方法不被混淆</span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留在 Activity 中的方法参数是 view 的方法，</span><br><span class="line"># 这样以来我们在 layout 中写的 onClick 就不会被影响</span><br><span class="line">-keepclassmembers class * extends android.app.Activity&#123;</span><br><span class="line">    public void *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留枚举类不被混淆</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留自定义控件（继承自View）不被混淆</span><br><span class="line">-keep public class * extends android.view.View&#123;</span><br><span class="line">    *** get*();</span><br><span class="line">    void set*(***);</span><br><span class="line">    public &lt;init&gt;(android.content.Context);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留 Parcelable 序列化类不被混淆</span><br><span class="line">-keep class * implements android.os.Parcelable &#123;</span><br><span class="line">  public static final android.os.Parcelable$Creator *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留 Serializable 序列化的类不被混淆</span><br><span class="line">-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">    static final long serialVersionUID;</span><br><span class="line">    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">    private void readObject(java.io.ObjectInputStream);</span><br><span class="line">    java.lang.Object writeReplace();</span><br><span class="line">    java.lang.Object readResolve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 对于带有回调函数的 onXXEvent 的，不能被混淆</span><br><span class="line">-keepclassmembers class * &#123;</span><br><span class="line">    void *(**On*Event);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># WebView，没有使用 WebView 请注释掉</span><br><span class="line">-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;</span><br><span class="line">   public *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);</span><br><span class="line">    public boolean *(android.webkit.WebView, java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.webView, jav.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 不混淆使用了 @Keep 注解相关的类</span><br><span class="line">-keep class android.support.annotation.Keep</span><br><span class="line"></span><br><span class="line">-keep @android.support.annotation.Keep class * &#123;*;&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    @android.support.annotation.Keep &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    @android.support.annotation.Keep &lt;fields&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    @android.support.annotation.Keep &lt;init&gt;(...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 删除代码中 Log 相关的代码，如果删除了一些预料之外的代码，很容易就会导致代码崩溃，谨慎使用</span><br><span class="line">-assumenosideeffects class android.util.Log&#123;</span><br><span class="line">   public static boolean isLoggable(java.lang.String,int);</span><br><span class="line">   public static int v(...);</span><br><span class="line">   public static int i(...);</span><br><span class="line">   public static int w(...);</span><br><span class="line">   public static int d(...);</span><br><span class="line">   public static int e(...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 删除自定义Log工具</span><br><span class="line">-assumenosideeffects class com.example.Log.Logger&#123;</span><br><span class="line">   public static int v(...);</span><br><span class="line">   public static int i(...);</span><br><span class="line">   public static int w(...);</span><br><span class="line">   public static int d(...);</span><br><span class="line">   public static int e(...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">-ignorewarnings                     # 忽略警告，避免打包时某些警告出现  </span><br><span class="line">-optimizationpasses 5               # 指定代码的压缩级别  </span><br><span class="line">-dontusemixedcaseclassnames         # 是否使用大小写混合  </span><br><span class="line">-dontskipnonpubliclibraryclasses    # 是否混淆第三方jar  </span><br><span class="line">-dontpreverify                      # 混淆时是否做预校验  </span><br><span class="line">-verbose                            # 混淆时是否记录日志  </span><br><span class="line">-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*        # 混淆时所采用的算法  </span><br><span class="line">  </span><br><span class="line">-libraryjars   libs/treecore.jar  </span><br><span class="line">  </span><br><span class="line">-dontwarn android.support.v4.**     #缺省proguard 会检查每一个引用是否正确，但是第三方库里面往往有些不会用到的类，没有正确引用。如果不配置的话，系统就会报错。  </span><br><span class="line">-dontwarn android.os.**  </span><br><span class="line">-keep class android.support.v4.** &#123; *; &#125;        # 保持哪些类不被混淆  </span><br><span class="line">-keep class com.baidu.** &#123; *; &#125;    </span><br><span class="line">-keep class vi.com.gdi.bgl.android.**&#123;*;&#125;  </span><br><span class="line">-keep class android.os.**&#123;*;&#125;  </span><br><span class="line">  </span><br><span class="line">-keep interface android.support.v4.app.** &#123; *; &#125;    </span><br><span class="line">-keep public class * extends android.support.v4.**    </span><br><span class="line">-keep public class * extends android.app.Fragment  </span><br><span class="line">  </span><br><span class="line">-keep public class * extends android.app.Activity  </span><br><span class="line">-keep public class * extends android.app.Application  </span><br><span class="line">-keep public class * extends android.app.Service  </span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver  </span><br><span class="line">-keep public class * extends android.content.ContentProvider  </span><br><span class="line">-keep public class * extends android.support.v4.widget  </span><br><span class="line">-keep public class * extends com.sqlcrypt.database  </span><br><span class="line">-keep public class * extends com.sqlcrypt.database.sqlite  </span><br><span class="line">-keep public class * extends com.treecore.**  </span><br><span class="line">-keep public class * extends de.greenrobot.dao.**  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">-keepclasseswithmembernames class * &#123;       # 保持 native 方法不被混淆  </span><br><span class="line">    native &lt;methods&gt;;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclasseswithmembers class * &#123;            # 保持自定义控件类不被混淆  </span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclasseswithmembers class * &#123;            # 保持自定义控件类不被混淆  </span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclassmembers class * extends android.app.Activity &#123; //保持类成员  </span><br><span class="line">   public void *(android.view.View);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keepclassmembers enum * &#123;                  # 保持枚举 enum 类不被混淆  </span><br><span class="line">    public static **[] values();  </span><br><span class="line">    public static ** valueOf(java.lang.String);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keep class * implements android.os.Parcelable &#123;    # 保持 Parcelable 不被混淆  </span><br><span class="line">  public static final android.os.Parcelable$Creator *;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">-keep class MyClass;                              # 保持自己定义的类不被混淆</span><br></pre></td></tr></table></figure><h1 id="关于proguard配置的一些建议"><a href="#关于proguard配置的一些建议" class="headerlink" title="关于proguard配置的一些建议"></a>关于proguard配置的一些建议</h1><ul><li>所有会被反射引用的类都做好keep（建议，虽然有些反射能被正确处理）。<br>如native方法，四大组件，接口model，枚举，序列化类等。</li><li>只keep必须保留的内容，不要过度keep</li><li>使用热修复的App，添加-dontoptimize配置</li></ul><h1 id="资源混淆"><a href="#资源混淆" class="headerlink" title="资源混淆"></a>资源混淆</h1><p><code>AndResGuard</code>是一个帮助你缩小APK大小的工具，他的原理类似Java Proguard，但是只针对资源。他会将原本冗长的资源路径变短，例如将<code>res/drawable/wechat变为r/d/a</code>。</p><p><code>AndResGuard</code>不涉及编译过程，只需输入一个apk(无论签名与否，<code>debug</code>版，<code>release</code>版均可，在处理过程中会直接将原签名删除)，可得到一个实现资源混淆后的apk(若在配置文件中输入签名信息，可自动重签名并对齐，得到可直接发布的apk)以及对应资源ID的mapping文件。</p><p><a href="https://github.com/shwenzhang/AndResGuard/blob/master/README.zh-cn.md" target="_blank" rel="noopener">github</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;mid=208135658&amp;idx=1&amp;sn=ac9bd6b4927e9e82f9fa14e396183a8f#rd" target="_blank" rel="noopener">原理</a></p><h1 id="丧心病狂的混淆操作"><a href="#丧心病狂的混淆操作" class="headerlink" title="丧心病狂的混淆操作"></a>丧心病狂的混淆操作</h1><p>原理：混淆是可以配置词典,<a href="https://mp.weixin.qq.com/s/ya0RiLuHfIBrPLkl2lTbaA" target="_blank" rel="noopener">原文链接</a></p><p>随便找一个开源项目上手</p><p><a href="https://github.com/kingwang666/GetApk" target="_blank" rel="noopener">https://github.com/kingwang666/GetApk</a></p><p>开启混淆</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">    debug &#123;</span><br><span class="line">        minifyEnabled <span class="keyword">true</span></span><br><span class="line">        proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到上面配置了混淆文件包含：<code>proguard-rules.pro</code></p><p>和moudule的build.gradle在同一目录，在里面可以添加你的词典配置：</p><p><img src="demo.png" alt=""></p><blockquote><p>强烈建议，开启混淆后，配置词典前，先打个包运行一下确定可以正常运行。</p></blockquote><p>最后上面的混淆词典，分别来自不同的开源项目：</p><p><a href="https://github.com/RockyQu/ProguardDictionary" target="_blank" rel="noopener">https://github.com/RockyQu/ProguardDictionary</a></p><p>包含使用Java关键词的词典。</p><p><a href="https://github.com/o2e/ProguardDictionaryGenerator" target="_blank" rel="noopener">https://github.com/o2e/ProguardDictionaryGenerator</a></p><p>包含最后那个全是非常神奇的字符的。</p><p><a href="https://github.com/WrBug/FrenziedProguard" target="_blank" rel="noopener">https://github.com/WrBug/FrenziedProguard</a></p><p>包含1il,中文，0oO的。</p><blockquote><p>放一个混淆后的apk地址，如果实在懒得run又想看看效果：<br><a href="http://wanandroid.com/blogimgs/57ed3c61-08ee-4a3f-b859-f3cd1d748437.apk" target="_blank" rel="noopener">http://wanandroid.com/blogimgs/57ed3c61-08ee-4a3f-b859-f3cd1d748437.apk</a></p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.jianshu.com/p/60e82aafcfd0" target="_blank" rel="noopener">https://www.jianshu.com/p/60e82aafcfd0</a></p><p><a href="https://rockycoder.cn/android/2018/03/15/Android-proguard-rules.html" target="_blank" rel="noopener">https://rockycoder.cn/android/2018/03/15/Android-proguard-rules.html</a></p><p><a href="https://juejin.im/post/5ae7edc7f265da0b776f7a95" target="_blank" rel="noopener">https://juejin.im/post/5ae7edc7f265da0b776f7a95</a></p><p><a href="https://www.imooc.com/learn/879" target="_blank" rel="noopener">https://www.imooc.com/learn/879</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;混淆的作用及好处&quot;&gt;&lt;a href=&quot;#混淆的作用及好处&quot; class=&quot;headerlink&quot; title=&quot;混淆的作用及好处&quot;&gt;&lt;/a&gt;混淆的作用及好处&lt;/h1&gt;&lt;p&gt;混淆属于整个应用程序开发生命周期偏后期阶段的技术了，所以要考虑应用的安全性及性能的问题，混淆就是为了这种需求产生的一种技术，简单说，混淆就是将关键字和关键类名，修改为无意义的字符以起到迷惑试图反编译去查看源码的人。在一定程度上能过滤掉一些入门反编译者，混淆是保障Android程序源码安全的第一道门槛，&lt;br&gt;以上谈了下混淆的作用，而混淆的好处除了能保证源码安全性之外就大概是通过修改关键字为无意义字符串，或者剔除某些辅助类，比如Log，从而减少文件大小。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Mac应用程序无法打开或文件损坏的处理方法</title>
    <link href="http://hackycy.github.io/2019/04/12/Mac%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E6%88%96%E6%96%87%E4%BB%B6%E6%8D%9F%E5%9D%8F%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>http://hackycy.github.io/2019/04/12/Mac应用程序无法打开或文件损坏的处理方法/</id>
    <published>2019-04-12T08:23:11.000Z</published>
    <updated>2019-04-12T08:37:18.235Z</updated>
    
    <content type="html"><![CDATA[<p>今天安装一些软件时遇到了 <strong>无法打开或文件损坏的Mac应用程序</strong>，所以查了一下解决办法，记录在了博客下。</p><p>本人机器系统版本<code>Mojave 10.14.4</code></p><a id="more"></a><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>大多数用户在安装 Mac 应用时，经常会遇到提示 “ XXX.app 已损坏，打不开。您应该将它移到废纸篓 ” 或 “ 打不开 XXX.app，因为它来自身份不明的开发者 ” ，如下图所示：</p><p><img src="f1.png" alt=""></p><p><img src="f2.png" alt=""></p><p><strong>1. 打开系统偏好设置界面，进入安全性与隐私</strong></p><p><img src="f3.jpeg" alt=""></p><p><strong>2. 点按左下角的锁头图标，解锁更改权限</strong></p><p><strong>3. 将允许从以下位置下载的应用，更改为 “ 任何来源 ” ，然后再打开应用即可</strong></p><p><img src="f4.jpeg" alt=""></p><p>若没有“任何来源”这个选项（<code>macOS Sierra 10.12</code>及以上的用户可能会遇到），按以下步骤执行：<br>打开终端<code>（Terminal.app）</code><br>拷贝粘贴<code>sudo spctl --master-disable</code>，按回车键</p><p>输入你的账户密码，按回车键确认执行（该密码不会显示，直接输入即可）</p><p><img src="f5.png" alt=""></p><p><img src="f6.png" alt=""></p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>如安装应用时，出现 “ 打不开 XXX.app，因为它来自身份不明的开发者 ” ，并提示你的软件在什么位置什么时间下载了磁盘影像。如图所示：</p><p><img src="f7.png" alt=""></p><p><strong>1、将软件放入“应用程序”后，点击软件 右键-打开 ，如图所示：</strong></p><p><img src="f8.png" alt=""></p><p><strong>2、弹出以下对话框后，你打开即可。</strong></p><p><img src="f9.png" alt=""></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.puasu.com/article/share/201805/10.html" target="_blank" rel="noopener">http://www.puasu.com/article/share/201805/10.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天安装一些软件时遇到了 &lt;strong&gt;无法打开或文件损坏的Mac应用程序&lt;/strong&gt;，所以查了一下解决办法，记录在了博客下。&lt;/p&gt;
&lt;p&gt;本人机器系统版本&lt;code&gt;Mojave 10.14.4&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="程序人生" scheme="http://hackycy.github.io/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="Mac" scheme="http://hackycy.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>移动端前端开发之viewport</title>
    <link href="http://hackycy.github.io/2019/04/11/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B9%8Bviewport/"/>
    <id>http://hackycy.github.io/2019/04/11/移动端前端开发之viewport/</id>
    <published>2019-04-11T09:13:02.000Z</published>
    <updated>2019-05-22T13:02:17.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>浏览器的<code>viewport</code>是可以看到Web内容的窗口区域，通常与渲染出的页面的大小不同，这种情况下，浏览器会提供滚动条以滚动访问所有内容。</p><p>窄屏幕设备（如移动设备）在一个虚拟窗口或视口中渲染页面，这个窗口或视口通常比屏幕宽；然后缩小渲染的结果，以便在一屏内显示所有内容。然后用户可以移动、缩放以查看页面的不同区域。例如，如果移动屏幕的宽度为640px，则可能会用980px的虚拟视口渲染页面，然后缩小页面以适应640px的窗口大小。</p><p>这样做是因为许多页面没有做移动端优化，在小窗口渲染时会乱掉（或看起来乱）。所以，这种虚拟视口是一种让未做移动端优化的网站在窄屏设备上看起来更好的办法。</p><a id="more"></a><h1 id="移动浏览器的问题"><a href="#移动浏览器的问题" class="headerlink" title="移动浏览器的问题"></a>移动浏览器的问题</h1><p>当我们将移​​动浏览器与桌面浏览器进行比较时，最明显的区别是屏幕尺寸。移动浏览器显示的桌面优化网站显着少于桌面浏览器; 通过缩小直到文本不可读的小，或者只显示适合屏幕的网站的一小部分。</p><p>移动屏幕远小于桌面屏幕; 考虑最大宽度为400px，有时候要少得多。（有些手机报告的宽度较大，但它们正在撒谎 - 或者至少给我们无用的信息。）</p><p>平板电脑设备的中间层，如iPad或传闻中的基于HP webOS的平板设备，将弥合桌面和移动设备之间的差距，但这不会改变根本问题。网站也必须在移动设备上运行，因此我们必须让它们在小屏幕上显示。</p><p>最重要的问题集中在CSS上，尤其是视口的尺寸。如果我们一对一地复制桌面模型，我们的CSS就会开始惨不忍睹。</p><p>让我们回到我们的侧边栏吧width: 10%。如果移动浏览器与桌面浏览器完全相同，那么它们最多只能生成40px宽的元素，而且这个元素太窄了。你的液体布局看起来会非常可怕。</p><p>解决问题的一种方法是为移动浏览器构建一个特殊网站。即使除了你是否应该这样做的根本问题之外，实际的问题是只有极少数的网站所有者被充分利用以满足移动设备的需求。</p><p>移动浏览器供应商希望为他们的客户提供最佳体验，现在这意味着“尽可能像桌面一样。”因此需要一些技巧。</p><h1 id="设备像素和CSS像素"><a href="#设备像素和CSS像素" class="headerlink" title="设备像素和CSS像素"></a>设备像素和CSS像素</h1><p>讲解viewport视口前先来了解一下这两个概念，这两个概念虽然都是说像素，但是此像素非彼像素。</p><h2 id="设备像素"><a href="#设备像素" class="headerlink" title="设备像素"></a>设备像素</h2><p><strong>设备像素</strong>（device pixel）是物理概念，顾名思义，显示屏是由一个个物理像素点组成的，通过控制每个像素点的颜色，使屏幕显示出不同的图像，屏幕从工厂出来那天起，它上面的物理像素点就固定不变了，单位。</p><blockquote><p>pt在css单位中属于真正的绝对单位，1pt = 1/72(inch),inch及英寸，而1英寸等于2.54厘米。<br>pt = 1/72(英寸), px = 1/dpi(英寸)</p></blockquote><p>不同的设备，其图像基本单位是不同的，比如显示器的点距，可以认为是显示器的物理像素。现在的液晶显示器的点距一般在0.25mm到0.29mm之间。而打印机的墨点，也可以认为是打印机的物理像素，300DPI就是0.085mm，600DPI就是0.042mm。</p><p><img src="dp.jpeg" alt=""></p><p><strong>注意</strong>，我们通常所说的显示器分辨率，其实是指桌面设定的分辨率，而不是显示器的物理分辨率。只不过现在液晶显示器成为主流，由于液晶的显示原理与CRT不同，只有在桌面分辨率与物理分辨率一致的情况下，显示效果最佳，所以现在我们的桌面分辨率几乎总是与显示器的物理分辨率一致了。</p><h2 id="CSS像素"><a href="#CSS像素" class="headerlink" title="CSS像素"></a>CSS像素</h2><p><strong>CSS像素</strong>（css pixel）是Web编程概念，指的是CSS样式代码中使用的逻辑像素。</p><p>在CSS规范中，长度单位分为两类：绝对（absolute）单位和相对（relative）单位。而px是一个相对单位，相对于设备像素。</p><p><strong>CSS像素的相对性</strong></p><p>举个例子理解：</p><p>使用PC端浏览器打开一个网页，网页中有一个宽400px的盒子（块级元素）。浏览器宽为800px，那么这个盒子的宽此时应该占据页面的一半。但是我们使用浏览器中页面放大功能，放大200%，也就是原来的两倍，那么此时该盒子宽应该占满了整个页面。但是既没有调整浏览器窗口大小，也没有改变任何的css样式，但是该盒子却看上去放大了一倍。这是因为使用页面放大功能把css像素放大了两倍。</p><p>CSS像素与屏幕像素1：1同样大小时：</p><p><img src="csslizi1.png" alt=""></p><p>CSS像素(黑色边框)开始被拉伸，此时1个CSS像素大于1个屏幕像素</p><p><img src="csslizi2.png" alt=""></p><p>默认情况下一个CSS像素应该是等同于一个物理像素的，但是浏览器放大的操作让一个CSS像素等于两倍的设备像素。</p><p>而在移动端中的高PPI的设备上，CSS像素在默认情况下就相当于多个设备像素，如iPhone5使用的是Retina视网膜屏幕，使用<code>2px * 2px</code>的设备像素代表<code>1px * 1px</code>的CSS像素。所以设备像素为<code>640 * 1136</code>，而CSS像素为<code>320px * 568px</code>。</p><p><strong>设备独立像素（Device Independent Pixel）简写DIP或DP</strong></p><p>设备独立像素也叫 <strong>密度无关像素</strong> ，可以认为是计算机坐标系统中的一个点，这个点表示一个可以由程序使用并控制的虚拟像素，可以由相关系统转换为物理像素。设备独立像素是一个整体概念，包括了css像素，比如:css像素，<strong>只是在android /ios机中，css像素不叫 “css像素了”，而叫“设备独立像素”</strong>。iOS 中的 pt 和安卓中的单位 dp 本质上是一个概念，设备都是独立像素的意思，只是说法不一样。</p><blockquote><p>所以逻辑上各单位的关系：CSS像素 = 设备独立像素 = 逻辑像素</p></blockquote><h2 id="设备像素与CSS像素的关系"><a href="#设备像素与CSS像素的关系" class="headerlink" title="设备像素与CSS像素的关系"></a>设备像素与CSS像素的关系</h2><p>了解它们间的关系时，先来了解两个概念：<code>ppi</code>和<code>dpr</code></p><blockquote><p>PPI像素密度(pixel per inch) | DPR设备像素比(device pixel ratio)</p></blockquote><h3 id="PPI：屏幕密度"><a href="#PPI：屏幕密度" class="headerlink" title="PPI：屏幕密度"></a>PPI：屏幕密度</h3><p><code>ppi</code>:表示每英寸所拥有的像素数目，数值越高，代表显示屏能够以越高的密度显示图像。即每英寸像素取值，更确切的说法应该是像素密度，也就是衡量单位物理面积内拥有像素值的情况。</p><p><code>ppi</code>的计算公式可以查阅资料<a href="https://zh.wikipedia.org/wiki/%E6%AF%8F%E8%8B%B1%E5%AF%B8%E5%83%8F%E7%B4%A0" target="_blank" rel="noopener">ppi计算公式</a>。</p><p><img src="ppicalc.png" alt=""></p><p>来算一下数学</p><p><img src="calclizi.png" alt=""></p><p>图中以屏幕尺寸为4寸的<code>iPhone 5s</code>为例，分辨率为<code>1136 x 640</code>，代入公式像素密度为<code>326PPI</code>。计算结果会有出入。</p><blockquote><p><strong>DPI</strong>: 每英寸多少点。如果是在当用于描述显示器设备时，ppi和dpi是同一概念，是相等的。</p><p>这里的点是一个抽象的单位，它可以是屏幕像素点、图片像素点也可以是打印机的墨点。</p><p>平时你可能会看到使用<code>DPI</code>来描述图片和屏幕，这时的<code>DPI</code>应该和<code>PPI</code>是等价的，<code>DPI</code>最常用的是用于描述打印机，表示打印机每英寸可以打印的点数。</p><p>一张图片在屏幕上显示时，它的像素点数是规则排列的，每个像素点都有特定的位置和颜色。</p><p>当使用打印机进行打印时，打印机可能不会规则的将这些点打印出来，而是使用一个个打印点来呈现这张图像，这些打印点之间会有一定的空隙，这就是<code>DPI</code>所描述的：打印点的密度</p></blockquote><p><img src="dpiprint.png" alt=""></p><blockquote><p>在上面的图像中我们可以清晰的看到，打印机是如何使用墨点来打印一张图像。所以，打印机的<code>DPI</code>越高，打印图像的精细程度就越高，同时这也会消耗更多的墨点和时间。</p></blockquote><h3 id="DPR：设备像素比"><a href="#DPR：设备像素比" class="headerlink" title="DPR：设备像素比"></a>DPR：设备像素比</h3><p>设备像素比（device pixel ratio）定义了设备像素和设备独立像素（CSS像素）的转换关系，即一个设备像素对应多少个设备独立像素（CSS像素）。</p><ul><li>与设备的关系：<code>DPR = 屏幕横向设备像素 / 设备PPI</code></li><li>与设备像素、CSS像素的关系：<code>DPR = 设备像素 / CSS像素</code></li><li>与 <strong>理想视口</strong>(下文将提到)的关系：<code>DPR = 屏幕横向设备像素 / 理想视口的宽度</code></li></ul><p>在一台移动终端中，设备像素的大小是固定的，不可变的。但是<code>设备独立像素dip</code>是可以被拉长或压缩的。</p><p><img src="whatisdip.png" alt=""></p><p>例如iPhone5s中使用的是Retina视网膜屏幕，即PPI超过300的都叫做超高密度屏幕，只不过苹果公司给了换了个高大上的名字：Retina视网膜屏幕。</p><p>但是在普通屏幕下1个设备像素等于一个CSS像素的设备已经很少了，比如 Iphone 5s 设备像素比为2，Iphone 6s 设备像素比为3。至于安卓机中的设备像素比就更多了，有1.3、1.5、2、3等等。</p><p><strong>如何理解DPR</strong></p><p>设备像素比(dpr) 是指在移动开发中1个css像素占用多少设备像素，如2代表1个css像素用2x2个设备像素来绘制。</p><p>设备像素比(dpr)，公式为<code>1px = (dpr)^2 * 1dp</code>，可以理解为1px由多少个设备像素组成；</p><blockquote><p>打开<code>chrome</code>的开发者工具，我们可以模拟各个手机型号的显示情况，每种型号上面会显示一个尺寸，比如<code>iPhone X</code>显示的尺寸是<code>375x812</code>，实际<code>iPhone X</code>的分辨率会比这高很多，这里显示的就是设备独立像素。</p></blockquote><h3 id="设备像素和CSS像素的关系"><a href="#设备像素和CSS像素的关系" class="headerlink" title="设备像素和CSS像素的关系"></a>设备像素和CSS像素的关系</h3><p>以iPhone6/7/8为例：</p><blockquote><p>设备宽高为375 × 667，可以理解为设备独立像素(或css像素)。<br>dpr为2，根据上面的计算公式，其物理像素就为750 × 1334。</p></blockquote><p><img src="csspixel.png" alt=""></p><p>上图中可以看出，对于这样的css样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">height</span>: 2<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p>在不同的屏幕上(普通屏幕 vs retina屏幕)，css像素所呈现的大小(物理尺寸)是一致的，不同的是1个css像素所对应的物理像素个数是不一致的。</p><p>在普通屏幕下，1个css像素 对应 1个物理像素(1:1)。 在retina 屏幕下，1个css像素对应 4个物理像素(1:4)。</p><h2 id="window-devicePixelRatio"><a href="#window-devicePixelRatio" class="headerlink" title="window.devicePixelRatio"></a>window.devicePixelRatio</h2><p><code>window.devicePixelRatio</code>是设备上物理像素和设备独立像素(device-independent pixels (dips))的比例。<br>公式表示就是：<code>window.devicePixelRatio = 物理像素 / dips</code>。</p><p>dip或dp,（device independent pixels，设备独立像素）与屏幕密度有关。dip可以用来辅助区分视网膜设备还是非视网膜设备。</p><p>所有非视网膜屏幕的iphone在垂直的时候，宽度为320物理像素。当你使用<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code>的时候，会设置视窗布局宽度（不同于视觉区域宽度，不放大显示情况下，两者大小一致，见下图）为320px, 于是，页面很自然地覆盖在屏幕上。</p><p>这样，非视网膜屏幕的iphone上，屏幕物理像素320像素，独立像素也是320像素，因此，window.devicePixelRatio等于1.</p><p>而对于视网膜屏幕的iphone，如iphone4s, 纵向显示的时候，屏幕物理像素640像素。同样，当用户设置<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code>的时候，其视区宽度并不是640像素，而是320像素，这是为了有更好的阅读体验 – 更合适的文字大小。</p><p>这样，在视网膜屏幕的iphone上，屏幕物理像素640像素，独立像素还是320像素，因此，<code>window.devicePixelRatio</code>等于<code>2</code>.</p><blockquote><p>在css中，可以通过-webkit-device-pixel-ratio，webkit-min-device-pixel-ratio和-webkit-max-device-pixel-ratio进行媒体查询，对不同dpr的设备，做一些样式适配(这里只针对webkit内核的浏览器和webview)。</p></blockquote><p><strong>兼容性</strong></p><p>来自<a href="https://caniuse.com/#search=window.devicePixelRatio" target="_blank" rel="noopener">caniuse.com</a></p><p><img src="caniusedevicepixelratio.png" alt=""></p><p>喜忧参半。好的是Safari, Android WebKit, Chrome 22+(Android), Opera Mobile, BlackBerry WebKit, QQ, Palm WebKit, 及Dolfin都能正确实现该属性。</p><p>当然，大部分这些浏览器仍然运行在<code>devicePixelRatio</code>值应该为<code>1</code>的系统上，当它们移动到视网膜类似设备时候，可能就会遇到问题。</p><blockquote><p>注意：你可以为这个 window.devicePixelRatio 重新赋值，但并不会对最终的显示造成任何的影响。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.devicePixelRatio = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.devicePixelRatio); <span class="comment">//10</span></span><br></pre></td></tr></table></figure><h2 id="媒体查询min-device-pixel-ratio"><a href="#媒体查询min-device-pixel-ratio" class="headerlink" title="媒体查询min-device-pixel-ratio"></a>媒体查询min-device-pixel-ratio</h2><p>设备像素比<code>device pixel ratio</code>简称<code>dpr</code>，即物理像素和设备独立像素的比值。</p><p>在<code>web</code>中，浏览器为我们提供了<code>window.devicePixelRatio</code>来帮助我们获取<code>dpr</code>。</p><p>在<code>css</code>中，可以使用媒体查询<code>min-device-pixel-ratio</code>，区分<code>dpr</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> (-webkit-min-device-pixel-ratio: <span class="number">2</span>),(min-device-pixel-ratio: <span class="number">2</span>)&#123; &#125;</span><br></pre></td></tr></table></figure><p>在<code>React Native</code>中，我们也可以使用<code>PixelRatio.get()</code>来获取<code>DPR</code>。</p><p>当然，上面的规则也有例外，<code>iPhone 6、7、8 Plus</code>的实际物理像素是<code>1080 x 1920</code>，在开发者工具中我们可以看到：它的设备独立像素是<code>414 x 736</code>，设备像素比为<code>3</code>，设备独立像素和设备像素比的乘积并不等于<code>1080 x 1920</code>，而是等于<code>1242 x 2208</code>。</p><p>实际上，手机会自动把<code>1242 x 2208</code>个像素点塞进<code>1080 * 1920</code>个物理像素点来渲染，我们不用关心这个过程，而<code>1242 x 2208</code>被称为屏幕的<code>设计像素</code>。我们开发过程中也是以这个<code>设计像素</code>为准。</p><blockquote><p>实际上，从苹果提出视网膜屏幕开始，才出现设备像素比这个概念，因为在这之前，移动设备都是直接使用物理像素来进行展示。</p></blockquote><h2 id="设计师和前端工程师之间如何协同"><a href="#设计师和前端工程师之间如何协同" class="headerlink" title="设计师和前端工程师之间如何协同"></a>设计师和前端工程师之间如何协同</h2><p><strong>视觉稿</strong></p><p>在前端开发之前，视觉MM会给我们一个psd文件，称之为视觉稿。</p><p>对于移动端开发而言，为了做到页面高清的效果，视觉稿的规范往往会遵循以下两点：</p><p>首先，选取一款手机的屏幕宽高作为基准(以前是iphone4的320×480，现在更多的是iphone6的375×667)。<br>对于retina屏幕(如: dpr=2)，为了达到高清效果，视觉稿的画布大小会是基准的2倍，也就是说像素点个数是原来的4倍（对iphone6而言：原先的375×667，就会变成750×1334）。</p><p><strong>设计师和前端开发的适配协作基本思路</strong></p><p>出自手淘：</p><ul><li>选择一种尺寸作为设计和开发基准</li><li>定义一套适配规则，自动适配剩下的两种尺寸(其实不仅这两种，你懂的)</li><li>特殊适配效果给出设计效果</li></ul><p>手淘设计师常选择iPhone6作为基准设计尺寸，交付给前端的设计尺寸是按750px * 1334px为准(高度会随着内容多少而改变)。前端开发人员通过一套适配规则自动适配到其他的尺寸。</p><h1 id="分辨率、像素和屏幕尺寸"><a href="#分辨率、像素和屏幕尺寸" class="headerlink" title="分辨率、像素和屏幕尺寸"></a>分辨率、像素和屏幕尺寸</h1><p>分辨率是指一个块屏幕的像素尺寸。比如说<code>1334 * 750</code>是iPhone6的分辨率。</p><p>屏幕尺寸是指显示屏幕对角线的尺寸，一般用英寸来表示。</p><p>询问别人一粒像素有多大是一个非常鸡贼的问题（小心面试遇到这样的题），虽然我们说像素是构成屏幕的发光的点，是物理的，但是像素在脱离了屏幕尺寸之后是没有大小可言的，你可以将 1920 * 1080 颗像素放到一台 40 寸的小米电视机里面，也可以将同样多的像素全部塞到一台 5.5 寸的 iPhone7 Plus 手机里面去，那么对于 40 寸的电视而言，每个像素颗粒当然会大于 5.5 寸的手机的像素。</p><p><img src="tvandphone.jpeg" alt=""></p><p>所以光看屏幕的分辨率对于设计师来说是不具备多少实际意义的，通过分辨率计算得出的像素密度（PPI）才是设计师要关心的问题，我们通过屏幕分辨率和屏幕尺寸就能计算出屏幕的像素密度的。</p><p>再次使用 iPhone（6~7）作为例子。我们知道该屏幕的横向物理尺寸为 2.3 英寸 ，且横向具有 750 颗像素，根据下面的公式，我们能够算出 iPhone（6~7）的屏幕是 326 PPI，意为每寸存在 326 颗像素。</p><p>其实不论我们怎么除，计算得出来的像素密度（PPI）都会是这个数，宽存在像素除以宽物理长度，高存在像素除以高物理长度，得数都接近于 326。</p><h2 id="英寸"><a href="#英寸" class="headerlink" title="英寸"></a>英寸</h2><p>一般用英寸描述屏幕的物理大小，如电脑显示器的<code>17</code>、<code>22</code>，手机显示器的<code>4.8</code>、<code>5.7</code>等使用的单位都是英寸。</p><p>需要注意，上面的尺寸都是屏幕对角线的长度</p><p>英寸(<code>inch</code>,缩写为<code>in</code>)在荷兰语中的本意是大拇指，一英寸就是指甲底部普通人拇指的宽度。</p><p>英寸和厘米的换算：<code>1英寸 = 2.54 厘米</code></p><h2 id="像素"><a href="#像素" class="headerlink" title="像素"></a>像素</h2><p>像素即一个小方块，它具有特定的位置和颜色。</p><p>图片、电子屏幕（手机、电脑）就是由无数个具有特定颜色和特定位置的小方块拼接而成。</p><p>像素可以作为图片或电子屏幕的最小组成单位。</p><h2 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h2><p>屏幕分辨率指一个屏幕具体由多少个像素点组成。</p><p><code>iPhone XS Max</code> 和 <code>iPhone SE</code>的分辨率分别为<code>2688 x 1242</code>和<code>1136 x 640</code>。这表示手机分别在垂直和水平上所具有的像素点数。</p><p>当然分辨率高不代表屏幕就清晰，屏幕的清晰程度还与尺寸有关。</p><h2 id="图像分辨率"><a href="#图像分辨率" class="headerlink" title="图像分辨率"></a>图像分辨率</h2><p>我们通常说的<code>图片分辨率</code>其实是指图片含有的<code>像素数</code>，比如一张图片的分辨率为<code>800 x 400</code>。这表示图片分别在垂直和水平上所具有的像素点数为<code>800</code>和<code>400</code>。</p><p>同一尺寸的图片，分辨率越高，图片越清晰。</p><h1 id="viewport视口"><a href="#viewport视口" class="headerlink" title="viewport视口"></a>viewport视口</h1><p>在移动设备上的浏览器都会认为自己能让所有网站显示，即使不是为移动设备设计的网站。但是以浏览器可视区域为viewport的话，移动设备屏幕都不宽，所以那些为桌面浏览器设计的网站放到移动设备显示的时候，必然会因为viewport太窄而挤作一团，甚至布局也会乱掉。虽然市面上说某某手机分辨率达到<code>768 * 1024</code>，甚至到达2k屏的分辨率，那这么高的分辨率用来显示桌面网站应该没有问题吧。但是在上述文中<code>CSS像素</code>中的1px只是一个相对值，并不能够直接代表等于屏幕上的1px。手机分辨率越大，但是屏幕尺寸不变的情况下，css像素中的1px就回代表更多的物理像素，才能让1px的东西在屏幕上的大小与那些低分辨率的设备差不多，不然会因为太过于小而使得肉眼无法看清。</p><p>所以在移动设备下，浏览器的viewport可以分为三个：可视视口（visual viewport）、布局视口（layout viewport）和理想视口（ideal viewport）。（来自ppk大神观点）</p><blockquote><p>视口(<code>viewport</code>)代表当前可见的计算机图形区域。在<code>Web</code>浏览器术语中，通常与浏览器窗口相同，但不包括浏览器的<code>UI</code>， 菜单栏等——即指你正在浏览的文档的那一部分。</p></blockquote><h2 id="可视视口"><a href="#可视视口" class="headerlink" title="可视视口"></a>可视视口</h2><p>可视视口就是目前在屏幕上显示页面的一部分。用户可以滚动以更改用户自己所看到的部分，或者缩放以更改可视窗口的大小。</p><p><img src="visualviewport.jpg" alt=""></p><p>但是，CSS布局（尤其是百分比宽度）是相对于布局视口计算的， 布局视口比视觉视口宽得多。</p><p>因此，<code>&lt;html&gt;</code>元素最初采用布局视口的宽度，并且您的CSS被解释为屏幕明显比手机屏幕宽。这可确保您网站的布局与桌面浏览器上的布局相同。</p><p>布局视口有多宽？这与浏览器不同。<code>Safari iPhone</code>使用<code>980px</code>，<code>Opera</code>使用<code>850px</code>，<code>Android WebKit</code>使用<code>800px</code>和<code>IE</code>使用<code>974px</code>。</p><blockquote><p>可视视口的宽度可以通过<code>window.innerWidth</code>获取，但是在Android 2, Oprea mini 和 UC 8中无法正确获取。</p></blockquote><h2 id="布局视口"><a href="#布局视口" class="headerlink" title="布局视口"></a>布局视口</h2><p>一般移动设备的浏览器都默认设置了一个 viewport 元标签，定义一个虚拟的布局视口（layout viewport），用于解决早期的页面在手机上显示的问题。iOS, Android 基本都将这个视口分辨率设置为 980px，所以 PC 上的网页基本能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p><p><strong>完全缩小的情况下：visual viewport = layout viewport</strong></p><p><img src="vv=lv.jpg" alt=""></p><p>浏览器选择了布局视口的尺寸，使其在完全缩小模式下完全覆盖屏幕（因此等于可视视口）.</p><p><strong>不完全缩小的情况下：layout viewport &gt; visual viewport</strong></p><p><img src="lv&gt;vv.jpg" alt=""></p><p>布局视口的宽度和高度等于在不完全缩小模式下可以在屏幕上显示的任何宽度和高度。当用户放大这些尺寸时保持不变。</p><p>在放大和缩小的过程中，<code>visual viewport</code>和<code>layout viewport</code>的宽，高都没发生任何的变化,变化的仅仅就像是用户拿着这个<code>visual viewport</code>去远离或者靠近<code>layout viewport</code>，在远离或者靠近的过程中，就会呈现出缩放的效果来。</p><blockquote><p>布局视口的宽度/高度可以通过<code>document.documentElement.clientWidth / Height</code>获取。</p></blockquote><h2 id="布局视口和可视视口的联系"><a href="#布局视口和可视视口的联系" class="headerlink" title="布局视口和可视视口的联系"></a>布局视口和可视视口的联系</h2><p>可以把<code>layout viewport</code>理解为一张完全遮住并且不能更边大小的白纸，把<code>visual viewport</code>理解为一个有边框的透视器，你可以通过这个透视器来查看这张白纸的内容。通过这个透视器你可以一点点的看到白纸部分内容，这里所能看到的就是<code>visual viewport</code>。你也可以靠近或者远离的方式来透视白纸（白纸静止不动），你看的内容可以变多或者变少，但是白纸<code>layout viewport</code>自身的大小和形状是不会发生改变的。</p><h2 id="理想视口"><a href="#理想视口" class="headerlink" title="理想视口"></a>理想视口</h2><p>布局视口的默认宽度并不是一个理想的宽度，于是 Apple 和其他浏览器厂商引入了理想视口的概念，它对设备而言是最理想的布局视口尺寸。显示在理想视口中的网站具有最理想的宽度，用户无需进行缩放。</p><blockquote><p>完美适配：首先不需要用户缩放和横向滚动条就能正常的查看网站的所有内容；第二，显示的文字的大小是合适，比如一段14px大小的文字，不会因为在一个高密度像素的屏幕里显示得太小而无法看清，理想的情况是这段14px的文字无论是在何种密度屏幕，何种分辨率下，显示出来的大小都是差不多的。当然，不只是文字，其他元素像图片什么的也是这个道理。</p></blockquote><p>理想视口的值其实就是屏幕分辨率的值，它对应的像素叫做设备逻辑像素（device independent pixel, dip）。dip 和设备的物理像素无关，一个 dip 在任意像素密度的设备屏幕上都占据相同的空间。如果用户没有进行<code>缩放</code>，那么一个 CSS 像素就等于一个 dip。</p><p><code>ideal viewport</code>并没有一个固定的尺寸，不同的设备拥有有不同的<code>ideal viewport</code>。所有的iphone的<code>ideal viewport</code>宽度都是320px，无论它的屏幕宽度是320还是640，也就是说，在iphone中，css中的320px就代表iphone屏幕的宽度。</p><p>但是安卓设备就比较复杂了，有320px的，有360px的，有384px的等等，关于不同的设备ideal viewport的宽度都为多少，可以到 <a href="http://viewportsizes.com" target="_blank" rel="noopener">http://viewportsizes.com</a> 去查看一下，里面收集了众多设备的理想宽度。</p><p>用下面的方法可以使布局视口与理想视口的宽度一致：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h2><p>两个视口都以CSS像素为单位进行测量。但是，当视觉视口尺寸随着缩放而变化时（如果放大，屏幕上的CSS像素较少），布局视口尺寸保持不变。（如果他们没有，您的页面将不断重排，因为重新计算百分比宽度。）</p><p>缩放是相对于<code>ideal viewport</code>缩放的，缩放值越大，当前viewport的宽度就会越小，反之亦然。例如在iphone中，<code>ideal viewport</code> 的宽度是320px，如果我们设置<code>initial-scale=2</code>，此时 viewport 的宽度会变为只有160px了，这也好理解，放大了一倍嘛，就是原来1px的东西变成2px了，但是1px变为2px并不是把原来的320px变为640px了，而是在实际宽度不变的情况下，1px变得跟原来的2px的长度一样了，所以放大2倍后原来需要320px才能填满的宽度现在只需要160px就做到了。因此，我们可以得出一个公式：</p><p><strong>视觉视口和缩放比例的关系为：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">visual viewport宽度 = ideal viewport宽度 / 当前缩放值</span><br><span class="line"></span><br><span class="line">当前缩放值 = 理想视口宽度  / 视觉视口宽度</span><br></pre></td></tr></table></figure><p>所以，当用户放大时，视觉视口将会变小，CSS 像素将跨越更多的物理像素。</p><h2 id="获取视口大小"><a href="#获取视口大小" class="headerlink" title="获取视口大小"></a>获取视口大小</h2><p><img src="getviewport.png" alt=""></p><ul><li><p><code>window.innerHeight</code>：获取浏览器视觉视口高度（包括垂直滚动条）。</p></li><li><p><code>window.outerHeight</code>：获取浏览器窗口外部的高度。表示整个浏览器窗口的高度，包括侧边栏、窗口镶边和调正窗口大小的边框。</p></li><li><p><code>window.screen.Height</code>：获取获屏幕取理想视口高度，这个数值是固定的，`设备的分辨率/设备像素比</p></li><li><p><code>window.screen.availHeight</code>：浏览器窗口可用的高度。</p></li><li><p><code>document.documentElement.clientHeight</code>：获取浏览器布局视口高度，包括内边距，但不包括垂直滚动条、边框和外边距。</p></li><li><p><code>document.documentElement.offsetHeight</code>：包括内边距、滚动条、边框和外边距。</p></li><li><p><code>document.documentElement.scrollHeight</code>：在不使用滚动条的情况下适合视口中的所有内容所需的最小宽度。测量方式与<code>clientHeight</code>相同：它包含元素的内边距，但不包括边框，外边距或垂直滚动条。</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>ppk大神把移动设备上的viewport分为 <strong>layout viewport</strong> 、 <strong>visual viewport</strong> 和 <strong>ideal viewport</strong> 三类，其中的<code>ideal viewport</code>是最适合移动设备的viewport，<code>ideal viewport</code>的宽度等于移动设备的屏幕宽度，只要在css中把某一元素的宽度设为<code>ideal viewport</code>的宽度(单位用px)，那么这个元素的宽度就是设备屏幕的宽度了，也就是宽度为100%的效果。<code>ideal viewport</code> 的意义在于，无论在何种分辨率的屏幕下，那些针对<code>ideal viewport</code>而设计的网站，不需要用户手动缩放，也不需要出现横向滚动条，都可以完美的呈现给用户。</p><h1 id="利用meta标签对viewport进行控制"><a href="#利用meta标签对viewport进行控制" class="headerlink" title="利用meta标签对viewport进行控制"></a>利用meta标签对viewport进行控制</h1><p>移动设备默认的viewport是layout viewport，也就是那个比屏幕要宽的viewport，但在进行移动设备网站的开发时，我们需要的是ideal viewport。那么怎么才能得到ideal viewport呢？这就该轮到meta标签出场了。</p><p>我们可以使用视口元标签（viewport meta 标签）来进行布局视口的设置。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上述<code>meta</code>标签的作用是让当前viewport的宽度等于设备的宽度，同时不允许用户手动缩放。</p><p><code>meta viewport</code>标签首先是由苹果公司在其<code>safari</code>浏览器中引入的，目的就是解决移动设备的<code>viewport</code>问题。后来安卓以及各大浏览器厂商也都纷纷效仿，引入对meta viewport的支持，事实也证明这个东西还是非常有用的。</p><p>在苹果的规范中，meta viewport 有6个属性(暂且把content中的那些东西称为一个个属性和值)，如下：</p><table><thead><tr><th>属性</th><th>取值</th><th>描述</th></tr></thead><tbody><tr><td>width</td><td>正整数或device-width</td><td>定义视口的宽度，单位为像素</td></tr><tr><td>height</td><td>正整数或device-height</td><td>定义视口的高度，单位为像素，一般不用</td></tr><tr><td>initial-scale</td><td>[0.0-10.0]</td><td>定义初始缩放值</td></tr><tr><td>minimum-scale</td><td>[0.0-10.0]</td><td>定义放大最大比例，它必须小于或等于maximum-scale设置</td></tr><tr><td>maximum-scale</td><td>[0.0-10.0]</td><td>定义缩小最小比例，它必须大于或等于minimum-scale设置</td></tr><tr><td>user-scalable</td><td>yes / no</td><td>定义是否允许用户手动缩放页面，默认值 yes</td></tr></tbody></table><p><strong>有几点需要注意：</strong></p><ul><li>viewport 标签只对移动端浏览器有效，对 PC 端浏览器是无效的</li><li>当缩放比例为 100% 时，dip 宽度 = CSS 像素宽度 = 理想视口的宽度 = 布局视口的宽度</li><li>单独设置 initial-scale 或 width 都会有兼容性问题，所以设置布局视口为理想视口的最佳方法是同时设置这两个属性</li><li>即使设置了 user-scalable = no，在 Android Chrome 浏览器中也可以强制启用手动缩放</li></ul><p>这些属性可以同时使用，也可以单独使用或混合使用，多个属性同时使用时用逗号隔开就行了。</p><p>此外，在安卓中还支持<code>target-densitydpi</code> 这个私有属性，它表示目标设备的密度等级，作用是决定css中的1px代表多少物理像素。</p><table><thead><tr><th>属性</th><th>取值</th><th>描述</th></tr></thead><tbody><tr><td>target-densitydpi</td><td>high-dpi,medium-dpi,low-dpi,device-dpi</td><td>私有属性，它表示目标设备的密度等级，作用是决定css中的1px代表多少物理像素</td></tr></tbody></table><p>特别说明的是，当<code>target-densitydpi=device-dpi</code>时， css中的1px会等于物理像素中的1px。</p><p>因为这个属性只有安卓支持，并且安卓已经决定要废弃<code>&lt;strike&gt;target-densitydpi&lt;/strike&gt;</code>  这个属性了，所以这个属性我们要避免进行使用。</p><h1 id="动态改变meta-viewport标签"><a href="#动态改变meta-viewport标签" class="headerlink" title="动态改变meta viewport标签"></a>动态改变meta viewport标签</h1><h2 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h2><p>使用<code>document.write</code>来动态输出<code>meta viewport</code>标签，例如</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;'</span>)</span><br></pre></td></tr></table></figure><h2 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h2><p>通过<code>setAttribute</code>来改变</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">id</span>=<span class="string">"testViewport"</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width = 380"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mvp = <span class="built_in">document</span>.getElementById(<span class="string">'testViewport'</span>);</span></span><br><span class="line"><span class="javascript">mvp.setAttribute(<span class="string">'content'</span>,<span class="string">'width=480'</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安卓2.3自带浏览器上的一个<code>bug</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">alert(<span class="built_in">document</span>.documentElement.clientWidth); <span class="comment">//弹出600，正常情况应该弹出320</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=600"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">alert(<span class="built_in">document</span>.documentElement.clientWidth); <span class="comment">//弹出320，正常情况应该弹出600</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试的手机<code>ideal viewport</code>宽度为320px，第一次弹出的值是600,但这个值应该是第行meta标签的结果啊，然后第二次弹出的值是320，这才是第一行meta标签所达到的效果啊，所以在安卓2.3(或许是所有2.x版本中)的自带浏览器中，对<code>meta viewport</code>标签进行覆盖或更改，会出现让人非常迷糊的结果。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://segmentfault.com/a/1190000015884091" target="_blank" rel="noopener">https://segmentfault.com/a/1190000015884091</a></p><p><a href="https://www.quirksmode.org/mobile/viewports.html" target="_blank" rel="noopener">https://www.quirksmode.org/mobile/viewports.html</a></p><p><a href="https://www.quirksmode.org/mobile/viewports2.html" target="_blank" rel="noopener">https://www.quirksmode.org/mobile/viewports2.html</a></p><p><a href="https://www.quirksmode.org/mobile/metaviewport/" target="_blank" rel="noopener">https://www.quirksmode.org/mobile/metaviewport/</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Mobile/Viewport_meta_tag" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Mobile/Viewport_meta_tag</a></p><p><a href="https://www.jianshu.com/p/af6dad66e49a" target="_blank" rel="noopener">https://www.jianshu.com/p/af6dad66e49a</a></p><p><a href="http://viewportsizes.com" target="_blank" rel="noopener">http://viewportsizes.com</a></p><p><a href="https://juejin.im/post/5bb6c62be51d450e47142c60" target="_blank" rel="noopener">https://juejin.im/post/5bb6c62be51d450e47142c60</a></p><p><a href="https://www.jianshu.com/p/3d28f4959c5a" target="_blank" rel="noopener">https://www.jianshu.com/p/3d28f4959c5a</a></p><p><a href="https://stackoverflow.com/questions/6333927/difference-between-visual-viewport-and-layout-viewport" target="_blank" rel="noopener">https://stackoverflow.com/questions/6333927/difference-between-visual-viewport-and-layout-viewport</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;浏览器的&lt;code&gt;viewport&lt;/code&gt;是可以看到Web内容的窗口区域，通常与渲染出的页面的大小不同，这种情况下，浏览器会提供滚动条以滚动访问所有内容。&lt;/p&gt;
&lt;p&gt;窄屏幕设备（如移动设备）在一个虚拟窗口或视口中渲染页面，这个窗口或视口通常比屏幕宽；然后缩小渲染的结果，以便在一屏内显示所有内容。然后用户可以移动、缩放以查看页面的不同区域。例如，如果移动屏幕的宽度为640px，则可能会用980px的虚拟视口渲染页面，然后缩小页面以适应640px的窗口大小。&lt;/p&gt;
&lt;p&gt;这样做是因为许多页面没有做移动端优化，在小窗口渲染时会乱掉（或看起来乱）。所以，这种虚拟视口是一种让未做移动端优化的网站在窄屏设备上看起来更好的办法。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://hackycy.github.io/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://hackycy.github.io/tags/HTML/"/>
    
      <category term="移动端适配" scheme="http://hackycy.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Android build.gradle配置详解</title>
    <link href="http://hackycy.github.io/2019/04/10/Android-build-gradle%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://hackycy.github.io/2019/04/10/Android-build-gradle配置详解/</id>
    <published>2019-04-10T04:21:25.000Z</published>
    <updated>2019-04-10T06:41:38.111Z</updated>
    
    <content type="html"><![CDATA[<p>AS是采用gradle来进行构建项目，而gradle是基于groovy语言。这里了解一下项目中gradle的详细配置。</p><a id="more"></a><p><img src="project.png" alt="一个最简单的项目结构"></p><h1 id="Project的build-gradle文件"><a href="#Project的build-gradle文件" class="headerlink" title="Project的build.gradle文件"></a>Project的build.gradle文件</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        google()<span class="comment">//从Android Studio3.0后新增了google()配置，可以引用google上的开源项</span></span><br><span class="line">        jcenter()<span class="comment">//是一个类似于github的代码托管仓库，声明了jcenter()配置，可以轻松引用 jcenter上的开源项目</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.3.2'</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;<span class="comment">//这里是项目本身需要的依赖，比如项目所需的maven库</span></span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行gradle clean时，执行此处定义的task任务。</span></span><br><span class="line"><span class="comment">// 该任务继承自Delete，删除根目录中的build目录。</span></span><br><span class="line"><span class="comment">// 相当于执行Delete.delete(rootProject.buildDir)。</span></span><br><span class="line"><span class="comment">// gradle使用groovy语言，调用method时可以不用加（）。</span></span><br><span class="line"><span class="keyword">task</span> clean(type: <span class="keyword">Delete</span>) &#123;</span><br><span class="line">    <span class="keyword">delete</span> rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>buildscript{}</code>闭包是gradle脚本执行所需要的依赖，分别是对应的maven库和插件<ul><li><code>repositories{}</code>闭包：配置远程仓库,该闭包中声明了jcenter()和google()的配置，其中jcenter是一个代码托管仓库，上面托管了很多Android开源项目，在这里配置了jcenter后我们可以在项目中方便引用jcenter上的开源项目，从Android Studio3.0后新增了google()配置，可以引用google上的开源项目</li><li><code>dependencies{}</code>闭包：配置构建工具,该闭包使用classpath声明了一个Gradle插件，由于Gradle并不只是用来构建Android项目，因此此处引入相关插件来构建Android项目，其中’3.0.0’为该插件的版本号，可以根据最新的版本号来调整</li></ul></li><li><code>allprojects{}</code>闭包是项目本身需要的依赖，比如项目所需要的maven库</li><li><code>task clean(type: Delete)</code>是运行gradle clean时，执行此处定义的task任务，该任务继承自Delete，删除根目录中的build目录。其中buildscript包含repositories闭包和dependencies闭包</li></ul><h1 id="Module的build-gradle文件"><a href="#Module的build-gradle文件" class="headerlink" title="Module的build.gradle文件"></a>Module的build.gradle文件</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">28</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"cn.net.sweetlover.myapplication"</span></span><br><span class="line">        minSdkVersion <span class="number">15</span></span><br><span class="line">        targetSdkVersion <span class="number">28</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android-optimize.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:28.0.0'</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.3'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="apply-plugin"><a href="#apply-plugin" class="headerlink" title="apply plugin"></a>apply plugin</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明是Android程序，</span></span><br><span class="line"><span class="comment">//com.android.application 表示这是一个应用程序模块</span></span><br><span class="line"><span class="comment">//com.android.library 标识这是一个库模块</span></span><br><span class="line"><span class="comment">//而这区别：前者可以直接运行，后着是依附别的应用程序运行</span></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br></pre></td></tr></table></figure><p>apply plugin表示应用了一个插件，一般有两种值可选：</p><ul><li><code>com.android.application</code>，表示该模块为应用程序模块，可以直接运行，打包得到的是<code>apk</code>文件</li><li><code>com.android.library</code>，表示该模块为库模块，只能作为代码库依附与别的应用程序模块来运行，打包得到的是<code>aar</code>文件</li></ul><h2 id="android-闭包"><a href="#android-闭包" class="headerlink" title="android{}闭包"></a>android{}闭包</h2><p>这个闭包主要为了配置项目构建的各种属性：</p><h3 id="signingConfigs"><a href="#signingConfigs" class="headerlink" title="signingConfigs{}"></a>signingConfigs{}</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">signingConfigs &#123;<span class="comment">// 自动化打包配置</span></span><br><span class="line">        release &#123;<span class="comment">// 线上环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.keystore'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 开发环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.keystore'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以手动添加签名配置，也可以通过<code>Project Structure</code>-&gt;<code>app</code>-&gt;<code>Singing</code>，点击下面<code>+</code>号填入配置信息即可生成代码配置。</p><p><img src="sign_auto.png" alt="AS配置"></p><p>签名配置完成后可以方便带签名打包，在module的<code>Build Variants</code>中有两个<code>Type</code>，分别是<code>debug</code>和<code>release</code>，可以选择任意一个类型进行打包，并且他们会利用各自配置的Key进行打包，执行 Run app或者<code>Build</code>-&gt;<code>Build apk</code>就会自动在<code>module name/app/build/outputs/apk</code>路径下生成Apk文件。另一种打包方式是Build-&gt;Generate Signed APK填写签名信息生成Apk。</p><h3 id="compileSdkVersion"><a href="#compileSdkVersion" class="headerlink" title="compileSdkVersion"></a>compileSdkVersion</h3><p>设置编译时用的Android版本</p><h3 id="buildToolsVersion"><a href="#buildToolsVersion" class="headerlink" title="buildToolsVersion"></a>buildToolsVersion</h3><p>设置编译时使用的构建工具的版本，Android Studio3.0后去除此项配置</p><h3 id="defaultConfig"><a href="#defaultConfig" class="headerlink" title="defaultConfig{}"></a>defaultConfig{}</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"cn.net.sweetlover.myapplication"</span><span class="comment">//项目的包名</span></span><br><span class="line">        minSdkVersion <span class="number">16</span><span class="comment">//项目最低兼容的版本</span></span><br><span class="line">        targetSdkVersion <span class="number">27</span><span class="comment">//项目的目标版本</span></span><br><span class="line">        versionCode <span class="number">1</span><span class="comment">//版本号</span></span><br><span class="line">        versionName <span class="string">"1.0"</span><span class="comment">//版本名称</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span><span class="comment">//表明要使用AndroidJUnitRunner进行单元测试</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><code>applicationId</code>：指定了项目的包名。</li><li><code>minSdkVersion</code>:指定项目最低兼容的版本，如果设备小于这个版本或者大于maxSdkVersion(一般不用)将无法安装这个应用，这里指定为16，表示最低兼容到Android 4.1系统。</li><li><code>targetSdkVersion</code>:指定项目的目标版本，表示在该目标版本上已经做过充分测试，系统会为该应用启动一些对应该目标系统的最新功能特性，Android系统平台的行为变更，只有targetSdkVersion的属性值被设置为大于或等于该系统平台的API版本时，才会生效。例如，若指定targetSdkVersion值为22，则表示该程序最高只在Android5.1版本上做过充分测试，在Android6.0系统上（对应targetSdkVersion为23）拥有的新特性如系统运行时权限等功能就不会被启用。</li><li><code>versionCode</code>:表示版本号，一般每次打包上线时该值只能增加，打包后看不见。</li><li><code>versionName</code>:表示版本名称，展示在应用市场上。</li><li><code>testInstrumentationRunner</code>:<code>&quot;android.support.test.runner.AndroidJUnitRunner&quot;</code>表明要使用<code>AndroidJUnitRunner</code>进行单元测试。</li></ul><h3 id="buildTypes"><a href="#buildTypes" class="headerlink" title="buildTypes{}"></a>buildTypes{}</h3><p>这个闭包主要指定生成安装文件的主要配置，一般包含两个子闭包，一个是<code>debug</code>闭包，用于指定生成测试版安装文件的配置，可以忽略不写；另一个是<code>release</code>闭包，用于指定生成正式版安装文件的配置。两者能配置的参数相同，最大的区别默认属性配置不一样，两种模式支持的属性配置如下图：</p><p><img src="buildtype.png" alt=""></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;<span class="comment">// 生产/测试环境配置</span></span><br><span class="line">        release &#123;<span class="comment">// 生产环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"false"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://release.cn/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.release<span class="comment">//设置签名信息</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 测试环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"true"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://test.com/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.debug<span class="comment">//设置签名信息</span></span><br><span class="line">            debuggable <span class="keyword">false</span><span class="comment">//是否支持断点调试</span></span><br><span class="line">            jniDebuggable <span class="keyword">false</span><span class="comment">//是否可以调试NDK代码</span></span><br><span class="line">            renderscriptDebuggable <span class="keyword">false</span><span class="comment">//是否开启渲染脚本就是一些c写的渲染方法</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>release{}</code>闭包和<code>debug{}</code>闭包两者能配置的参数相同，最大的区别默认属性配置不一样：</p><ul><li><code>minifyEnabled</code>:表明是否对代码进行混淆，true表示对代码进行混淆，false表示对代码不进行混淆，默认的是false。</li><li><code>proguardFiles</code>:指定混淆的规则文件，这里指定了<code>proguard-android.txt</code>文件和<code>proguard-rules.pro</code>文件两个文件，<code>proguard-android.txt</code>文件为默认的混淆文件，里面定义了一些通用的混淆规则。<code>proguard-rules.pro</code>文件位于当前项目的根目录下，可以在该文件中定义一些项目特有的混淆规则。</li><li><code>buildConfigField</code>:用于解决Beta版本服务和Release版本服务地址不同或者一些Log打印需求控制的。 <strong>例如：配置buildConfigField(“boolean”, “LOG_DEBUG”, “true”)</strong>，这个方法接收三个非空的参数，第一个：确定值的类型，第二个：指定key的名字，第三个：传值，调用的时候BuildConfig.LOG_DEBUG即可调用。</li><li><code>debuggable</code>:表示是否支持断点调试，release默认为false，debug默认为true。</li><li><code>jniDebuggable</code>:表示是否可以调试NDK代码，使用lldb进行c和c++代码调试，release默认为false。</li><li><code>signingConfig</code>:设置签名信息，通过<code>signingConfigs.release</code>或者<code>signingConfigs.debug</code>，配置相应的签名，但是添加此配置前必须先添加<code>signingConfigs</code>闭包，添加相应的签名信息。</li><li><code>renderscriptDebuggable</code>:表示是否开启渲染脚本就是一些c写的渲染方法，默认为false。</li><li><code>renderscriptOptimLevel</code>:表示渲染等级，默认是3。</li><li><code>pseudoLocalesEnabled</code>:是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多。</li><li><code>applicationIdSuffix</code>:和defaultConfig中配置是一的，这里是在applicationId 中添加了一个后缀，一般使用的不多。</li><li><code>versionNameSuffix</code>:表示添加版本名称的后缀，一般使用的不多。</li><li><code>zipAlignEnabled</code>:表示是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率，release和debug默认都为true。</li></ul><h3 id="sourceSets"><a href="#sourceSets" class="headerlink" title="sourceSets{}"></a>sourceSets{}</h3><p>配置目录指向</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span> &#123;<span class="comment">//目录指向配置</span></span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]<span class="comment">//指定lib库目录</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>配置 <code>jniLibs.srcDirs = [&#39;libs&#39;]</code>，可以在<code>Android studio</code>的<code>Android</code>视图下生成<code>jniLibs</code>文件夹，可以方便我们存放jar包和库文件，其中<code>Android</code>视图下的<code>jniLibs</code>和<code>project</code>视图下的<code>libs</code>指向同一文件夹（app→libs），如下图所示：</p><p><img src="sourceset.png" alt=""></p><h3 id="packagingOptions"><a href="#packagingOptions" class="headerlink" title="packagingOptions{}"></a>packagingOptions{}</h3><p>打包时的相关配置</p><p>当项目中依赖的第三方库越来越多时，有可能会出现两个依赖库中存在同一个（名称）文件。如果这样，Gradle在打包时就会提示错误（警告）。那么就可以根据提示，然后使用以下方法将重复的文件剔除，比较常用的是通过exclude去除重复的文件，例如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">packagingOptions&#123;</span><br><span class="line">        <span class="comment">//pickFirsts做用是 当有重复文件时 打包会报错 这样配置会使用第一个匹配的文件打包进入apk</span></span><br><span class="line">        <span class="comment">// 表示当apk中有重复的META-INF目录下有重复的LICENSE文件时  只用第一个 这样打包就不会报错</span></span><br><span class="line">        pickFirsts = [<span class="string">'META-INF/LICENSE'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//merges何必 当出现重复文件时 合并重复的文件 然后打包入apk</span></span><br><span class="line">        <span class="comment">//这个是有默认值得 merges = [] 这样会把默默认值去掉  所以我们用下面这种方式 在默认值后添加</span></span><br><span class="line">        merge <span class="string">'META-INF/LICENSE'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个是在同时使用butterknife、dagger2做的一个处理。同理，遇到类似的问题，只要根据gradle的提示，做类似处理即可。</span></span><br><span class="line">        <span class="keyword">exclude</span> <span class="string">'META-INF/services/javax.annotation.processing.Processor'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="productFlavors"><a href="#productFlavors" class="headerlink" title="productFlavors{}"></a>productFlavors{}</h3><p>多渠道配置</p><p>这个配置是经常会使用到的，通常在适配多个渠道的时候，需要为特定的渠道做部分特殊的处理，比如设置不同的包名、应用名等。场景：当我们使用友盟统计时，通常需要设置一个渠道ID，那么我们就可以利用productFlavors来生成对应渠道信息的包，如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">android &#123;  </span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        wandoujia &#123;</span><br><span class="line">            <span class="comment">//豌豆荚渠道包配置</span></span><br><span class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class="string">"wandoujia"</span>]</span><br><span class="line">            <span class="comment">//manifestPlaceholders的使用在后续章节（AndroidManifest里的占位符）中介绍</span></span><br><span class="line">        &#125;</span><br><span class="line">        xiaomi &#123;</span><br><span class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class="string">"xiaomi"</span>]</span><br><span class="line">            applicationId <span class="string">"com.wiky.gradle.xiaomi"</span> <span class="comment">//配置包名</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        _360 &#123;</span><br><span class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class="string">"_360"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更简洁的方式：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">android &#123;  </span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        wandoujia &#123;&#125;</span><br><span class="line">        xiaomi &#123;&#125;</span><br><span class="line">        _360 &#123;&#125;</span><br><span class="line">       <span class="comment">//...</span></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    productFlavors.all &#123; </span><br><span class="line">        <span class="comment">//批量修改，类似一个循序遍历</span></span><br><span class="line">        flavor -&gt; flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name] </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完之后，在命令行窗口中（Terminal）中输入<code>gradlew assembleRelease</code>（windows）即可开始打包，在Mac系统中对应指令是<code>./gradlew assembleRelease</code>。当然，如果想要debug版本的包，将指令中<code>assembleRelease</code>改为<code>assembleDebug</code>即可。最后生成的包还是在<code>app/build/outputs/apk</code>中，默认命名格式如<code>app-wandoujia-release-unsigned.apk</code>，在module的<code>Build Variants</code>中可以选择相应的渠道。<br>注：Android Studio3.0需在主app的build.gradle里面的</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    targetSdkVersion：***</span><br><span class="line">    minSdkVersion ：***</span><br><span class="line">    versionCode：***</span><br><span class="line">    versionName ：***</span><br><span class="line">    <span class="comment">//版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了</span></span><br><span class="line">    flavorDimensions <span class="string">"versionCode"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lintOptions"><a href="#lintOptions" class="headerlink" title="lintOptions{}"></a>lintOptions{}</h3><p>代码扫描分析</p><p>Lint 是Android Studio 提供的 代码扫描分析工具，它可以帮助我们发现代码结构/质量问题，同时提供一些解决方案，而且这个过程不需要我们手写测试用例。</p><p>Lint 发现的每个问题都有描述信息和等级（和测试发现 bug 很相似），我们可以很方便地定位问题，同时按照严重程度进行解决。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关</span></span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        abortOnError <span class="keyword">false</span> <span class="comment">//即使报错也不会停止打包</span></span><br><span class="line">        checkReleaseBuilds <span class="keyword">false</span>  <span class="comment">//打包release版本的时候进行检测</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="dependencies"><a href="#dependencies" class="headerlink" title="dependencies{}"></a>dependencies{}</h2><p>该闭包定义了项目的依赖关系，一般项目都有三种依赖方式：本地依赖、库依赖和远程依赖。本地依赖可以对本地的jar包或目录添加依赖关系，库依赖可以对项目中的库模块添加依赖关系，远程依赖可以对jcener库上的开源项目添加依赖关系。从Android Studio3.0后<code>compile</code>引入库不在使用，而是通过<code>api</code>和<code>implementation</code>，<code>api</code>完全等同于以前的<code>compile</code>，用<code>api</code>引入的库整个项目都可以使用，用<code>implementation</code>引入的库只有对应的Module能使用，其他Module不能使用，由于之前的项目统一用<code>compile</code>依赖，导致的情况就是模块耦合性太高，不利于项目拆解，使用<code>implementation</code>之后虽然使用起来复杂了但是做到降低偶合兴提高安全性。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(<span class="keyword">include</span>: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:28.0.0'</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.3'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>implementation fileTree(include: [&#39;*.jar&#39;], dir: &#39;libs&#39;)</code>：<code>implementation fileTree</code>是一个本地依赖声明，表示将libs目录下所有.jar后缀的文件都添加到项目的构建路径当中。</p><p><code>testImplementation</code>和<code>androidTestImplementation</code>：表示声明测试用例库。</p><h2 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明是Android程序，</span></span><br><span class="line"><span class="comment">//com.android.application 表示这是一个应用程序模块</span></span><br><span class="line"><span class="comment">//com.android.library 标识这是一个库模块</span></span><br><span class="line"><span class="comment">//而这区别：前者可以直接运行，后着是依附别的应用程序运行</span></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    signingConfigs &#123;<span class="comment">// 自动化打包配置</span></span><br><span class="line">        release &#123;<span class="comment">// 线上环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.jks'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 开发环境</span></span><br><span class="line">            keyAlias <span class="string">'test'</span></span><br><span class="line">            keyPassword <span class="string">'123456'</span></span><br><span class="line">            storeFile <span class="keyword">file</span>(<span class="string">'test.jks'</span>)</span><br><span class="line">            storePassword <span class="string">'123456'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileSdkVersion <span class="number">27</span><span class="comment">//设置编译时用的Android版本</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"cn.net.sweetlover.myapplication"</span><span class="comment">//项目的包名</span></span><br><span class="line">        minSdkVersion <span class="number">16</span><span class="comment">//项目最低兼容的版本</span></span><br><span class="line">        targetSdkVersion <span class="number">27</span><span class="comment">//项目的目标版本</span></span><br><span class="line">        versionCode <span class="number">1</span><span class="comment">//版本号</span></span><br><span class="line">        versionName <span class="string">"1.0"</span><span class="comment">//版本名称</span></span><br><span class="line">        flavorDimensions <span class="string">"versionCode"</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span><span class="comment">//表明要使用AndroidJUnitRunner进行单元测试</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;<span class="comment">// 生产/测试环境配置</span></span><br><span class="line">        release &#123;<span class="comment">// 生产环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"false"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://release.cn/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.release<span class="comment">//设置签名信息</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;<span class="comment">// 测试环境</span></span><br><span class="line">            buildConfigField(<span class="string">"boolean"</span>, <span class="string">"LOG_DEBUG"</span>, <span class="string">"true"</span>)<span class="comment">//配置Log日志</span></span><br><span class="line">            buildConfigField(<span class="string">"String"</span>, <span class="string">"URL_PERFIX"</span>, <span class="string">"\"https://test.com/\""</span>)<span class="comment">// 配置URL前缀</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span><span class="comment">//是否对代码进行混淆</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span><span class="comment">//指定混淆的规则文件</span></span><br><span class="line">            signingConfig signingConfigs.debug<span class="comment">//设置签名信息</span></span><br><span class="line">            debuggable <span class="keyword">false</span><span class="comment">//是否支持断点调试</span></span><br><span class="line">            jniDebuggable <span class="keyword">false</span><span class="comment">//是否可以调试NDK代码</span></span><br><span class="line">            renderscriptDebuggable <span class="keyword">false</span><span class="comment">//是否开启渲染脚本就是一些c写的渲染方法</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span><span class="comment">//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率</span></span><br><span class="line">            pseudoLocalesEnabled <span class="keyword">false</span><span class="comment">//是否在APK中生成伪语言环境，帮助国际化的东西，一般使用的不多</span></span><br><span class="line">            applicationIdSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">            versionNameSuffix <span class="string">'test'</span><span class="comment">//在applicationId 中添加了一个后缀，一般使用的不多</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;<span class="comment">//目录指向配置</span></span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]<span class="comment">//指定lib库目录</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    packagingOptions&#123;<span class="comment">//打包时的相关配置</span></span><br><span class="line">        <span class="comment">//pickFirsts做用是 当有重复文件时 打包会报错 这样配置会使用第一个匹配的文件打包进入apk</span></span><br><span class="line">        <span class="comment">// 表示当apk中有重复的META-INF目录下有重复的LICENSE文件时  只用第一个 这样打包就不会报错</span></span><br><span class="line">        pickFirsts = [<span class="string">'META-INF/LICENSE'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//merges何必 当出现重复文件时 合并重复的文件 然后打包入apk</span></span><br><span class="line">        <span class="comment">//这个是有默认值得 merges = [] 这样会把默默认值去掉  所以我们用下面这种方式 在默认值后添加</span></span><br><span class="line">        merge <span class="string">'META-INF/LICENSE'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个是在同时使用butterknife、dagger2做的一个处理。同理，遇到类似的问题，只要根据gradle的提示，做类似处理即可。</span></span><br><span class="line">        <span class="keyword">exclude</span> <span class="string">'META-INF/services/javax.annotation.processing.Processor'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        wandoujia &#123;&#125;</span><br><span class="line">        xiaomi &#123;&#125;</span><br><span class="line">        _360 &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    productFlavors.all &#123;</span><br><span class="line">            <span class="comment">//批量修改，类似一个循序遍历</span></span><br><span class="line">        flavor -&gt; flavor.manifestPlaceholders = [IFLYTEK_CHANNEL: name]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关</span></span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        abortOnError <span class="keyword">false</span></span><br><span class="line">        <span class="comment">//即使报错也不会停止打包</span></span><br><span class="line">        checkReleaseBuilds <span class="keyword">false</span></span><br><span class="line">        <span class="comment">//打包release版本的时候进行检测</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">//项目的依赖关系</span></span><br><span class="line">    implementation <span class="keyword">fileTree</span>(<span class="keyword">include</span>: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span><br><span class="line">    <span class="comment">//本地jar包依赖</span></span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:27.1.1'</span></span><br><span class="line">    <span class="comment">//远程依赖</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.2'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    <span class="comment">//声明测试用例库</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h1><h2 id="AS一键生成"><a href="#AS一键生成" class="headerlink" title="AS一键生成"></a>AS一键生成</h2><p>1、AS菜单中<code>Build</code>-&gt;<code>Generate Signed APK</code>点击</p><p><img src="signcreate1.png" alt=""></p><p>2、点击<code>Create New...</code></p><blockquote><p>”Create new…”新建一个签名文件<br>”Choose existing…”选择一个已经存在的签名文件</p></blockquote><p>3、填写完整的签名信息。</p><p><img src="newkeystore.png" alt=""></p><p>填写完毕点击<code>OK</code></p><p><strong>参数介绍</strong></p><ul><li><code>Key store path</code> : 签名文件路径</li><li><code>Password</code> : 签名密码</li><li><code>Confirm</code> : 确认密码</li><li><code>Alias</code> : 别名</li><li><code>Validity ( years )</code> : 有限期 （年）</li><li><code>First and Last Name</code> : 全名</li><li><code>Organizational Unit</code> : 组织单位</li><li><code>Organization</code> : 组织</li><li><code>City or Locality</code> : 城市或地方</li><li><code>State or Province</code> : 州或省</li><li><code>Country Code(XX)</code> : 国家代码</li></ul><blockquote><p>这里密码统一填写“android”，别名写个“key”即可。其他的信息根据实际情况和需求填写，并不很重要。</p></blockquote><p>4、生成文件名后缀为<code>keystore</code></p><p><img src="lastcreate.png" alt=""></p><blockquote><p>选V1打包出来的app是jar的（一般这种就是当做第三方导入项目来用的），<br>选v2打包出来的APP是apk版本的（也就是可以直接在手机上安装的，可是上线的）；</p></blockquote><p>一般情况下两个同时选择即可。然后点击<code>Finish</code>完成生成签名。</p><p><strong>原因：</strong></p><p>v2的用途解释：<br>1.用于验证其完整性的APK的加密签名现在位于ZIP中央目录之前。<br>2.这个签名是在整个APK文件的二进制内容上计算和验证的，而不是在v1的归档文件中解压缩文件内容。<br>3.一个APK可以同时由v1和v2签名同时签署，所以它仍然可以向后兼容以前的Android版本。</p><p>但是只设置v2会引起7.0以下会直接安装完显示未安装，7.0以上则使用了V2的方式验证 </p><p>报错信息为：<code>INSTALL_PARSE_FAILED_NO_CERTIFICATES</code>。</p><p>同时设置V1和V2则所有机型都没问题。而只设置v1签名并不会影响什么，但是在7.0上不会使用更安全的验证方式</p><blockquote><p>如果你想在使用Android分级插件时禁用添加v1或v2的签名，你可以将这些行添加到你的signingConfig部分。<br>v1SigningEnabled false<br>v2SigningEnabled false</p></blockquote><h2 id="命令行生成"><a href="#命令行生成" class="headerlink" title="命令行生成"></a>命令行生成</h2><p>配置jdk后</p><p>运行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> forever -keyalg RSA -validity 10000 -keystore forever.keystore</span><br></pre></td></tr></table></figure></p><p><strong>这里关键文字的代表意义：</strong></p><ul><li>forever：keystore的别名alias</li><li>10000：keystore的有效天数</li><li>forever.keystore：keystore的名称</li></ul><p>1、第一次输入的秘钥库口令即为forever.keystore的密码<br>2、然后填写相关的信息<br>3、生成对应的forever.keystore，文件地址在cmd命令的对应路径下面</p><p><img src="cmdcreate.png" alt=""></p><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><h2 id="Project的setting-gradle文件"><a href="#Project的setting-gradle文件" class="headerlink" title="Project的setting.gradle文件"></a>Project的setting.gradle文件</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">':app'</span></span><br></pre></td></tr></table></figure><p>setting.gradle 文件在 初始化过程中被执行，构建器通过<code>setting.gradle</code> 文件中的内容了解哪些模块将被<code>build</code>。</p><blockquote><p>注意：单模块项目不一定需要有 setting 文件，但一旦有多个模块，必须要有 setting 文件，同时也要写明所有要构建的模块，否则 gradle 不会 build 不包括的模块。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AS是采用gradle来进行构建项目，而gradle是基于groovy语言。这里了解一下项目中gradle的详细配置。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://hackycy.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://hackycy.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
